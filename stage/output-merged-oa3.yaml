openapi: 3.0.3
info:
  contact: {}
  description: >-
    The CNAPP Swagger Documentation provides a comprehensive overview of the CNAPP through a well-structured and standardized interface. This 		Swagger document defines a set of APIs that allow users to interact with CNAPP services, enabling the management and control of cloud workloads
  title: AccuKnox CNAPP Swagger Documents
  version: '1.0'
security:
  - Basic: []
paths:
  '/reporter/v1/download/{report_id}':
    get:
      description: Download the generated report PDF
      parameters:
        - description: Report File ID
          in: path
          name: report_id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/model.ErrorDTO'
        '500':
          description: Internal Server Error
          content:
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/model.ErrorDTO'
      security:
        - Bearer: []
        - X-Tenant-Id: []
      summary: Download report
      tags:
        - Download
  '/reporter/v1/history/{id}':
    get:
      description: >-
        Get the history of reports generated for a particular report
        configuration
      parameters:
        - description: Report Configuration ID
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.ResponseReportHistory'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.ErrorDTO'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.ErrorDTO'
      security:
        - Bearer: []
        - X-Tenant-Id: []
      summary: Report generation history
      tags:
        - History
  /reporter/v1/settings:
    delete:
      description: Delete a report configuration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.RequestDeleteReports'
        description: Delete report configuration
        required: true
      responses:
        '200':
          description: Deleted Successfully
          content:
            application/json:
              schema:
                type: string
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.ErrorDTO'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.ErrorDTO'
      security:
        - Bearer: []
        - X-Tenant-Id: []
      summary: Delete report configuration
      tags:
        - Settings
    post:
      description: Create a new report configuration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.RequestCreateReports'
        description: Create report configuration
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.ResponseCreateReports'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.ErrorDTO'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.ErrorDTO'
      security:
        - Bearer: []
        - X-Tenant-Id: []
      summary: Create report configuration
      tags:
        - Settings
    put:
      description: Update existing report configuration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.RequestUpdateReports'
        description: Update report configuration
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.ResponseUpdateReports'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.ErrorDTO'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.ErrorDTO'
      security:
        - Bearer: []
        - X-Tenant-Id: []
      summary: Update report configuration
      tags:
        - Settings
  '/reporter/v1/settings/{id}':
    get:
      description: Get report configuration details
      parameters:
        - description: Report Configuration ID
          in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.ResponseListReports'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.ErrorDTO'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.ErrorDTO'
      security:
        - Bearer: []
        - X-Tenant-Id: []
      summary: Get report configuration
      tags:
        - Settings
  /reporter/v1/settings/list:
    get:
      description: Get the list of all report configuration
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/model.ResponseListAllReports'
                type: array
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.ErrorDTO'
      security:
        - Bearer: []
        - X-Tenant-Id: []
      summary: List report configuration
      tags:
        - Settings
  /cluster-management-service/api/v1/cluster-management/all-namespaces:
    post:
      description: All Namespaces
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dto.NamespacesRequest'
        description: Request Body
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/dto.Namespace'
                type: array
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
      security:
        - Bearer: []
        - X-Tenant-Id: []
      summary: AllNamspacesController
      tags:
        - cluster-management
  /cluster-management-service/api/v1/cluster-management/clusters-in-workspace-filter:
    post:
      description: Cluster In Workspace Filter
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dto.ClustersInWorkspaceRequest'
        description: Request Body
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/dto.ClusterFilter'
                type: array
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
      security:
        - Bearer: []
        - X-Tenant-Id: []
      summary: ClustersInWorkspaceFilterController
      tags:
        - cluster-management
  /cluster-management-service/api/v1/cluster-management/containers-in-pod:
    post:
      description: Container In Pod
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dto.ContainersInPodRequest'
        description: Request Body
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ContainerResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
      security:
        - Bearer: []
        - X-Tenant-Id: []
      summary: ContainerInPodController
      tags:
        - cluster-management
  /cluster-management-service/api/v1/cluster-management/containers-in-pod-filter:
    post:
      description: Container In Pod Filter
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dto.GetContainersInPodRequest'
        description: Request Body
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/dto.ContainerFilter'
                type: array
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
      security:
        - Bearer: []
        - X-Tenant-Id: []
      summary: ContainerInPodFilterController
      tags:
        - cluster-management
  /cluster-management-service/api/v1/cluster-management/get-all-clusters-in-workspace:
    post:
      description: Get Clusters In Workspace
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dto.ClustersInWorkspaceRequest'
        description: Request Body
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/dto.ClusterMeta'
                type: array
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
      security:
        - Bearer: []
        - X-Tenant-Id: []
      summary: GetClustersInWorkspaceController
      tags:
        - cluster-management
  /cluster-management-service/api/v1/cluster-management/get-all-container-in-pod:
    post:
      description: Get Container In Pod
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dto.GetContainersInPodRequest'
        description: Request Body
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/dto.GetContainerFilter'
                type: array
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
      security:
        - Bearer: []
        - X-Tenant-Id: []
      summary: GetContainerInPodController
      tags:
        - cluster-management
  /cluster-management-service/api/v1/cluster-management/get-all-pod-in-node:
    post:
      description: Get pod In Node
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dto.GetPodsInNodeRequest'
        description: Request Body
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/dto.GetPodFilter'
                type: array
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
      security:
        - Bearer: []
        - X-Tenant-Id: []
      summary: GetPodInNodeController
      tags:
        - cluster-management
  /cluster-management-service/api/v1/cluster-management/get-cluster-entity-info:
    post:
      description: Get Clusters Entity Information
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dto.GetClustersEntityRequest'
        description: Request Body
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.GetClustersEntityInfo'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
      security:
        - Bearer: []
        - X-Tenant-Id: []
      summary: GetClustersEntityInfoController
      tags:
        - cluster-management
  /cluster-management-service/api/v1/cluster-management/get-cluster-ids:
    post:
      description: Get The Cluster ID
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dto.ClusterIDsRequestDto'
        description: Request Body
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/dto.ClusterIDsResponseDto'
                type: array
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
      security:
        - Bearer: []
        - X-Tenant-Id: []
      summary: GetClusterIDController
      tags:
        - cluster-management
  /cluster-management-service/api/v1/cluster-management/get-cluster-names:
    post:
      description: Get Cluster Names
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties: true
              type: object
        description: Request Body
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: string
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
      security:
        - Bearer: []
        - X-Tenant-Id: []
      summary: GetClusterNamesController
      tags:
        - cluster-management
  /cluster-management-service/api/v1/cluster-management/get-endpoints-details:
    post:
      description: Endpoints Details
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties: true
              type: object
        description: Request Body
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/dto.Endpoint'
                type: array
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
      security:
        - Bearer: []
        - X-Tenant-Id: []
      summary: EndpointsDetailsController
      tags:
        - cluster-management
  /cluster-management-service/api/v1/cluster-management/get-pod-meta-data-count:
    post:
      description: Pod Meta Data Count
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dto.PodMetaDataRequest'
        description: Request Body
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.PodMetadataCountResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
      security:
        - Bearer: []
        - X-Tenant-Id: []
      summary: PodMetadataCountController
      tags:
        - cluster-management
  /cluster-management-service/api/v1/cluster-management/get-pods:
    post:
      description: Get Pods
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dto.GetPodsRequest'
        description: Request Body
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/dto.GetPodResponse'
                type: array
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
      security:
        - Bearer: []
        - X-Tenant-Id: []
      summary: GetPodsController
      tags:
        - cluster-management
  /cluster-management-service/api/v1/cluster-management/get-service-details:
    post:
      description: Service Details
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties: true
              type: object
        description: Request Body
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/dto.Service'
                type: array
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
      security:
        - Bearer: []
        - X-Tenant-Id: []
      summary: ServiceDetailsController
      tags:
        - cluster-management
  '/cluster-management-service/api/v1/cluster-management/namespace/{id}':
    get:
      description: Get Namespace
      parameters:
        - description: Namespace Id
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: string
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
      security:
        - Bearer: []
        - X-Tenant-Id: []
      summary: GetNamespace
      tags:
        - cluster-management
  /cluster-management-service/api/v1/cluster-management/node-pod-of-container:
    post:
      description: Node Pod Of Container
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties: true
              type: object
        description: Request Body
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/dto.NodePodPair'
                type: array
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
      security:
        - Bearer: []
        - X-Tenant-Id: []
      summary: NodePodOfContainerController
      tags:
        - cluster-management
  /cluster-management-service/api/v1/cluster-management/nodes-in-cluster:
    post:
      description: Node In Cluster
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dto.NodesInClusterRequest'
        description: Request Body
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.NodeResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
      security:
        - Bearer: []
        - X-Tenant-Id: []
      summary: NodesInClusterController
      tags:
        - cluster-management
  /cluster-management-service/api/v1/cluster-management/nodes-in-cluster-filter:
    post:
      description: Node In Cluster Filter
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dto.NodesInClusterRequest'
        description: Request Body
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/dto.NodeFilter'
                type: array
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
      security:
        - Bearer: []
        - X-Tenant-Id: []
      summary: NodesInClusterFilterController
      tags:
        - cluster-management
  /cluster-management-service/api/v1/cluster-management/pods-in-node-filter:
    post:
      description: Pod In Node Filter
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dto.PodsInNodeRequest'
        description: Request Body
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/dto.PodFilter'
                type: array
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
      security:
        - Bearer: []
        - X-Tenant-Id: []
      summary: PodInNodeFilterController
      tags:
        - cluster-management
  /cluster-management-service/api/v1/cluster-management/retrieve-node-list:
    post:
      description: Retrieve Node
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dto.ResourcesRequest'
        description: Request Body
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ResourcesResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
      security:
        - Bearer: []
        - X-Tenant-Id: []
      summary: RetrieveNodeController
      tags:
        - cluster-management
  /cluster-management-service/api/v1/cluster-management/retrieve-pods-and-its-nodes:
    post:
      description: Retrieve Node Pod
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dto.ResourcesRequest'
        description: Request Body
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ResourcesResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
      security:
        - Bearer: []
        - X-Tenant-Id: []
      summary: RetrieveNodePodController
      tags:
        - cluster-management
  /cluster-management-service/api/v1/cluster-management/store-posture:
    post:
      description: Retrieve Node
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dto.StorePosture'
        description: Request Body
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: string
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
      security:
        - Bearer: []
        - X-Tenant-Id: []
      summary: StorePosture
      tags:
        - cluster-management
  /cluster-management-service/api/v1/cluster-management/workload-type-update:
    post:
      description: Workload type Update
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties: true
              type: object
        description: Request Body
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: string
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
      security:
        - Bearer: []
        - X-Tenant-Id: []
      summary: WorkloadTypeUpdateController
      tags:
        - cluster-management
  /cluster-management-service/api/v1/deboard-cluster:
    post:
      description: Deboard Clusters
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dto.Deboardcluster'
        description: Request Body
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ResponseMessage'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
      security:
        - Bearer: []
        - X-Tenant-Id: []
      summary: Deboardcluster
      tags:
        - Cluster-Onboarding
  /cluster-management-service/api/v1/get-onboarded-clusters:
    get:
      description: Get onboarded Clusters
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/models.Cluster'
                type: array
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
      security:
        - Bearer: []
        - X-Tenant-Id: []
      summary: GetOnboardedClustersController
      tags:
        - Cluster-Onboarding
  /cluster-management-service/api/v1/label/get-label:
    post:
      description: Get label for policy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dto.RequestGetLabelsDTO'
        description: Request Body
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ResponseGetLabelsDTO'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
      security:
        - Bearer: []
        - X-Tenant-Id: []
      summary: GetLabel
      tags:
        - v1-label
  /cluster-management-service/api/v1/store-clusters:
    post:
      description: Store Cluster to workspace
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dto.ClustersRequest'
        description: Request Body
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ResponseClusterHash'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
      security:
        - Bearer: []
        - X-Tenant-Id: []
      summary: StoreClustersController
      tags:
        - Cluster-Onboarding
  /cluster-management-service/api/v1/vm-management/list-processes:
    post:
      description: Machine Services
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dto.MachineServicesRequest'
        description: Request Body
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.MachineServicesResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
      security:
        - Bearer: []
        - X-Tenant-Id: []
      summary: MachineServicesController
      tags:
        - vm-management
  /cluster-management-service/api/v1/vm-management/search-navbar:
    post:
      description: Search Navigation Bar
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dto.SearchQueryEntityRequest'
        description: Request Body
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.DataResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
      security:
        - Bearer: []
        - X-Tenant-Id: []
      summary: SearchNavBarController
      tags:
        - vm-management
  /cluster-management-service/api/v1/vm-management/vm-navbar:
    post:
      description: Vm Navigation Bar
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dto.VmInstanceGroupDTORequest'
        description: Request Body
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.VmInstanceGroupDTOResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
      security:
        - Bearer: []
        - X-Tenant-Id: []
      summary: VmNavBarController
      tags:
        - vm-management
  /cluster-management-service/api/v2/tag/add-tags:
    post:
      description: Add an existing tag to the policy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dto.RequestAddTagsDTO'
        description: Request Body
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: string
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
      security:
        - Bearer: []
        - X-Tenant-Id: []
      summary: AddTags
      tags:
        - v2-tag
  /cluster-management-service/api/v2/tag/get-tags:
    post:
      description: Get an existing tag to the policy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dto.RequestGetTagsDTO'
        description: Request Body
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ResponseGetTagsDTO'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
      security:
        - Bearer: []
        - X-Tenant-Id: []
      summary: GetTags
      tags:
        - v2-tag
  '/cluster-management-service/cluster-onboarding/v2/jointoken/{id}':
    get:
      description: Get a  new join token
      parameters:
        - description: cluster Id
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: string
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
      security:
        - Bearer: []
        - X-Tenant-Id: []
      summary: Get Join Token
      tags:
        - cluster-onboarding-v2
  /cluster-management-service/v2/get-clusters:
    post:
      description: Get Clusters details based on request
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dto.RequestGetClusters'
        description: Request Body
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/dto.Cluster'
                type: array
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
      security:
        - Bearer: []
        - X-Tenant-Id: []
      summary: GetClusters
      tags:
        - cluster-management
  /cluster-management-service/v2/get-pods:
    post:
      description: Get Pod details based on request
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dto.RequestGetPods'
        description: Request Body
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/dto.Pod'
                type: array
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
      security:
        - Bearer: []
        - X-Tenant-Id: []
      summary: GetPods
      tags:
        - cluster-management
  /cluster-management-service/v2/get-workloads:
    post:
      description: Get All Workloads
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dto.RequestGetWorkloads'
        description: Request Body
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/dto.ResponseGetWorkloads'
                type: array
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
      security:
        - Bearer: []
        - X-Tenant-Id: []
      summary: GetWorkloads
      tags:
        - cluster-management
  /cluster-management-service/v2/tenant/cleanup:
    delete:
      description: Clean data of workspace when workspace is delete
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                additionalProperties:
                  type: string
                type: object
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
      security:
        - Bearer: []
      summary: Clean Data of a workspace
      tags:
        - cluster-management
  /cluster-management-service/v2/workloads/get-pods:
    post:
      description: List al pods in workloads
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dto.RequestPodsInWorkload'
        description: Request Body
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/dto.ResponsePodsInWorkload'
                type: array
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
      security:
        - Bearer: []
        - X-Tenant-Id: []
      summary: GetPodsInWorkloads
      tags:
        - cluster-management
  /policy-service/api/v1/audit-log/get-all-group-version:
    post:
      description: Get All Group Version
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/dto.RequestAddAutoDiscoverPoliciesIgnoreFlagDTO
        description: Request Body
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ResponseGetAllGroupsVersionDTO'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
      security:
        - Bearer: []
        - X-Tenant-Id: []
      summary: GetAllGroupVersions
      tags:
        - audit-log-v1
  /policy-service/api/v1/audit-log/get-all-policies-version:
    post:
      description: Get All Policy Version
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dto.RequestGetAllPoliciesVersionDTO'
        description: Request Body
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ResponseGetAllPoliciesVersionDTO'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
      security:
        - Bearer: []
        - X-Tenant-Id: []
      summary: GetAllPoliciesVersion
      tags:
        - audit-log-v1
  /policy-service/api/v1/audit-log/get-compare-two-policies:
    post:
      description: Get Compare Of Two Policy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dto.RequestGetCompareOfTwoPolicyDTO'
        description: Request Body
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ResponseGetCompareOfTwoPolicyDTO'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
      security:
        - Bearer: []
        - X-Tenant-Id: []
      summary: GetCompareOfTwoPolicy
      tags:
        - audit-log-v1
  /policy-service/api/v1/audit-log/get-list-of-policy-changes:
    post:
      description: Get List Of Policy Changes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dto.RequestGetListOfPolicyChangesDTO'
        description: Request Body
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/dto.ResponseGetListOfPolicyChangesDTO'
                type: array
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
      security:
        - Bearer: []
        - X-Tenant-Id: []
      summary: GetListOfPolicyChanges
      tags:
        - audit-log-v1
  /policy-service/api/v1/auto-discover/add-policy:
    post:
      description: Add Auto Discover Policies
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dto.RequestAddAutoDiscoverPoliciesDTO'
        description: Request Body
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: string
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
      security:
        - Bearer: []
        - X-Tenant-Id: []
      summary: AddAutoDiscoverPolicies
      tags:
        - auto-discover-v1
  /policy-service/api/v1/auto-discover/enable-policies-ignore-flag:
    post:
      description: Add Auto Discover Policy Ignore Flag
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/dto.RequestAddAutoDiscoverPoliciesIgnoreFlagDTO
        description: Request Body
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: string
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
      security:
        - Bearer: []
        - X-Tenant-Id: []
      summary: AddAutoDiscoverPolicyIgnoreFlag
      tags:
        - auto-discover-v1
  /policy-service/api/v1/auto-discover/get-policies:
    post:
      description: Get Auto Discover Policies
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dto.RequestGetAutoDiscoverPolicyDTO'
        description: Request Body
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ResponseGetAutoDiscoverPolicyDTO'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
      security:
        - Bearer: []
        - X-Tenant-Id: []
      summary: GetAutoDiscoverPolicies
      tags:
        - auto-discover-v1
  /policy-service/api/v1/policy/check-unique-name:
    post:
      description: Check unique name
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dto.RequestCheckUniqueNameDTO'
        description: Request Body
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: string
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
      security:
        - Bearer: []
        - X-Tenant-Id: []
      summary: CheckUniqueName
      tags:
        - policy-v1
  /policy-service/api/v1/policy/create-policy:
    post:
      description: Create Custom Policy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dto.RequestCreatePolicyDTO'
        description: Request Body
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ResponseCreatePolicyDTO'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
      security:
        - Bearer: []
        - X-Tenant-Id: []
      summary: CreateCustomPolicy
      tags:
        - policy-v1
  /policy-service/api/v1/policy/get-all-pending-policies:
    post:
      description: get all pending policies
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dto.RequestGetAllPendingPoliciesDTO'
        description: Request Body
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ResponseGetAllPendingPoliciesDTO'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
      security:
        - Bearer: []
        - X-Tenant-Id: []
      summary: GetAllPendingPolicies
      tags:
        - policy-v1
  /policy-service/api/v1/policy/get-all-policies:
    post:
      description: get all policies
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dto.RequestGetAllPoliciesV1DTO'
        description: Request Body
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ResponseGetAllPoliciesDTO'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
      security:
        - Bearer: []
        - X-Tenant-Id: []
      summary: GetAllPolicies
      tags:
        - policy-v1
  /policy-service/api/v1/policy/review-policy-change:
    post:
      description: Review Changes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dto.RequestReviewPolicyDTO'
        description: Request Body
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: string
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
      security:
        - Bearer: []
        - X-Tenant-Id: []
      summary: ReviewChanges
      tags:
        - policy-v1
  /policy-service/api/v1/policy/update-policy:
    post:
      description: update Custom Policy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dto.RequestEditPolicyDTO'
        description: Request Body
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: string
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
      security:
        - Bearer: []
        - X-Tenant-Id: []
      summary: UpdateCustomPolicy
      tags:
        - policy-v1
  /policy-service/api/v1/rule/change-rule-status:
    post:
      description: Change Rule Status
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dto.RequestChangeStatusRulesDTO'
        description: Request Body
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: string
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
      security:
        - Bearer: []
        - X-Tenant-Id: []
      summary: ChangeStatusRules
      tags:
        - rule-v1
  /policy-service/api/v1/rule/get-policy-info:
    post:
      description: Get policy Information
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dto.RequestGetRuleDTO'
        description: Request Body
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ResponseGetPolicyInfo'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
      security:
        - Bearer: []
        - X-Tenant-Id: []
      summary: GetPolicyInfo
      tags:
        - rule-v1
  /policy-service/api/v1/rule/get-rules-master:
    post:
      description: Get Rules  Master
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dto.RequestGetRuleMasterDTO'
        description: Request Body
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/dto.ResponseGetRuleMasterDTO'
                type: array
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
      security:
        - Bearer: []
        - X-Tenant-Id: []
      summary: GetRulesMaster
      tags:
        - rule-v1
  /policy-service/api/v1/rule/get-rules-master-details:
    post:
      description: Get Rules Master Details
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dto.RequestGetRuleMasterDetailsDTO'
        description: Request Body
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ResponseGetRuleMasterDetailsDTO'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
      security:
        - Bearer: []
        - X-Tenant-Id: []
      summary: GetRulesMasterDetails
      tags:
        - rule-v1
  /policy-service/api/v1/rule/get-yaml:
    post:
      description: Get YAML of policy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dto.RequestGetRuleDTO'
        description: Request Body
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/dto.ResponseGetPolicyYaml'
                type: array
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
      security:
        - Bearer: []
        - X-Tenant-Id: []
      summary: GetYaml
      tags:
        - rule-v1
  /policy-service/api/v2/audit-log/get-compare-two-policies:
    post:
      description: Get Compare of two policies
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dto.RequestGetCompareOfTwoPolicyDTO'
        description: Request Body
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ResponseGetCompareOfTwoPolicyDTO'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
      security:
        - Bearer: []
        - X-Tenant-Id: []
      summary: GetCompareOfTwoPolicies
      tags:
        - audit-log-v2
  /policy-service/api/v2/policy/approve-policy:
    post:
      description: Approve Custom Policy Rule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dto.RequestApprovePolicyDTO'
        description: Request Body
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: string
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
      security:
        - Bearer: []
        - X-Tenant-Id: []
      summary: ApproveCustomPolicyRule
      tags:
        - policy-v2
  /policy-service/api/v2/policy/change-status-policy:
    post:
      description: Change Policy Status
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dto.RequestChangeStatusPolicyDTO'
        description: Request Body
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: string
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
      security:
        - Bearer: []
        - X-Tenant-Id: []
      summary: ChangePolicyStatus
      tags:
        - policy-v2
  /policy-service/api/v2/policy/delete-policy:
    post:
      description: Remove a policy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dto.RequestDeletePolicyDTO'
        description: Request Body
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: string
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
      security:
        - Bearer: []
        - X-Tenant-Id: []
      summary: RemovePolicy
      tags:
        - policy-v2
  /policy-service/api/v2/policy/deny-policy:
    post:
      description: Deny a policy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dto.RequestDenyPolicyDTO'
        description: Request Body
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: string
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
      security:
        - Bearer: []
        - X-Tenant-Id: []
      summary: DenyPolicy
      tags:
        - policy-v2
  /policy-service/api/v2/recommended/add-recommended-policy:
    post:
      description: Add a recommended policy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dto.RequestAddRecommendedPolicyDTO'
        description: Request Body
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: string
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
      security:
        - Bearer: []
        - X-Tenant-Id: []
      summary: AddPolicy
      tags:
        - recommended-v2
  /policy-service/api/v2/recommended/apply:
    post:
      description: Apply Recommended Policy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dto.RequestApplyRecommendedDTO'
        description: Request Body
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.SuccessDTO'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
      security:
        - Bearer: []
        - X-Tenant-Id: []
      summary: ApplyRecommended
      tags:
        - recommended-v2
  /policy-service/api/v2/recommended/get-policy:
    post:
      description: Get recommended policy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dto.RequestGetRecommendedPolicyDTO'
        description: Request Body
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ResponseGetRecommendedPolicyDTO'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
      security:
        - Bearer: []
        - X-Tenant-Id: []
      summary: GetPolicy
      tags:
        - recommended-v2
  /policy-service/api/v2/recommended/get-workload-list-for-filter:
    post:
      description: get Workload List for Filter
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dto.RequestGetWorkloadListForFilter'
        description: Request Body
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ResponseGetWorkloadListForFilter'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
      security:
        - Bearer: []
        - X-Tenant-Id: []
      summary: GetWorkloadListForFilter
      tags:
        - recommended-v2
  /policy-service/api/v2/recommended/get-yaml:
    post:
      description: get YAML of policy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dto.RequestGetYAMLDTO'
        description: Request Body
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ResponseGetYAMLDTO'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
      security:
        - Bearer: []
        - X-Tenant-Id: []
      summary: GetYAML
      tags:
        - recommended-v2
  /policy-service/api/v2/recommended/hange-ignore-flag:
    post:
      description: Change Ignore Flag
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dto.RequestGetRecommendedPolicyDTO'
        description: Request Body
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.SuccessDTO'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
      security:
        - Bearer: []
        - X-Tenant-Id: []
      summary: ChangeIgnoreFlag
      tags:
        - recommended-v2
  /policy-service/api/v2/rule/get-policy-json-yaml:
    post:
      description: Get policy in json or yaml structure
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dto.RequestGetPolicyJSONorYAMLStrutureDTO'
        description: Request Body
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/dto.ResponseGetPolicyJSONorYAMLStrutureDTO
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
      security:
        - Bearer: []
        - X-Tenant-Id: []
      summary: GetPolicyInJSONorYAMLStructure
      tags:
        - rule-v2
  /policy-service/api/v2/tag/add-tags:
    post:
      description: Add tags to a policy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dto.RequestAddTagsDTO'
        description: Request Body
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: string
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
      security:
        - Bearer: []
        - X-Tenant-Id: []
      summary: AddTags
      tags:
        - tag-v2
  /policy-service/api/v2/tag/delete-tag-with-policy:
    post:
      description: Delete Tag With Policy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dto.RequestDeleteTagWithPolicyDTO'
        description: Request Body
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: string
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
      security:
        - Bearer: []
        - X-Tenant-Id: []
      summary: DeleteTagWithPolicy
      tags:
        - tag-v2
  /policy-service/api/v2/tag/get-tags:
    post:
      description: get tags to a policy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dto.RequestGetTagsDTO'
        description: Request Body
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ResponseGetTagsDTO'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
      security:
        - Bearer: []
        - X-Tenant-Id: []
      summary: GetTags
      tags:
        - tag-v2
  /policy-service/dashboard/v2/policy-count:
    post:
      description: Get Count of Policy on dashbaord
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dto.RequestDashboardPolicyCount'
        description: Request Body
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ResponseDashboardPolicyCount'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
      security:
        - Bearer: []
        - X-Tenant-Id: []
      summary: DashboardPolicyCount
      tags:
        - dashboard-v2
  /policy-service/v2/list-policy:
    post:
      description: List All Policies
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dto.RequestListAllPoliciesDTO'
        description: Request Body
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ResponseListAllPoliciesDTO'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
      security:
        - Bearer: []
        - X-Tenant-Id: []
      summary: ListPolicies
      tags:
        - v2
  /policy-service/v2/policy:
    delete:
      description: Remove The Policy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dto.RequestDeletePoliciesDTO'
        description: Request Body
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: string
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
      security:
        - Bearer: []
        - X-Tenant-Id: []
      summary: RemovePolicies
      tags:
        - v2
    post:
      description: Create New Policy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dto.RequestCreatePolicyDTO'
        description: Request Body
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ResponseCreatePolicyDTO'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
      security:
        - Bearer: []
        - X-Tenant-Id: []
      summary: CreatePolicy
      tags:
        - v2
    put:
      description: Update The Policy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dto.RequestEditPolicyDTO'
        description: Request Body
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: string
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
      security:
        - Bearer: []
        - X-Tenant-Id: []
      summary: UpdatePolicy
      tags:
        - v2
  /policy-service/v2/policy-count:
    post:
      description: Get Policy Count for all category
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dto.RequestPolicyCountDTO'
        description: Request Body
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ResponseGetPoliciesCountDTO'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
      security:
        - Bearer: []
        - X-Tenant-Id: []
      summary: GetPolicyCount
      tags:
        - v2
  '/policy-service/v2/policy/{id}':
    get:
      description: Get policy YAML
      parameters:
        - description: Policy Id
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ResponsePolicy'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
      security:
        - Bearer: []
        - X-Tenant-Id: []
      summary: GetPolicy
      tags:
        - v2
  '/policy-service/v2/policy/{id}/diff':
    get:
      description: Get diff of policy
      parameters:
        - description: Policy Id
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ResponseDiffPolicyDTO'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
      security:
        - Bearer: []
        - X-Tenant-Id: []
      summary: GetDiffOfPolicy
      tags:
        - v2
  '/policy-service/v2/policy/{id}/is_pending':
    get:
      description: Is Pending Policy
      parameters:
        - description: Policy Id
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: boolean
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
      security:
        - Bearer: []
        - X-Tenant-Id: []
      summary: IsPendingController
      tags:
        - v2
  '/policy-service/v2/policy/{id}/pending':
    get:
      description: Get pending policy yaml
      parameters:
        - description: Policy Id
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ResponsePendingPolicyDTO'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
      security:
        - Bearer: []
        - X-Tenant-Id: []
      summary: GetPendingPolicyYaml
      tags:
        - v2
  /policy-service/v2/policy/apply:
    post:
      description: Apply Auto Discover Policies
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dto.RequestAddAutoDiscoverPoliciesDTO'
        description: Request Body
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: string
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
      security:
        - Bearer: []
        - X-Tenant-Id: []
      summary: ApplyAutoDiscoverPolicies
      tags:
        - auto-discover-v1
  /policy-service/v2/policy/approve:
    post:
      description: Approve the policy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dto.RequestBulkApprovePolicyDTO'
        description: Request Body
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: string
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
      security:
        - Bearer: []
        - X-Tenant-Id: []
      summary: ApprovePolicyRule
      tags:
        - v2
  /policy-service/v2/policy/compare:
    post:
      description: Get Compare of two policies
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dto.RequestGetCompareOfTwoPolicyDTO'
        description: Request Body
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ResponseGetCompareOfTwoPolicyDTO'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
      security:
        - Bearer: []
        - X-Tenant-Id: []
      summary: GetCompareOfTwoPolicies
      tags:
        - v2
  /policy-service/v2/policy/discovered/update:
    post:
      description: update Discovered Policy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dto.RequestDiscoverdUpdatePolicyDTO'
        description: Request Body
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: string
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
      security:
        - Bearer: []
        - X-Tenant-Id: []
      summary: UpdateDiscoveredPolicy
      tags:
        - v2
  /policy-service/v2/policy/ignore:
    post:
      description: Add auto discover policies ignore flag
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/dto.RequestAddAutoDiscoverPoliciesIgnoreFlagDTO
        description: Request Body
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: string
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
      security:
        - Bearer: []
        - X-Tenant-Id: []
      summary: AddAutoDiscoverPoliciesIgnoreFlag
      tags:
        - v2
  /policy-service/v2/policy/review:
    post:
      description: It is for Reviewing a Policy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dto.RequestReviewDTO'
        description: Request Body
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: string
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
      security:
        - Bearer: []
        - X-Tenant-Id: []
      summary: ReviewPolicy
      tags:
        - v2
  /policy-service/v2/policy/status:
    post:
      description: Change status of policy in bulk
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dto.RequestChangeStatusPolicyInBulkDTO'
        description: Request Body
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: string
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
      security:
        - Bearer: []
        - X-Tenant-Id: []
      summary: ChangePolicyStatusInBulk
      tags:
        - v2
  /policy-service/v2/settings:
    get:
      description: It is for Getting Policy Setting for a Particular tenant
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ResponsePolicySettingDTO'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
      security:
        - Bearer: []
        - X-Tenant-Id: []
      summary: GetPolicySettings
      tags:
        - v2
  /vulnerability-service/api/v1/dashboard/get-dashboard:
    post:
      description: Get Dashboard of vulnerability
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dto.RequestGetDashboardDTO'
        description: Request Body
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ResponseGetDashboardDTO'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
      security:
        - Bearer: []
        - X-Tenant-Id: []
      summary: GetDashboard
      tags:
        - dashboard
  /vulnerability-service/api/v1/dashboard/get-image-risk-counts:
    post:
      description: Get Image of Risk Count for vulnerability
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dto.RequestGetDashboardDTO'
        description: Request Body
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ResponseGetImageRiskCountDTO'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
      security:
        - Bearer: []
        - X-Tenant-Id: []
      summary: GetImageRiskCounts
      tags:
        - dashboard
  /vulnerability-service/api/v1/dashboard/get-list-of-filter:
    post:
      description: Get List of filter for vulnerability
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dto.RequestGetDashboardDTO'
        description: Request Body
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ResponseListOfFilterDTO'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
      security:
        - Bearer: []
        - X-Tenant-Id: []
      summary: GetListOfFilter
      tags:
        - dashboard
  /vulnerability-service/api/v1/dashboard/get-list-of-images:
    post:
      description: Get list ofImages for vulnerability
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dto.RequestGetListOfImageDTO'
        description: Request Body
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ResponseGetListOfImageDTO'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
      security:
        - Bearer: []
        - X-Tenant-Id: []
      summary: GetListOfImages
      tags:
        - dashboard
  /vulnerability-service/api/v1/dashboard/get-list-of-vulnerabilities:
    post:
      description: Get all vulnerability for vulnerability
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dto.RequestGetAllVulnerabilityDTO'
        description: Request Body
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ResponseGetAllVulnerabilityDTO'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
      security:
        - Bearer: []
        - X-Tenant-Id: []
      summary: GetAllVulnerability
      tags:
        - dashboard
  /vulnerability-service/api/v1/dashboard/get-security-issues:
    post:
      description: Get Security Issues for vulnerability
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dto.RequestGetDashboardDTO'
        description: Request Body
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ResponseGetSecurityIssuesDTO'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
      security:
        - Bearer: []
        - X-Tenant-Id: []
      summary: GetSecurityIssues
      tags:
        - dashboard
  /vulnerability-service/api/v1/registry/add-registry:
    post:
      description: Add a new registry for vulnerability
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dto.RequestAddRegistryDTO'
        description: Request Body
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: string
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
      security:
        - Bearer: []
        - X-Tenant-Id: []
      summary: AddRegistry
      tags:
        - registry
  /vulnerability-service/api/v1/registry/change-status-registry:
    post:
      description: Change Status of registry for vulnerability
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dto.RequestChangeStatusRegistryDTO'
        description: Request Body
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: string
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
      security:
        - Bearer: []
        - X-Tenant-Id: []
      summary: ChangeStatusRegistry
      tags:
        - registry
  /vulnerability-service/api/v1/registry/delete-registry:
    post:
      description: Delete registry for vulnerability
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dto.RequestDeleteRegistryDTO'
        description: Request Body
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: string
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
      security:
        - Bearer: []
        - X-Tenant-Id: []
      summary: DeleteRegistry
      tags:
        - registry
  /vulnerability-service/api/v1/registry/edit-registry:
    post:
      description: Edit registry for vulnerability
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dto.RequestEditRegistryDTO'
        description: Request Body
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: string
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
      security:
        - Bearer: []
        - X-Tenant-Id: []
      summary: EditRegistry
      tags:
        - registry
  /vulnerability-service/api/v1/registry/get-list-of-regions:
    post:
      description: Get list of registry for vulnerability
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dto.RequestGetListOfRegionsDTO'
        description: Request Body
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ResponseGetListOfRegionsDTO'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
      security:
        - Bearer: []
        - X-Tenant-Id: []
      summary: GetListOfRegions
      tags:
        - registry
  /vulnerability-service/api/v1/registry/get-list-of-registry:
    post:
      description: Add a list of registry for vulnerability
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dto.RequestGetListOfRegistryDTO'
        description: Request Body
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ResponseGetListOfRegistryDTO'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
      security:
        - Bearer: []
        - X-Tenant-Id: []
      summary: GetListOfRegistry
      tags:
        - registry
  /vulnerability-service/api/v1/registry/get-registry:
    post:
      description: Get registry for vulnerability
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dto.RequestGetRegistryDTO'
        description: Request Body
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ResponseGetRegistryDTO'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
      security:
        - Bearer: []
        - X-Tenant-Id: []
      summary: GetRegistry
      tags:
        - registry
  /vulnerability-service/api/v1/registry/get-registry-type:
    post:
      description: Get Type of registry
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dto.RequestGetRegistryTypeDTO'
        description: Request Body
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ResponseGetRegistryTypeDTO'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
      security:
        - Bearer: []
        - X-Tenant-Id: []
      summary: GetRegistryType
      tags:
        - registry
  /vulnerability-service/api/v1/registry/save-adhoc-images:
    post:
      description: Save Adhoc Images for vulnerability
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dto.RequestSaveAdhocImages'
        description: Request Body
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: string
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
      security:
        - Bearer: []
        - X-Tenant-Id: []
      summary: SaveAdhocImages
      tags:
        - registry
  /vulnerability-service/api/v1/registry/validate-registry-creds:
    post:
      description: Validate registry for vulnerability
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dto.RequestValidateRegistryCredDTO'
        description: Request Body
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: string
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
      security:
        - Bearer: []
        - X-Tenant-Id: []
      summary: ValidateRegistryCredentials
      tags:
        - registry
  /policy-provider-service/api/v1/policy-provider/change-annotation-status:
    post:
      description: 'Change Annotation Status based on workspace ,cluster and namespace'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dto.RequestChangeAnnotationStatusDTO'
        description: Request Body
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: string
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
      summary: Change Annotation Status
      tags:
        - Annotation
  /policy-provider-service/api/v1/policy-provider/change-status-policy:
    post:
      description: Change Policy Status based on data
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dto.RequestData'
        description: Request Body
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: string
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
      summary: Change policy Status
      tags:
        - Policy
  /policy-provider-service/api/v1/policy-provider/fetch-annotations:
    post:
      description: Fetch Annotation based on workspace and cluster id
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dto.RequestAnnotationDTO'
        description: Request Body
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/dto.ResponseFetchAnnotationDTO'
                type: array
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
      summary: Fetch Annotation
      tags:
        - Annotation
  /policy-provider-service/api/v1/policy-provider/fetch-label-info:
    post:
      description: Fetch Label Info based on workspace and cluster id
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dto.RequestFetchLabelDTO'
        description: Request Body
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/dto.ResponseFetchLabelDTO'
                type: array
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
      summary: Fetch Label Info
      tags:
        - Label
  /policy-provider-service/api/v1/policy-provider/fetch-policy:
    post:
      description: Fetch Policy based on workspace id and cluster id
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dto.RequestFetchPolicyDTO'
        description: Request Body
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/dto.ResponseFetchPolicyDTO'
                type: array
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
      summary: Fetch policy
      tags:
        - Policy
  /policy-provider-service/api/v1/policy-provider/update-label-status:
    post:
      description: Update Label Info Status
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dto.RequestStatusLabelDto'
        description: Request Body
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: string
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
      summary: Acknowledge Status
      tags:
        - Label
  /data-pipeline-api/dashboards/v1/telemetry/system/clusters/actions/count:
    post:
      description: Count KubeArmor cluster actions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dto.KubearmorCountReq'
        description: Request Body
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
      security:
        - Bearer: []
        - X-Tenant-Id: []
      summary: KubearmorActionCount
      tags:
        - dashboards
  /data-pipeline-api/dashboards/v1/telemetry/system/clusters/count:
    post:
      description: Kubearmor Cluster
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dto.KubearmorCountReq'
        description: Request Body
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
      security:
        - Bearer: []
        - X-Tenant-Id: []
      summary: KubearmorCluster
      tags:
        - dashboards
  /data-pipeline-api/dashboards/v1/telemetry/system/namespaces/count:
    post:
      description: Count KubeArmor Namespace
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dto.KubearmorCountReq'
        description: Request Body
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
      security:
        - Bearer: []
        - X-Tenant-Id: []
      summary: CountKubeArmorNamespace
      tags:
        - dashboards
  /data-pipeline-api/dashboards/v1/telemetry/system/workloads/count:
    post:
      description: Count KubeArmor Workloads
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dto.KubearmorCountReq'
        description: Request Body
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
      security:
        - Bearer: []
        - X-Tenant-Id: []
      summary: CountKubeArmorWorkloads
      tags:
        - dashboards
  /data-pipeline-api/datapipeline/v1/alerts/kubearmor/policy/actions/count:
    post:
      description: Count KubeArmor policy action
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dto.KubearmorCountReq'
        description: Request Body
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
      security:
        - Bearer: []
        - X-Tenant-Id: []
      summary: CountKubeArmorPolicyCount
      tags:
        - policy alerts
  /data-pipeline-api/datapipeline/v3/alerts/cilium:
    post:
      description: Cilium Alerts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dto.CiliumAlerts'
        description: Request Body
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
      security:
        - Bearer: []
        - X-Tenant-Id: []
      summary: CiliumAlerts
      tags:
        - cilium-alerts
  /data-pipeline-api/datapipeline/v3/alerts/cilium/count:
    post:
      description: Cilium Count
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dto.CiliumCount'
        description: Request Body
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
      security:
        - Bearer: []
        - X-Tenant-Id: []
      summary: CiliumCount
      tags:
        - cilium-alerts
  /data-pipeline-api/datapipeline/v3/alerts/fields:
    post:
      description: DSL Filter
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dto.DslFilter'
        description: Request Body
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                additionalProperties:
                  additionalProperties: true
                  type: object
                type: object
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
      security:
        - Bearer: []
        - X-Tenant-Id: []
      summary: Dslfilterproperty
      tags:
        - DSL Filter
  /data-pipeline-api/datapipeline/v3/alerts/kubearmor:
    post:
      description: Kubearmor Alert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dto.KubearmorAlerts'
        description: Request Body
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
      security:
        - Bearer: []
        - X-Tenant-Id: []
      summary: KubearmorAlert
      tags:
        - Kubearmor-alerts
  /data-pipeline-api/datapipeline/v3/alerts/kubearmor/count:
    post:
      description: Kubearmor Count
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dto.KubearmorCount'
        description: Request Body
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
      security:
        - Bearer: []
        - X-Tenant-Id: []
      summary: KubearmorCount
      tags:
        - Kubearmor-alerts
  /data-pipeline-api/datapipeline/v4/alerts/kubearmor/actions/count:
    post:
      description: Counts Action for added filters i.e Tags and Policies
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dto.KubeArmorAlertCountReq'
        description: Request Body
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/dto.KubeArmorAlertCountResponse'
                type: array
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
      security:
        - Bearer: []
        - X-Tenant-Id: []
      summary: KubearmorActionCount
      tags:
        - dashboards
  '/policy-storage-service/api/v1/policy/{policyId}':
    get:
      description: Get policy by policy id
      parameters:
        - description: Policy Id
          in: path
          name: policyId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.Policy'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ResponseDTO'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ResponseDTO'
      security:
        - Bearer: []
        - X-Tenant-Id: []
      summary: Get policy
      tags:
        - Policy-Storage-Service
  /policy-storage-service/api/v1/policy/apply-policy:
    post:
      description: Apply Policy and list in all policy screen
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dto.RequestApplyPolicyDTO'
        description: Request Body
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ResponseApplyPolicyDTO'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ResponseDTO'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ResponseDTO'
      security:
        - Bearer: []
        - X-Tenant-Id: []
      summary: Apply Policy
      tags:
        - Policy-Storage-Service
  '/policy-storage-service/api/v1/policy/clusters/{workspaceId}':
    get:
      description: Get Clusters based on current tenant id
      parameters:
        - description: workspace Id
          in: path
          name: workspaceId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ResponseGetClusters'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ResponseDTO'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ResponseDTO'
      security:
        - Bearer: []
        - X-Tenant-Id: []
      summary: Get Clusters
      tags:
        - Policy-Storage-Service
  /policy-storage-service/api/v1/policy/delete:
    post:
      description: Delete policy by policy id
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dto.RequestDeletePolicyDTO'
        description: Request Body
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ResponsePolicyDTO'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ResponseDTO'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ResponseDTO'
      security:
        - Bearer: []
        - X-Tenant-Id: []
      summary: Delete policy
      tags:
        - Policy-Storage-Service
  /policy-storage-service/api/v1/policy/download:
    post:
      description: Get all policy of current tenant id
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dto.RequestGetPoliciesDTO'
        description: Request Body
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/dto.Policy'
                type: array
        '204':
          description: No Content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ResponseDTO'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ResponseDTO'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ResponseDTO'
      security:
        - Bearer: []
        - X-Tenant-Id: []
      summary: Get policies
      tags:
        - Policy-Storage-Service
  /policy-storage-service/api/v1/policy/labels:
    post:
      description: 'Get Labels for policy based on namespace , node , pod'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dto.RequestGetLabelsDTO1'
        description: Request Body
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ResponseGetLabels'
        '204':
          description: No Content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ResponseDTO'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ResponseDTO'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ResponseDTO'
      security:
        - Bearer: []
        - X-Tenant-Id: []
      summary: Get Labels
      tags:
        - Policy-Storage-Service
  /policy-storage-service/api/v1/policy/namespaces:
    post:
      description: Get Namespace based on current tenant id and cluster id
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dto.RequestNamespaceDTO'
        description: Request Body
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ResponseGetNamespacesDTO'
        '204':
          description: No Content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ResponseDTO'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ResponseDTO'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ResponseDTO'
      security:
        - Bearer: []
        - X-Tenant-Id: []
      summary: Get Namespace
      tags:
        - Policy-Storage-Service
  /policy-storage-service/api/v1/policy/policies:
    post:
      description: List Policy of current tenant id
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dto.RequestListPolicies'
        description: Request Body
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ResponseListPolicies'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ResponseDTO'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ResponseDTO'
      security:
        - Bearer: []
        - X-Tenant-Id: []
      summary: List Policy
      tags:
        - Policy-Storage-Service
  /policy-storage-service/api/v1/policy/store:
    post:
      description: Save new policy to current tenant id
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dto.RequestCreatePoliciesDTO'
        description: Request Body
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ResponsePolicyDTO'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ResponseDTO'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ResponseDTO'
      security:
        - Bearer: []
        - X-Tenant-Id: []
      summary: Save policy
      tags:
        - Policy-Storage-Service
  /policy-storage-service/api/v1/policy/tag:
    post:
      description: Store Tags for policy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dto.RequestStoreTagsDTO'
        description: Request Body
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ResponseStoreTagsDTO'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ResponseDTO'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ResponseDTO'
      security:
        - Bearer: []
        - X-Tenant-Id: []
      summary: Store Tags
      tags:
        - Policy-Storage-Service
  '/policy-storage-service/api/v1/policy/tags/{workspaceId}':
    get:
      description: Get Tags for policy
      parameters:
        - description: workspace Id
          in: path
          name: workspaceId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ResponseGetTagsDTO1'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ResponseDTO'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ResponseDTO'
      security:
        - Bearer: []
        - X-Tenant-Id: []
      summary: Get Tags
      tags:
        - Policy-Storage-Service
  /policy-storage-service/api/v1/policy/update:
    post:
      description: Update Policy of current tenant id based on policy id
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dto.RequestUpdatePoliciesDTO'
        description: Request Body
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ResponsePolicyDTO'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ResponseDTO'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ResponseDTO'
      security:
        - Bearer: []
        - X-Tenant-Id: []
      summary: Update Policy
      tags:
        - Policy-Storage-Service
  /policy-storage-service/api/v1/policy/vminstance:
    post:
      description: Get VM Instance of current tenant id
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dto.RequestGetVMInstanceDTO'
        description: Request Body
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ResponseGetVMInstanceDTO'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ResponseDTO'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ResponseDTO'
      security:
        - Bearer: []
        - X-Tenant-Id: []
      summary: Get VM Instance
      tags:
        - Policy-Storage-Service
  /policy-storage-service/api/v1/policy/vminstancegroup:
    post:
      description: Get VM Instance Group of current tenant id
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dto.RequestGetVMInstanceGroupDTO'
        description: Request Body
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ResponseGetVMInstanceGroupDTO'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ResponseDTO'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ResponseDTO'
      security:
        - Bearer: []
        - X-Tenant-Id: []
      summary: Get VM Instance Group
      tags:
        - Policy-Storage-Service
  /observability-api/api/v1/obs/get-top-ingress-egress:
    post:
      description: Get Top Connection
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.TopConnRequest'
        description: Request Body
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.TopConnResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
      security:
        - Bearer: []
        - X-Tenant-Id: []
      summary: GetTopConnection
      tags:
        - v1 APIs
  /observability-api/v2/get-count:
    post:
      description: Fetch total count of file/process/network events.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.RequestV2'
        description: Request Body
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.CountResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
      security:
        - Bearer: []
        - X-Tenant-Id: []
      summary: GetCount
      tags:
        - v2 APIs
  /observability-api/v2/get-file-observability:
    post:
      description: Fetch file observability data as a list
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.RequestV2'
        description: Request Body
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Response'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
      security:
        - Bearer: []
        - X-Tenant-Id: []
      summary: Get File Observability
      tags:
        - v2 APIs
  /observability-api/v2/get-network-observability:
    post:
      description: Fetch network observability data as a list
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.RequestV2'
        description: Request Body
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Response'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
      security:
        - Bearer: []
        - X-Tenant-Id: []
      summary: Get Network Observability
      tags:
        - v2 APIs
  /observability-api/v2/get-network-observability-graph:
    post:
      description: Fetch network observability data as a graph
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.RequestV2'
        description: Request Body
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.GraphResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
      security:
        - Bearer: []
        - X-Tenant-Id: []
      summary: Get Network Observability Graph
      tags:
        - v2 APIs
  /observability-api/v2/get-network-observability-process-graph:
    post:
      description: Get Network Observability Process Graph
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.RequestV2'
        description: Request Body
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.GraphResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
      security:
        - Bearer: []
        - X-Tenant-Id: []
      summary: Get Network Observability Process Graph
      tags:
        - v2 APIs
  /observability-api/v2/get-process-observability:
    post:
      description: Fetch process observability data as a list
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.RequestV2'
        description: Request Body
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Response'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
      security:
        - Bearer: []
        - X-Tenant-Id: []
      summary: Get Process Observability
      tags:
        - v2 APIs
  /observability-api/v2/get-values:
    post:
      description: Get list of possible values for a given key in search filter
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.ValuesRequest'
        description: Request Body
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.KeyValueResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
      security:
        - Bearer: []
        - X-Tenant-Id: []
      summary: Get Values
      tags:
        - v2 APIs
  /observability-api/v2/keys:
    get:
      description: Get list of possible keys that can be used in search filter
      parameters:
        - description: operation
          in: query
          name: operation
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/model.KeyTypeResponse'
                type: array
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ErrorDTO'
      security:
        - Bearer: []
        - X-Tenant-Id: []
      summary: Keys
      tags:
        - v2 APIs
  '/divy-backend/admin-request-secrets/{set_id}/':
    get:
      tags:
        - admin-request-secrets
      operationId: admin-request-secrets_read
      parameters:
        - name: set_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content: {}
    post:
      tags:
        - admin-request-secrets
      operationId: admin-request-secrets_create
      parameters:
        - name: set_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '201':
          description: ''
          content: {}
  /divy-backend/artifact/:
    post:
      tags:
        - artifact
      operationId: artifact_create
      parameters:
        - name: tenant_id
          in: query
          schema:
            type: string
        - name: target_id
          in: query
          schema:
            type: string
        - name: label_id
          in: query
          schema:
            type: string
        - name: tag_id
          in: query
          schema:
            type: string
        - name: data_type
          in: query
          required: true
          schema:
            type: string
        - name: save_to_s3
          in: query
          schema:
            type: boolean
            default: false
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                file:
                  type: string
                  format: binary
                  default: 'false'
          multipart/form-data:
            schema:
              properties:
                file:
                  type: string
                  format: binary
                  default: 'false'
      responses:
        '200':
          description: Success response
          content: {}
  /divy-backend/asset-panel/get-assets-count:
    get:
      tags:
        - asset-panel
      description: return count of all descendants of the given parent asset.
      operationId: asset-panel_get_asset_count
      parameters:
        - name: page
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                required:
                  - count
                  - results
                type: object
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                    format: uri
                    nullable: true
                  previous:
                    type: string
                    format: uri
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/CustomAssetMPTT'
  /divy-backend/asset-panel/get-assets-hierarchy:
    get:
      tags:
        - asset-panel
      description: >-
        List all child assets of the parent asset obtained from the uuid query
        param.
      operationId: asset-panel_get_asset_hierarchy
      parameters:
        - name: page
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                required:
                  - count
                  - results
                type: object
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                    format: uri
                    nullable: true
                  previous:
                    type: string
                    format: uri
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/CustomAssetMPTT'
  /divy-backend/assets:
    get:
      tags:
        - assets
      operationId: assets_list
      parameters:
        - name: ordering
          in: query
          description: >-
            Options:
            name,label,targets,compliances,tickets,findings,last_scan,type,data_types,monitors
          schema:
            type: string
        - name: group_id
          in: query
          schema:
            type: string
        - name: tag_id
          in: query
          schema:
            type: string
        - name: target_id
          in: query
          schema:
            type: string
        - name: baseline_id
          in: query
          schema:
            type: string
        - name: monitor_id
          in: query
          schema:
            type: string
        - name: label_id
          in: query
          schema:
            type: string
        - name: id
          in: query
          schema:
            type: string
        - name: scan_id
          in: query
          schema:
            type: string
        - name: data_type
          in: query
          schema:
            type: string
        - name: type
          in: query
          schema:
            type: string
        - name: asset_id
          in: query
          schema:
            type: string
        - name: region
          in: query
          schema:
            type: string
        - name: present_on_date
          in: query
          schema:
            type: string
        - name: search
          in: query
          description: A search term.
          schema:
            type: string
        - name: page
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - name: page_size
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                required:
                  - count
                  - results
                type: object
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                    format: uri
                    nullable: true
                  previous:
                    type: string
                    format: uri
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Asset'
  /divy-backend/assets-mini:
    get:
      tags:
        - assets-mini
      description: Asset title for dropdown
      operationId: assets-mini_list
      parameters:
        - name: ordering
          in: query
          description: >-
            Options:
            name,label,targets,compliances,tickets,findings,last_scan,type,data_types,monitors
          schema:
            type: string
        - name: group_id
          in: query
          schema:
            type: string
        - name: tag_id
          in: query
          schema:
            type: string
        - name: target_id
          in: query
          schema:
            type: string
        - name: baseline_id
          in: query
          schema:
            type: string
        - name: monitor_id
          in: query
          schema:
            type: string
        - name: label_id
          in: query
          schema:
            type: string
        - name: id
          in: query
          schema:
            type: string
        - name: scan_id
          in: query
          schema:
            type: string
        - name: data_type
          in: query
          schema:
            type: string
        - name: type
          in: query
          schema:
            type: string
        - name: asset_id
          in: query
          schema:
            type: string
        - name: region
          in: query
          schema:
            type: string
        - name: present_on_date
          in: query
          schema:
            type: string
        - name: search
          in: query
          description: A search term.
          schema:
            type: string
        - name: page
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - name: page_size
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                required:
                  - count
                  - results
                type: object
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                    format: uri
                    nullable: true
                  previous:
                    type: string
                    format: uri
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/AssetMini'
  /divy-backend/assets-mini/add-to-group:
    post:
      tags:
        - assets-mini
      description: Add object to group
      operationId: add-to-group
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RelatedModelAssetGroup'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
      x-codegen-request-body-name: data
  /divy-backend/assets-mini/asset-types-count:
    get:
      tags:
        - assets-mini
      description: Asset title for dropdown
      operationId: assets-mini_asset_types_count
      parameters:
        - name: ordering
          in: query
          description: >-
            Options:
            name,label,targets,compliances,tickets,findings,last_scan,type,data_types,monitors
          schema:
            type: string
        - name: group_id
          in: query
          schema:
            type: string
        - name: tag_id
          in: query
          schema:
            type: string
        - name: target_id
          in: query
          schema:
            type: string
        - name: baseline_id
          in: query
          schema:
            type: string
        - name: monitor_id
          in: query
          schema:
            type: string
        - name: label_id
          in: query
          schema:
            type: string
        - name: id
          in: query
          schema:
            type: string
        - name: scan_id
          in: query
          schema:
            type: string
        - name: data_type
          in: query
          schema:
            type: string
        - name: type
          in: query
          schema:
            type: string
        - name: asset_id
          in: query
          schema:
            type: string
        - name: region
          in: query
          schema:
            type: string
        - name: present_on_date
          in: query
          schema:
            type: string
        - name: search
          in: query
          description: A search term.
          schema:
            type: string
        - name: page
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - name: page_size
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                required:
                  - count
                  - results
                type: object
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                    format: uri
                    nullable: true
                  previous:
                    type: string
                    format: uri
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/AssetMini'
  /divy-backend/assets-mini/assets-chart-data:
    get:
      tags:
        - assets-mini
      description: Asset title for dropdown
      operationId: assets-mini_assets_chart_data
      parameters:
        - name: ordering
          in: query
          description: >-
            Options:
            name,label,targets,compliances,tickets,findings,last_scan,type,data_types,monitors
          schema:
            type: string
        - name: group_id
          in: query
          schema:
            type: string
        - name: tag_id
          in: query
          schema:
            type: string
        - name: target_id
          in: query
          schema:
            type: string
        - name: baseline_id
          in: query
          schema:
            type: string
        - name: monitor_id
          in: query
          schema:
            type: string
        - name: label_id
          in: query
          schema:
            type: string
        - name: id
          in: query
          schema:
            type: string
        - name: scan_id
          in: query
          schema:
            type: string
        - name: data_type
          in: query
          schema:
            type: string
        - name: type
          in: query
          schema:
            type: string
        - name: asset_id
          in: query
          schema:
            type: string
        - name: region
          in: query
          schema:
            type: string
        - name: present_on_date
          in: query
          schema:
            type: string
        - name: search
          in: query
          description: A search term.
          schema:
            type: string
        - name: page
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - name: page_size
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                required:
                  - count
                  - results
                type: object
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                    format: uri
                    nullable: true
                  previous:
                    type: string
                    format: uri
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/AssetMini'
  /divy-backend/assets-mini/filter-choices:
    get:
      tags:
        - assets-mini
      description: Asset title for dropdown
      operationId: assets-mini_choices
      parameters:
        - name: ordering
          in: query
          description: >-
            Options:
            name,label,targets,compliances,tickets,findings,last_scan,type,data_types,monitors
          schema:
            type: string
        - name: group_id
          in: query
          schema:
            type: string
        - name: tag_id
          in: query
          schema:
            type: string
        - name: target_id
          in: query
          schema:
            type: string
        - name: baseline_id
          in: query
          schema:
            type: string
        - name: monitor_id
          in: query
          schema:
            type: string
        - name: label_id
          in: query
          schema:
            type: string
        - name: id
          in: query
          schema:
            type: string
        - name: scan_id
          in: query
          schema:
            type: string
        - name: data_type
          in: query
          schema:
            type: string
        - name: type
          in: query
          schema:
            type: string
        - name: asset_id
          in: query
          schema:
            type: string
        - name: region
          in: query
          schema:
            type: string
        - name: present_on_date
          in: query
          schema:
            type: string
        - name: search
          in: query
          description: A search term.
          schema:
            type: string
        - name: page
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - name: page_size
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                required:
                  - count
                  - results
                type: object
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                    format: uri
                    nullable: true
                  previous:
                    type: string
                    format: uri
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/AssetMini'
  '/divy-backend/assets-mini/{id}':
    get:
      tags:
        - assets-mini
      description: Asset title for dropdown
      operationId: assets-mini_read
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetMini'
  '/divy-backend/assets-mini/{id}/add-tags':
    post:
      tags:
        - assets-mini
      description: Asset title for dropdown
      operationId: asset-add-tags
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagList'
        required: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagList'
      x-codegen-request-body-name: data
  '/divy-backend/assets-mini/{id}/data-list':
    get:
      tags:
        - assets-mini
      description: Asset title for dropdown
      operationId: assets-mini_data_lists
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetMini'
  '/divy-backend/assets-mini/{id}/data-list-types':
    get:
      tags:
        - assets-mini
      description: Asset title for dropdown
      operationId: assets-mini_data_list_types
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetMini'
  '/divy-backend/assets-mini/{id}/update-baselines':
    post:
      tags:
        - assets-mini
      description: Asset title for dropdown
      operationId: asset-update-baselines
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagList'
        required: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagList'
      x-codegen-request-body-name: data
  /divy-backend/assets/add-to-group:
    post:
      tags:
        - assets
      description: Add object to group
      operationId: add-to-group1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RelatedModelAssetGroup'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
      x-codegen-request-body-name: data
  /divy-backend/assets/asset-types-count:
    get:
      tags:
        - assets
      operationId: assets_asset_types_count
      parameters:
        - name: ordering
          in: query
          description: >-
            Options:
            name,label,targets,compliances,tickets,findings,last_scan,type,data_types,monitors
          schema:
            type: string
        - name: group_id
          in: query
          schema:
            type: string
        - name: tag_id
          in: query
          schema:
            type: string
        - name: target_id
          in: query
          schema:
            type: string
        - name: baseline_id
          in: query
          schema:
            type: string
        - name: monitor_id
          in: query
          schema:
            type: string
        - name: label_id
          in: query
          schema:
            type: string
        - name: id
          in: query
          schema:
            type: string
        - name: scan_id
          in: query
          schema:
            type: string
        - name: data_type
          in: query
          schema:
            type: string
        - name: type
          in: query
          schema:
            type: string
        - name: asset_id
          in: query
          schema:
            type: string
        - name: region
          in: query
          schema:
            type: string
        - name: present_on_date
          in: query
          schema:
            type: string
        - name: search
          in: query
          description: A search term.
          schema:
            type: string
        - name: page
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - name: page_size
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                required:
                  - count
                  - results
                type: object
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                    format: uri
                    nullable: true
                  previous:
                    type: string
                    format: uri
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Asset'
  /divy-backend/assets/assets-chart-data:
    get:
      tags:
        - assets
      operationId: assets_assets_chart_data
      parameters:
        - name: ordering
          in: query
          description: >-
            Options:
            name,label,targets,compliances,tickets,findings,last_scan,type,data_types,monitors
          schema:
            type: string
        - name: group_id
          in: query
          schema:
            type: string
        - name: tag_id
          in: query
          schema:
            type: string
        - name: target_id
          in: query
          schema:
            type: string
        - name: baseline_id
          in: query
          schema:
            type: string
        - name: monitor_id
          in: query
          schema:
            type: string
        - name: label_id
          in: query
          schema:
            type: string
        - name: id
          in: query
          schema:
            type: string
        - name: scan_id
          in: query
          schema:
            type: string
        - name: data_type
          in: query
          schema:
            type: string
        - name: type
          in: query
          schema:
            type: string
        - name: asset_id
          in: query
          schema:
            type: string
        - name: region
          in: query
          schema:
            type: string
        - name: present_on_date
          in: query
          schema:
            type: string
        - name: search
          in: query
          description: A search term.
          schema:
            type: string
        - name: page
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - name: page_size
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                required:
                  - count
                  - results
                type: object
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                    format: uri
                    nullable: true
                  previous:
                    type: string
                    format: uri
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Asset'
  /divy-backend/assets/filter-choices:
    get:
      tags:
        - assets
      operationId: assets_choices
      parameters:
        - name: ordering
          in: query
          description: >-
            Options:
            name,label,targets,compliances,tickets,findings,last_scan,type,data_types,monitors
          schema:
            type: string
        - name: group_id
          in: query
          schema:
            type: string
        - name: tag_id
          in: query
          schema:
            type: string
        - name: target_id
          in: query
          schema:
            type: string
        - name: baseline_id
          in: query
          schema:
            type: string
        - name: monitor_id
          in: query
          schema:
            type: string
        - name: label_id
          in: query
          schema:
            type: string
        - name: id
          in: query
          schema:
            type: string
        - name: scan_id
          in: query
          schema:
            type: string
        - name: data_type
          in: query
          schema:
            type: string
        - name: type
          in: query
          schema:
            type: string
        - name: asset_id
          in: query
          schema:
            type: string
        - name: region
          in: query
          schema:
            type: string
        - name: present_on_date
          in: query
          schema:
            type: string
        - name: search
          in: query
          description: A search term.
          schema:
            type: string
        - name: page
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - name: page_size
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                required:
                  - count
                  - results
                type: object
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                    format: uri
                    nullable: true
                  previous:
                    type: string
                    format: uri
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Asset'
  '/divy-backend/assets/{id}':
    get:
      tags:
        - assets
      operationId: assets_read
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Asset'
  '/divy-backend/assets/{id}/add-tags':
    post:
      tags:
        - assets
      operationId: asset-add-tags1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagList'
        required: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagList'
      x-codegen-request-body-name: data
  '/divy-backend/assets/{id}/data-list':
    get:
      tags:
        - assets
      operationId: assets_data_lists
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Asset'
  '/divy-backend/assets/{id}/data-list-types':
    get:
      tags:
        - assets
      operationId: assets_data_list_types
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Asset'
  '/divy-backend/assets/{id}/update-baselines':
    post:
      tags:
        - assets
      operationId: asset-update-baselines1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagList'
        required: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagList'
      x-codegen-request-body-name: data
  /divy-backend/audit-files/:
    get:
      tags:
        - audit-files
      description: Returns a list of audit files
      operationId: audit-files-list
      responses:
        '200':
          description: Audit files list
          content: {}
  /divy-backend/auth/refresh/:
    post:
      tags:
        - auth
      description: >-
        Takes a sliding JSON web token and returns a new, refreshed version if
        the

        token's refresh period has not expired.
      operationId: auth_refresh_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefreshSliding'
        required: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefreshSliding'
      x-codegen-request-body-name: data
  /divy-backend/aws-cloud-access-key:
    post:
      tags:
        - aws-cloud-access-key
      operationId: aws-cloud-access-key_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AWSCloudAccessKey'
        required: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AWSCloudAccessKey'
      x-codegen-request-body-name: data
  '/divy-backend/aws-cloud-access-key/{id}':
    get:
      tags:
        - aws-cloud-access-key
      operationId: aws-cloud-access-key_read
      parameters:
        - name: id
          in: path
          description: A UUID string identifying this cloud variable set.
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AWSCloudAccessKey'
    put:
      tags:
        - aws-cloud-access-key
      operationId: aws-cloud-access-key_update
      parameters:
        - name: id
          in: path
          description: A UUID string identifying this cloud variable set.
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AWSCloudAccessKey'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AWSCloudAccessKey'
      x-codegen-request-body-name: data
    patch:
      tags:
        - aws-cloud-access-key
      operationId: aws-cloud-access-key_partial_update
      parameters:
        - name: id
          in: path
          description: A UUID string identifying this cloud variable set.
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AWSCloudAccessKey'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AWSCloudAccessKey'
      x-codegen-request-body-name: data
  /divy-backend/aws-cloud-manual-setup:
    post:
      tags:
        - aws-cloud-manual-setup
      operationId: aws-cloud-manual-setup_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AWSCloudManualSetup'
        required: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AWSCloudManualSetup'
      x-codegen-request-body-name: data
  '/divy-backend/aws-cloud-manual-setup/{id}':
    get:
      tags:
        - aws-cloud-manual-setup
      operationId: aws-cloud-manual-setup_read
      parameters:
        - name: id
          in: path
          description: A UUID string identifying this cloud variable set.
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AWSCloudManualSetup'
    put:
      tags:
        - aws-cloud-manual-setup
      operationId: aws-cloud-manual-setup_update
      parameters:
        - name: id
          in: path
          description: A UUID string identifying this cloud variable set.
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AWSCloudManualSetup'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AWSCloudManualSetup'
      x-codegen-request-body-name: data
    patch:
      tags:
        - aws-cloud-manual-setup
      operationId: aws-cloud-manual-setup_partial_update
      parameters:
        - name: id
          in: path
          description: A UUID string identifying this cloud variable set.
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AWSCloudManualSetup'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AWSCloudManualSetup'
      x-codegen-request-body-name: data
  /divy-backend/azure-cloud-create:
    post:
      tags:
        - azure-cloud-create
      operationId: azure-cloud-create_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AzureCloud'
        required: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AzureCloud'
      x-codegen-request-body-name: data
  '/divy-backend/azure-cloud-create/{id}':
    get:
      tags:
        - azure-cloud-create
      operationId: azure-cloud-create_read
      parameters:
        - name: id
          in: path
          description: A UUID string identifying this cloud variable set.
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AzureCloud'
    put:
      tags:
        - azure-cloud-create
      operationId: azure-cloud-create_update
      parameters:
        - name: id
          in: path
          description: A UUID string identifying this cloud variable set.
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AzureCloud'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AzureCloud'
      x-codegen-request-body-name: data
    patch:
      tags:
        - azure-cloud-create
      operationId: azure-cloud-create_partial_update
      parameters:
        - name: id
          in: path
          description: A UUID string identifying this cloud variable set.
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AzureCloud'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AzureCloud'
      x-codegen-request-body-name: data
  /divy-backend/baseline-analysis:
    get:
      tags:
        - baseline-analysis
      operationId: baseline-analysis_list
      parameters:
        - name: search
          in: query
          description: A search term.
          schema:
            type: string
        - name: baseline
          in: query
          schema:
            type: string
        - name: scan
          in: query
          schema:
            type: string
        - name: page
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - name: page_size
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                required:
                  - count
                  - results
                type: object
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                    format: uri
                    nullable: true
                  previous:
                    type: string
                    format: uri
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/BaselineAnalysis'
  /divy-backend/baseline-analysis-mini:
    get:
      tags:
        - baseline-analysis-mini
      operationId: baseline-analysis-mini_list
      parameters:
        - name: search
          in: query
          description: A search term.
          schema:
            type: string
        - name: baseline
          in: query
          schema:
            type: string
        - name: scan
          in: query
          schema:
            type: string
        - name: page
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - name: page_size
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                required:
                  - count
                  - results
                type: object
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                    format: uri
                    nullable: true
                  previous:
                    type: string
                    format: uri
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/BaselineAnalysisMini'
  '/divy-backend/baseline-analysis-mini/{id}':
    get:
      tags:
        - baseline-analysis-mini
      operationId: baseline-analysis-mini_read
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaselineAnalysisMini'
  '/divy-backend/baseline-analysis-mini/{id}/run-analysis':
    post:
      tags:
        - baseline-analysis-mini
      operationId: baseline-analyse-create
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BaselineAnalysisMini'
        required: true
      responses:
        '200':
          description: Task for analysing baseline was added to queue
          content: {}
        '400':
          description: baseline parameter missing
          content: {}
      x-codegen-request-body-name: data
  '/divy-backend/baseline-analysis/{id}':
    get:
      tags:
        - baseline-analysis
      operationId: baseline-analysis_read
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaselineAnalysis'
  '/divy-backend/baseline-analysis/{id}/run-analysis':
    post:
      tags:
        - baseline-analysis
      operationId: baseline-analyse-create1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BaselineAnalysis'
        required: true
      responses:
        '200':
          description: Task for analysing baseline was added to queue
          content: {}
        '400':
          description: baseline parameter missing
          content: {}
      x-codegen-request-body-name: data
  /divy-backend/baseline-tags:
    get:
      tags:
        - baseline-tags
      operationId: baseline-tags_list
      parameters:
        - name: search
          in: query
          description: A search term.
          schema:
            type: string
        - name: control
          in: query
          schema:
            type: string
        - name: baseline
          in: query
          schema:
            type: string
        - name: expected_result
          in: query
          schema:
            type: string
        - name: page
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                required:
                  - count
                  - results
                type: object
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                    format: uri
                    nullable: true
                  previous:
                    type: string
                    format: uri
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/BaselineTag'
    post:
      tags:
        - baseline-tags
      operationId: baseline-tags_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BaselineTag'
        required: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaselineTag'
      x-codegen-request-body-name: data
  '/divy-backend/baseline-tags/{id}':
    get:
      tags:
        - baseline-tags
      operationId: baseline-tags_read
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaselineTag'
    put:
      tags:
        - baseline-tags
      operationId: baseline-tags_update
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BaselineTag'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaselineTag'
      x-codegen-request-body-name: data
    delete:
      tags:
        - baseline-tags
      operationId: baseline-tags_delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: ''
          content: {}
    patch:
      tags:
        - baseline-tags
      operationId: baseline-tags_partial_update
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BaselineTag'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaselineTag'
      x-codegen-request-body-name: data
  /divy-backend/baselines:
    get:
      tags:
        - baselines
      operationId: baselines_list
      parameters:
        - name: search
          in: query
          description: A search term.
          schema:
            type: string
        - name: ordering
          in: query
          description: >-
            Options:
            name,source,failed_assets,tickets,last_comment,missing_data_assets,assets_passed,creation_date
          schema:
            type: string
        - name: source
          in: query
          schema:
            type: string
        - name: tag_id
          in: query
          schema:
            type: string
        - name: label_id
          in: query
          schema:
            type: string
        - name: asset_id
          in: query
          schema:
            type: string
        - name: cloud_account
          in: query
          schema:
            type: string
        - name: account_id
          in: query
          schema:
            type: string
        - name: creation_date
          in: query
          schema:
            type: string
        - name: result
          in: query
          schema:
            type: string
        - name: page
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - name: page_size
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                required:
                  - count
                  - results
                type: object
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                    format: uri
                    nullable: true
                  previous:
                    type: string
                    format: uri
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Baseline'
    post:
      tags:
        - baselines
      operationId: baselines_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Baseline'
        required: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Baseline'
      x-codegen-request-body-name: data
  /divy-backend/baselines/baseline-dates:
    get:
      tags:
        - baselines
      operationId: baselines_baseline_dates
      parameters:
        - name: search
          in: query
          description: A search term.
          schema:
            type: string
        - name: ordering
          in: query
          description: >-
            Options:
            name,source,failed_assets,tickets,last_comment,missing_data_assets,assets_passed,creation_date
          schema:
            type: string
        - name: source
          in: query
          schema:
            type: string
        - name: tag_id
          in: query
          schema:
            type: string
        - name: label_id
          in: query
          schema:
            type: string
        - name: asset_id
          in: query
          schema:
            type: string
        - name: cloud_account
          in: query
          schema:
            type: string
        - name: account_id
          in: query
          schema:
            type: string
        - name: creation_date
          in: query
          schema:
            type: string
        - name: result
          in: query
          schema:
            type: string
        - name: page
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - name: page_size
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                required:
                  - count
                  - results
                type: object
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                    format: uri
                    nullable: true
                  previous:
                    type: string
                    format: uri
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Baseline'
  /divy-backend/baselines/choices:
    get:
      tags:
        - baselines
      operationId: baselines_choices
      parameters:
        - name: search
          in: query
          description: A search term.
          schema:
            type: string
        - name: ordering
          in: query
          description: >-
            Options:
            name,source,failed_assets,tickets,last_comment,missing_data_assets,assets_passed,creation_date
          schema:
            type: string
        - name: source
          in: query
          schema:
            type: string
        - name: tag_id
          in: query
          schema:
            type: string
        - name: label_id
          in: query
          schema:
            type: string
        - name: asset_id
          in: query
          schema:
            type: string
        - name: cloud_account
          in: query
          schema:
            type: string
        - name: account_id
          in: query
          schema:
            type: string
        - name: creation_date
          in: query
          schema:
            type: string
        - name: result
          in: query
          schema:
            type: string
        - name: page
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - name: page_size
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                required:
                  - count
                  - results
                type: object
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                    format: uri
                    nullable: true
                  previous:
                    type: string
                    format: uri
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Baseline'
  /divy-backend/baselines/data-compare-baselines:
    get:
      tags:
        - baselines
      operationId: baselines_compare_baselines
      parameters:
        - name: search
          in: query
          description: A search term.
          schema:
            type: string
        - name: ordering
          in: query
          description: >-
            Options:
            name,source,failed_assets,tickets,last_comment,missing_data_assets,assets_passed,creation_date
          schema:
            type: string
        - name: source
          in: query
          schema:
            type: string
        - name: tag_id
          in: query
          schema:
            type: string
        - name: label_id
          in: query
          schema:
            type: string
        - name: asset_id
          in: query
          schema:
            type: string
        - name: cloud_account
          in: query
          schema:
            type: string
        - name: account_id
          in: query
          schema:
            type: string
        - name: creation_date
          in: query
          schema:
            type: string
        - name: result
          in: query
          schema:
            type: string
        - name: page
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - name: page_size
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                required:
                  - count
                  - results
                type: object
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                    format: uri
                    nullable: true
                  previous:
                    type: string
                    format: uri
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Baseline'
  /divy-backend/baselines/duplicate:
    post:
      tags:
        - baselines
      operationId: baseline-duplicate
      requestBody:
        content:
          application/json:
            schema:
              required:
                - id
              type: object
              properties:
                id:
                  type: string
                  format: uuid
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Baseline'
        '404':
          description: Baseline doesn't exists
          content: {}
      x-codegen-request-body-name: data
  /divy-backend/baselines/re-run:
    post:
      tags:
        - baselines
      operationId: baseline-re-run
      requestBody:
        content:
          application/json:
            schema:
              required:
                - id
              type: object
              properties:
                id:
                  type: string
                  format: uuid
        required: true
      responses:
        '404':
          description: Baseline doesn't exists
          content: {}
      x-codegen-request-body-name: data
  /divy-backend/baselines/statuses:
    get:
      tags:
        - baselines
      operationId: baselines_statuses
      parameters:
        - name: search
          in: query
          description: A search term.
          schema:
            type: string
        - name: ordering
          in: query
          description: >-
            Options:
            name,source,failed_assets,tickets,last_comment,missing_data_assets,assets_passed,creation_date
          schema:
            type: string
        - name: source
          in: query
          schema:
            type: string
        - name: tag_id
          in: query
          schema:
            type: string
        - name: label_id
          in: query
          schema:
            type: string
        - name: asset_id
          in: query
          schema:
            type: string
        - name: cloud_account
          in: query
          schema:
            type: string
        - name: account_id
          in: query
          schema:
            type: string
        - name: creation_date
          in: query
          schema:
            type: string
        - name: result
          in: query
          schema:
            type: string
        - name: page
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - name: page_size
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                required:
                  - count
                  - results
                type: object
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                    format: uri
                    nullable: true
                  previous:
                    type: string
                    format: uri
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Baseline'
  '/divy-backend/baselines/{id}':
    get:
      tags:
        - baselines
      operationId: baselines_read
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Baseline'
    put:
      tags:
        - baselines
      operationId: baselines_update
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Baseline'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Baseline'
      x-codegen-request-body-name: data
    delete:
      tags:
        - baselines
      operationId: baselines_delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: ''
          content: {}
    patch:
      tags:
        - baselines
      operationId: baselines_partial_update
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Baseline'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Baseline'
      x-codegen-request-body-name: data
  '/divy-backend/baselines/{id}/add-asset':
    post:
      tags:
        - baselines
      description: Add assets to baseline
      operationId: baseline-add-asset
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssetID'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Baseline'
        '400':
          description: ids parameter missing
          content: {}
        '404':
          description: Baseline doesn't exists
          content: {}
      x-codegen-request-body-name: data
  '/divy-backend/baselines/{id}/add-group':
    post:
      tags:
        - baselines
      description: Add group assets to baseline
      operationId: baseline-add-group
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupID'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Baseline'
        '400':
          description: group parameter missing
          content: {}
        '404':
          description: Group doesn't exists
          content: {}
      x-codegen-request-body-name: data
  '/divy-backend/baselines/{id}/delete-asset':
    post:
      tags:
        - baselines
      operationId: baseline-delete-asset
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssetID'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Baseline'
        '400':
          description: id parameter missing
          content: {}
        '404':
          description: Baseline doesn't exists
          content: {}
      x-codegen-request-body-name: data
  '/divy-backend/baselines/{id}/delete-group':
    post:
      tags:
        - baselines
      operationId: baselines_delete_group
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Baseline'
        required: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Baseline'
      x-codegen-request-body-name: data
  '/divy-backend/baselines/{id}/tickets':
    get:
      tags:
        - baselines
      description: >-
        Returns findings tickets number by the сontrol. Parameter required
        сonstrol_id.
      operationId: tickets
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TicketFinding'
  /divy-backend/batch-baseline-tag/:
    get:
      tags:
        - batch-baseline-tag
      description: Returns a baseline tag object by baseline_id and control_id
      operationId: batch-baseline-tag-retrieve
      parameters:
        - name: baseline_id
          in: query
          description: Baseline id (UUID)
          required: true
          schema:
            type: string
        - name: control_id
          in: query
          description: Baseline id (UUID)
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Baseline'
        '404':
          description: Baseline tag with provided ids does not exist
          content: {}
    post:
      tags:
        - batch-baseline-tag
      description: Creates baseline tags with baseline and the list of controls
      operationId: batch-baseline-tag-create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BaselineTagBatch'
        required: true
      responses:
        '200':
          description: Baseline tags are created
          content: {}
        '400':
          description: Duplicated unique together fields baseline and control
          content: {}
      x-codegen-request-body-name: data
  /divy-backend/category-permissions:
    get:
      tags:
        - category-permissions
      operationId: category-permissions_list
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CategoryPermissions'
    post:
      tags:
        - category-permissions
      operationId: category-permissions_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CategoryPermissions'
        required: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryPermissions'
      x-codegen-request-body-name: data
  '/divy-backend/category-permissions/{id}':
    get:
      tags:
        - category-permissions
      operationId: category-permissions_read
      parameters:
        - name: id
          in: path
          description: A UUID string identifying this category permissions.
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryPermissions'
    put:
      tags:
        - category-permissions
      operationId: category-permissions_update
      parameters:
        - name: id
          in: path
          description: A UUID string identifying this category permissions.
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CategoryPermissions'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryPermissions'
      x-codegen-request-body-name: data
    delete:
      tags:
        - category-permissions
      operationId: category-permissions_delete
      parameters:
        - name: id
          in: path
          description: A UUID string identifying this category permissions.
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: ''
          content: {}
    patch:
      tags:
        - category-permissions
      operationId: category-permissions_partial_update
      parameters:
        - name: id
          in: path
          description: A UUID string identifying this category permissions.
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CategoryPermissions'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryPermissions'
      x-codegen-request-body-name: data
  /divy-backend/checks:
    get:
      tags:
        - checks
      operationId: checks_list
      parameters:
        - name: search
          in: query
          description: A search term.
          schema:
            type: string
        - name: result
          in: query
          schema:
            type: string
        - name: control_id
          in: query
          schema:
            type: string
        - name: asset_id
          in: query
          schema:
            type: string
        - name: page
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                required:
                  - count
                  - results
                type: object
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                    format: uri
                    nullable: true
                  previous:
                    type: string
                    format: uri
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Check'
  /divy-backend/checks/compliance-summary:
    get:
      tags:
        - checks
      operationId: comp-id
      parameters:
        - name: search
          in: query
          description: A search term.
          schema:
            type: string
        - name: result
          in: query
          schema:
            type: string
        - name: control_id
          in: query
          schema:
            type: string
        - name: asset_id
          in: query
          schema:
            type: string
        - name: page
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                required:
                  - count
                  - results
                type: object
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                    format: uri
                    nullable: true
                  previous:
                    type: string
                    format: uri
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/ComplianceSummary'
  '/divy-backend/checks/{id}':
    get:
      tags:
        - checks
      operationId: checks_read
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Check'
  /divy-backend/clients:
    get:
      tags:
        - clients
      description: Returns a list of tenants for specific user
      operationId: clients_list
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Client'
  /divy-backend/clouds:
    get:
      tags:
        - clouds
      operationId: clouds_list
      parameters:
        - name: name
          in: query
          schema:
            type: string
        - name: name__contains
          in: query
          schema:
            type: string
        - name: cloud_name
          in: query
          schema:
            type: string
        - name: cloud_type
          in: query
          schema:
            type: string
        - name: enabled
          in: query
          schema:
            type: string
        - name: connected
          in: query
          schema:
            type: string
        - name: ordering
          in: query
          description: >-
            Options:
            cloud_type,name,connect_date,enabled_date,enabled,last_scan_date
          schema:
            type: string
        - name: search
          in: query
          description: A search term.
          schema:
            type: string
        - name: page
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - name: page_size
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                required:
                  - count
                  - results
                type: object
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                    format: uri
                    nullable: true
                  previous:
                    type: string
                    format: uri
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Cloud'
  '/divy-backend/clouds/{id}':
    delete:
      tags:
        - clouds
      operationId: clouds_delete
      parameters:
        - name: id
          in: path
          description: A UUID string identifying this cloud variable set.
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: ''
          content: {}
  '/divy-backend/clouds/{id}/enabled-status':
    post:
      tags:
        - clouds
      description: Change enabled status
      operationId: status
      parameters:
        - name: id
          in: path
          description: A UUID string identifying this cloud variable set.
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              required:
                - status
              type: object
              properties:
                status:
                  type: boolean
        required: true
      responses:
        '200':
          description: Enabled status updated
          content: {}
        '400':
          description: status parameter required
          content: {}
        '404':
          description: Cloud doesn't exists
          content: {}
      x-codegen-request-body-name: data
  '/divy-backend/clouds/{id}/run-scan':
    post:
      tags:
        - clouds
      operationId: clouds_run_scan
      parameters:
        - name: id
          in: path
          description: A UUID string identifying this cloud variable set.
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cloud'
        required: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cloud'
      x-codegen-request-body-name: data
  /divy-backend/comments-analysis:
    get:
      tags:
        - comments-analysis
      operationId: comments-analysis_list
      parameters:
        - name: page
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                required:
                  - count
                  - results
                type: object
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                    format: uri
                    nullable: true
                  previous:
                    type: string
                    format: uri
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/CommentAnalysis'
    post:
      tags:
        - comments-analysis
      operationId: comments-analysis_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommentAnalysis'
        required: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommentAnalysis'
      x-codegen-request-body-name: data
  '/divy-backend/comments-analysis/{id}':
    get:
      tags:
        - comments-analysis
      operationId: comments-analysis_read
      parameters:
        - name: id
          in: path
          description: A UUID string identifying this comment analysis.
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommentAnalysis'
    put:
      tags:
        - comments-analysis
      operationId: comments-analysis_update
      parameters:
        - name: id
          in: path
          description: A UUID string identifying this comment analysis.
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommentAnalysis'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommentAnalysis'
      x-codegen-request-body-name: data
    delete:
      tags:
        - comments-analysis
      operationId: comments-analysis_delete
      parameters:
        - name: id
          in: path
          description: A UUID string identifying this comment analysis.
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: ''
          content: {}
    patch:
      tags:
        - comments-analysis
      operationId: comments-analysis_partial_update
      parameters:
        - name: id
          in: path
          description: A UUID string identifying this comment analysis.
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommentAnalysis'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommentAnalysis'
      x-codegen-request-body-name: data
  /divy-backend/condition:
    get:
      tags:
        - condition
      operationId: condition_list
      parameters:
        - name: search
          in: query
          description: A search term.
          schema:
            type: string
        - name: page
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                required:
                  - count
                  - results
                type: object
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                    format: uri
                    nullable: true
                  previous:
                    type: string
                    format: uri
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Condition'
    post:
      tags:
        - condition
      operationId: condition_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Condition'
        required: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Condition'
      x-codegen-request-body-name: data
  '/divy-backend/condition/{id}':
    get:
      tags:
        - condition
      operationId: condition_read
      parameters:
        - name: id
          in: path
          description: A UUID string identifying this condition.
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Condition'
    put:
      tags:
        - condition
      operationId: condition_update
      parameters:
        - name: id
          in: path
          description: A UUID string identifying this condition.
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Condition'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Condition'
      x-codegen-request-body-name: data
    delete:
      tags:
        - condition
      operationId: condition_delete
      parameters:
        - name: id
          in: path
          description: A UUID string identifying this condition.
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: ''
          content: {}
    patch:
      tags:
        - condition
      operationId: condition_partial_update
      parameters:
        - name: id
          in: path
          description: A UUID string identifying this condition.
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Condition'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Condition'
      x-codegen-request-body-name: data
  /divy-backend/connectwise:
    get:
      tags:
        - connectwise
      operationId: connectwise_list
      parameters:
        - name: page
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                required:
                  - count
                  - results
                type: object
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                    format: uri
                    nullable: true
                  previous:
                    type: string
                    format: uri
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/ConnectWiseProfile'
    post:
      tags:
        - connectwise
      operationId: connectwise_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectWiseProfile'
        required: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectWiseProfile'
      x-codegen-request-body-name: data
  '/divy-backend/connectwise/{id}':
    get:
      tags:
        - connectwise
      operationId: connectwise_read
      parameters:
        - name: id
          in: path
          description: A UUID string identifying this connect wise profile.
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectWiseProfile'
    put:
      tags:
        - connectwise
      operationId: connectwise_update
      parameters:
        - name: id
          in: path
          description: A UUID string identifying this connect wise profile.
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectWiseProfile'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectWiseProfile'
      x-codegen-request-body-name: data
    delete:
      tags:
        - connectwise
      operationId: connectwise_delete
      parameters:
        - name: id
          in: path
          description: A UUID string identifying this connect wise profile.
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: ''
          content: {}
    patch:
      tags:
        - connectwise
      operationId: connectwise_partial_update
      parameters:
        - name: id
          in: path
          description: A UUID string identifying this connect wise profile.
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectWiseProfile'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectWiseProfile'
      x-codegen-request-body-name: data
  '/divy-backend/connectwise/{id}/config-data':
    get:
      tags:
        - connectwise
      operationId: connectwise_connect_wise_data
      parameters:
        - name: id
          in: path
          description: A UUID string identifying this connect wise profile.
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectWiseProfile'
  /divy-backend/controls:
    get:
      tags:
        - controls
      operationId: controls_list
      parameters:
        - name: ordering
          in: query
          description: >-
            Options:
            tickets_number,active,result,has_tags,last_comment,source,control_id,control,sub_control,audit_file,description,info,scored,origin_scored,solution,check_value,group_ids,labels_count,assets_count,baselines_count,history_count,last_seen
          schema:
            type: string
        - name: audit_file
          in: query
          schema:
            type: string
        - name: source
          in: query
          schema:
            type: string
        - name: scored
          in: query
          schema:
            type: string
        - name: expected_result
          in: query
          schema:
            type: string
        - name: control_id
          in: query
          schema:
            type: string
        - name: control
          in: query
          schema:
            type: string
        - name: sub_control
          in: query
          schema:
            type: string
        - name: description
          in: query
          schema:
            type: string
        - name: info
          in: query
          schema:
            type: string
        - name: origin_scored
          in: query
          schema:
            type: string
        - name: solution
          in: query
          schema:
            type: string
        - name: check_value
          in: query
          schema:
            type: string
        - name: result
          in: query
          schema:
            type: string
        - name: has_tickets
          in: query
          schema:
            type: string
        - name: annotation
          in: query
          schema:
            type: string
        - name: baseline
          in: query
          schema:
            type: string
        - name: label
          in: query
          schema:
            type: string
        - name: assets
          in: query
          schema:
            type: string
        - name: tag_id
          in: query
          schema:
            type: string
        - name: compliance
          in: query
          schema:
            type: string
        - name: cloud
          in: query
          schema:
            type: string
        - name: account_id
          in: query
          schema:
            type: string
        - name: region
          in: query
          schema:
            type: string
        - name: search
          in: query
          description: A search term.
          schema:
            type: string
        - name: page
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - name: page_size
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                required:
                  - count
                  - results
                type: object
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                    format: uri
                    nullable: true
                  previous:
                    type: string
                    format: uri
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Control'
  /divy-backend/controls/account-ids:
    get:
      tags:
        - controls
      operationId: account_ids
      parameters:
        - name: ordering
          in: query
          description: >-
            Options:
            tickets_number,active,result,has_tags,last_comment,source,control_id,control,sub_control,audit_file,description,info,scored,origin_scored,solution,check_value,group_ids,labels_count,assets_count,baselines_count,history_count,last_seen
          schema:
            type: string
        - name: audit_file
          in: query
          schema:
            type: string
        - name: source
          in: query
          schema:
            type: string
        - name: scored
          in: query
          schema:
            type: string
        - name: expected_result
          in: query
          schema:
            type: string
        - name: control_id
          in: query
          schema:
            type: string
        - name: control
          in: query
          schema:
            type: string
        - name: sub_control
          in: query
          schema:
            type: string
        - name: description
          in: query
          schema:
            type: string
        - name: info
          in: query
          schema:
            type: string
        - name: origin_scored
          in: query
          schema:
            type: string
        - name: solution
          in: query
          schema:
            type: string
        - name: check_value
          in: query
          schema:
            type: string
        - name: result
          in: query
          schema:
            type: string
        - name: has_tickets
          in: query
          schema:
            type: string
        - name: annotation
          in: query
          schema:
            type: string
        - name: baseline
          in: query
          schema:
            type: string
        - name: label
          in: query
          schema:
            type: string
        - name: assets
          in: query
          schema:
            type: string
        - name: tag_id
          in: query
          schema:
            type: string
        - name: compliance
          in: query
          schema:
            type: string
        - name: cloud
          in: query
          schema:
            type: string
        - name: account_id
          in: query
          schema:
            type: string
        - name: region
          in: query
          schema:
            type: string
        - name: search
          in: query
          description: A search term.
          schema:
            type: string
        - name: page
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - name: page_size
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content: {}
        '400':
          description: ids parameter required
          content: {}
        '404':
          description: Baseline doesn't exists
          content: {}
  /divy-backend/controls/add-control:
    get:
      tags:
        - controls
      description: Adds controls to the baseline
      operationId: add_controls_baseline
      parameters:
        - name: ordering
          in: query
          description: >-
            Options:
            tickets_number,active,result,has_tags,last_comment,source,control_id,control,sub_control,audit_file,description,info,scored,origin_scored,solution,check_value,group_ids,labels_count,assets_count,baselines_count,history_count,last_seen
          schema:
            type: string
        - name: audit_file
          in: query
          schema:
            type: string
        - name: source
          in: query
          schema:
            type: string
        - name: scored
          in: query
          schema:
            type: string
        - name: expected_result
          in: query
          schema:
            type: string
        - name: control_id
          in: query
          schema:
            type: string
        - name: control
          in: query
          schema:
            type: string
        - name: sub_control
          in: query
          schema:
            type: string
        - name: description
          in: query
          schema:
            type: string
        - name: info
          in: query
          schema:
            type: string
        - name: origin_scored
          in: query
          schema:
            type: string
        - name: solution
          in: query
          schema:
            type: string
        - name: check_value
          in: query
          schema:
            type: string
        - name: result
          in: query
          schema:
            type: string
        - name: has_tickets
          in: query
          schema:
            type: string
        - name: annotation
          in: query
          schema:
            type: string
        - name: baseline
          in: query
          schema:
            type: string
        - name: label
          in: query
          schema:
            type: string
        - name: assets
          in: query
          schema:
            type: string
        - name: tag_id
          in: query
          schema:
            type: string
        - name: compliance
          in: query
          schema:
            type: string
        - name: cloud
          in: query
          schema:
            type: string
        - name: account_id
          in: query
          schema:
            type: string
        - name: region
          in: query
          schema:
            type: string
        - name: search
          in: query
          description: A search term.
          schema:
            type: string
        - name: page
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - name: page_size
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Baseline'
        '400':
          description: ids parameter required
          content: {}
        '404':
          description: Baseline doesn't exists
          content: {}
    post:
      tags:
        - controls
      description: Adds controls to the baseline
      operationId: add_controls_baseline1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Control'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Baseline'
        '400':
          description: ids parameter required
          content: {}
        '404':
          description: Baseline doesn't exists
          content: {}
      x-codegen-request-body-name: data
  /divy-backend/controls/asset-choices:
    get:
      tags:
        - controls
      operationId: controls_asset
      parameters:
        - name: ordering
          in: query
          description: >-
            Options:
            tickets_number,active,result,has_tags,last_comment,source,control_id,control,sub_control,audit_file,description,info,scored,origin_scored,solution,check_value,group_ids,labels_count,assets_count,baselines_count,history_count,last_seen
          schema:
            type: string
        - name: audit_file
          in: query
          schema:
            type: string
        - name: source
          in: query
          schema:
            type: string
        - name: scored
          in: query
          schema:
            type: string
        - name: expected_result
          in: query
          schema:
            type: string
        - name: control_id
          in: query
          schema:
            type: string
        - name: control
          in: query
          schema:
            type: string
        - name: sub_control
          in: query
          schema:
            type: string
        - name: description
          in: query
          schema:
            type: string
        - name: info
          in: query
          schema:
            type: string
        - name: origin_scored
          in: query
          schema:
            type: string
        - name: solution
          in: query
          schema:
            type: string
        - name: check_value
          in: query
          schema:
            type: string
        - name: result
          in: query
          schema:
            type: string
        - name: has_tickets
          in: query
          schema:
            type: string
        - name: annotation
          in: query
          schema:
            type: string
        - name: baseline
          in: query
          schema:
            type: string
        - name: label
          in: query
          schema:
            type: string
        - name: assets
          in: query
          schema:
            type: string
        - name: tag_id
          in: query
          schema:
            type: string
        - name: compliance
          in: query
          schema:
            type: string
        - name: cloud
          in: query
          schema:
            type: string
        - name: account_id
          in: query
          schema:
            type: string
        - name: region
          in: query
          schema:
            type: string
        - name: search
          in: query
          description: A search term.
          schema:
            type: string
        - name: page
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - name: page_size
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                required:
                  - count
                  - results
                type: object
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                    format: uri
                    nullable: true
                  previous:
                    type: string
                    format: uri
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Control'
  /divy-backend/controls/audit-choices:
    get:
      tags:
        - controls
      operationId: controls_audit
      parameters:
        - name: ordering
          in: query
          description: >-
            Options:
            tickets_number,active,result,has_tags,last_comment,source,control_id,control,sub_control,audit_file,description,info,scored,origin_scored,solution,check_value,group_ids,labels_count,assets_count,baselines_count,history_count,last_seen
          schema:
            type: string
        - name: audit_file
          in: query
          schema:
            type: string
        - name: source
          in: query
          schema:
            type: string
        - name: scored
          in: query
          schema:
            type: string
        - name: expected_result
          in: query
          schema:
            type: string
        - name: control_id
          in: query
          schema:
            type: string
        - name: control
          in: query
          schema:
            type: string
        - name: sub_control
          in: query
          schema:
            type: string
        - name: description
          in: query
          schema:
            type: string
        - name: info
          in: query
          schema:
            type: string
        - name: origin_scored
          in: query
          schema:
            type: string
        - name: solution
          in: query
          schema:
            type: string
        - name: check_value
          in: query
          schema:
            type: string
        - name: result
          in: query
          schema:
            type: string
        - name: has_tickets
          in: query
          schema:
            type: string
        - name: annotation
          in: query
          schema:
            type: string
        - name: baseline
          in: query
          schema:
            type: string
        - name: label
          in: query
          schema:
            type: string
        - name: assets
          in: query
          schema:
            type: string
        - name: tag_id
          in: query
          schema:
            type: string
        - name: compliance
          in: query
          schema:
            type: string
        - name: cloud
          in: query
          schema:
            type: string
        - name: account_id
          in: query
          schema:
            type: string
        - name: region
          in: query
          schema:
            type: string
        - name: search
          in: query
          description: A search term.
          schema:
            type: string
        - name: page
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - name: page_size
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                required:
                  - count
                  - results
                type: object
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                    format: uri
                    nullable: true
                  previous:
                    type: string
                    format: uri
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Control'
  /divy-backend/controls/audit-choices-mini:
    get:
      tags:
        - controls
      operationId: controls_audit_mini
      parameters:
        - name: ordering
          in: query
          description: >-
            Options:
            tickets_number,active,result,has_tags,last_comment,source,control_id,control,sub_control,audit_file,description,info,scored,origin_scored,solution,check_value,group_ids,labels_count,assets_count,baselines_count,history_count,last_seen
          schema:
            type: string
        - name: audit_file
          in: query
          schema:
            type: string
        - name: source
          in: query
          schema:
            type: string
        - name: scored
          in: query
          schema:
            type: string
        - name: expected_result
          in: query
          schema:
            type: string
        - name: control_id
          in: query
          schema:
            type: string
        - name: control
          in: query
          schema:
            type: string
        - name: sub_control
          in: query
          schema:
            type: string
        - name: description
          in: query
          schema:
            type: string
        - name: info
          in: query
          schema:
            type: string
        - name: origin_scored
          in: query
          schema:
            type: string
        - name: solution
          in: query
          schema:
            type: string
        - name: check_value
          in: query
          schema:
            type: string
        - name: result
          in: query
          schema:
            type: string
        - name: has_tickets
          in: query
          schema:
            type: string
        - name: annotation
          in: query
          schema:
            type: string
        - name: baseline
          in: query
          schema:
            type: string
        - name: label
          in: query
          schema:
            type: string
        - name: assets
          in: query
          schema:
            type: string
        - name: tag_id
          in: query
          schema:
            type: string
        - name: compliance
          in: query
          schema:
            type: string
        - name: cloud
          in: query
          schema:
            type: string
        - name: account_id
          in: query
          schema:
            type: string
        - name: region
          in: query
          schema:
            type: string
        - name: search
          in: query
          description: A search term.
          schema:
            type: string
        - name: page
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - name: page_size
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                required:
                  - count
                  - results
                type: object
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                    format: uri
                    nullable: true
                  previous:
                    type: string
                    format: uri
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Control'
  /divy-backend/controls/batch-baseline-tag:
    post:
      tags:
        - controls
      operationId: controls_batch_baseline_tag
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Control'
        required: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Control'
      x-codegen-request-body-name: data
  /divy-backend/controls/collapsed-data:
    get:
      tags:
        - controls
      operationId: controls_collapsed_data
      parameters:
        - name: ordering
          in: query
          description: >-
            Options:
            tickets_number,active,result,has_tags,last_comment,source,control_id,control,sub_control,audit_file,description,info,scored,origin_scored,solution,check_value,group_ids,labels_count,assets_count,baselines_count,history_count,last_seen
          schema:
            type: string
        - name: audit_file
          in: query
          schema:
            type: string
        - name: source
          in: query
          schema:
            type: string
        - name: scored
          in: query
          schema:
            type: string
        - name: expected_result
          in: query
          schema:
            type: string
        - name: control_id
          in: query
          schema:
            type: string
        - name: control
          in: query
          schema:
            type: string
        - name: sub_control
          in: query
          schema:
            type: string
        - name: description
          in: query
          schema:
            type: string
        - name: info
          in: query
          schema:
            type: string
        - name: origin_scored
          in: query
          schema:
            type: string
        - name: solution
          in: query
          schema:
            type: string
        - name: check_value
          in: query
          schema:
            type: string
        - name: result
          in: query
          schema:
            type: string
        - name: has_tickets
          in: query
          schema:
            type: string
        - name: annotation
          in: query
          schema:
            type: string
        - name: baseline
          in: query
          schema:
            type: string
        - name: label
          in: query
          schema:
            type: string
        - name: assets
          in: query
          schema:
            type: string
        - name: tag_id
          in: query
          schema:
            type: string
        - name: compliance
          in: query
          schema:
            type: string
        - name: cloud
          in: query
          schema:
            type: string
        - name: account_id
          in: query
          schema:
            type: string
        - name: region
          in: query
          schema:
            type: string
        - name: search
          in: query
          description: A search term.
          schema:
            type: string
        - name: page
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - name: page_size
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                required:
                  - count
                  - results
                type: object
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                    format: uri
                    nullable: true
                  previous:
                    type: string
                    format: uri
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Control'
  /divy-backend/controls/compliance-choices:
    get:
      tags:
        - controls
      description: >-
        This API returns the set of compliance choices available in the data
        i.e., hippa, cis or pci.

        Also, there's a value called 'not_compliance' which helps user to filter
        the data which is not

        compliant.
      operationId: controls_compliance
      parameters:
        - name: ordering
          in: query
          description: >-
            Options:
            tickets_number,active,result,has_tags,last_comment,source,control_id,control,sub_control,audit_file,description,info,scored,origin_scored,solution,check_value,group_ids,labels_count,assets_count,baselines_count,history_count,last_seen
          schema:
            type: string
        - name: audit_file
          in: query
          schema:
            type: string
        - name: source
          in: query
          schema:
            type: string
        - name: scored
          in: query
          schema:
            type: string
        - name: expected_result
          in: query
          schema:
            type: string
        - name: control_id
          in: query
          schema:
            type: string
        - name: control
          in: query
          schema:
            type: string
        - name: sub_control
          in: query
          schema:
            type: string
        - name: description
          in: query
          schema:
            type: string
        - name: info
          in: query
          schema:
            type: string
        - name: origin_scored
          in: query
          schema:
            type: string
        - name: solution
          in: query
          schema:
            type: string
        - name: check_value
          in: query
          schema:
            type: string
        - name: result
          in: query
          schema:
            type: string
        - name: has_tickets
          in: query
          schema:
            type: string
        - name: annotation
          in: query
          schema:
            type: string
        - name: baseline
          in: query
          schema:
            type: string
        - name: label
          in: query
          schema:
            type: string
        - name: assets
          in: query
          schema:
            type: string
        - name: tag_id
          in: query
          schema:
            type: string
        - name: compliance
          in: query
          schema:
            type: string
        - name: cloud
          in: query
          schema:
            type: string
        - name: account_id
          in: query
          schema:
            type: string
        - name: region
          in: query
          schema:
            type: string
        - name: search
          in: query
          description: A search term.
          schema:
            type: string
        - name: page
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - name: page_size
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                required:
                  - count
                  - results
                type: object
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                    format: uri
                    nullable: true
                  previous:
                    type: string
                    format: uri
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Control'
  /divy-backend/controls/control-assets:
    get:
      tags:
        - controls
      operationId: controls_control_assets
      parameters:
        - name: ordering
          in: query
          description: >-
            Options:
            tickets_number,active,result,has_tags,last_comment,source,control_id,control,sub_control,audit_file,description,info,scored,origin_scored,solution,check_value,group_ids,labels_count,assets_count,baselines_count,history_count,last_seen
          schema:
            type: string
        - name: audit_file
          in: query
          schema:
            type: string
        - name: source
          in: query
          schema:
            type: string
        - name: scored
          in: query
          schema:
            type: string
        - name: expected_result
          in: query
          schema:
            type: string
        - name: control_id
          in: query
          schema:
            type: string
        - name: control
          in: query
          schema:
            type: string
        - name: sub_control
          in: query
          schema:
            type: string
        - name: description
          in: query
          schema:
            type: string
        - name: info
          in: query
          schema:
            type: string
        - name: origin_scored
          in: query
          schema:
            type: string
        - name: solution
          in: query
          schema:
            type: string
        - name: check_value
          in: query
          schema:
            type: string
        - name: result
          in: query
          schema:
            type: string
        - name: has_tickets
          in: query
          schema:
            type: string
        - name: annotation
          in: query
          schema:
            type: string
        - name: baseline
          in: query
          schema:
            type: string
        - name: label
          in: query
          schema:
            type: string
        - name: assets
          in: query
          schema:
            type: string
        - name: tag_id
          in: query
          schema:
            type: string
        - name: compliance
          in: query
          schema:
            type: string
        - name: cloud
          in: query
          schema:
            type: string
        - name: account_id
          in: query
          schema:
            type: string
        - name: region
          in: query
          schema:
            type: string
        - name: search
          in: query
          description: A search term.
          schema:
            type: string
        - name: page
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - name: page_size
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                required:
                  - count
                  - results
                type: object
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                    format: uri
                    nullable: true
                  previous:
                    type: string
                    format: uri
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Control'
  /divy-backend/controls/control-baselines:
    get:
      tags:
        - controls
      operationId: controls_control_baselines
      parameters:
        - name: ordering
          in: query
          description: >-
            Options:
            tickets_number,active,result,has_tags,last_comment,source,control_id,control,sub_control,audit_file,description,info,scored,origin_scored,solution,check_value,group_ids,labels_count,assets_count,baselines_count,history_count,last_seen
          schema:
            type: string
        - name: audit_file
          in: query
          schema:
            type: string
        - name: source
          in: query
          schema:
            type: string
        - name: scored
          in: query
          schema:
            type: string
        - name: expected_result
          in: query
          schema:
            type: string
        - name: control_id
          in: query
          schema:
            type: string
        - name: control
          in: query
          schema:
            type: string
        - name: sub_control
          in: query
          schema:
            type: string
        - name: description
          in: query
          schema:
            type: string
        - name: info
          in: query
          schema:
            type: string
        - name: origin_scored
          in: query
          schema:
            type: string
        - name: solution
          in: query
          schema:
            type: string
        - name: check_value
          in: query
          schema:
            type: string
        - name: result
          in: query
          schema:
            type: string
        - name: has_tickets
          in: query
          schema:
            type: string
        - name: annotation
          in: query
          schema:
            type: string
        - name: baseline
          in: query
          schema:
            type: string
        - name: label
          in: query
          schema:
            type: string
        - name: assets
          in: query
          schema:
            type: string
        - name: tag_id
          in: query
          schema:
            type: string
        - name: compliance
          in: query
          schema:
            type: string
        - name: cloud
          in: query
          schema:
            type: string
        - name: account_id
          in: query
          schema:
            type: string
        - name: region
          in: query
          schema:
            type: string
        - name: search
          in: query
          description: A search term.
          schema:
            type: string
        - name: page
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - name: page_size
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                required:
                  - count
                  - results
                type: object
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                    format: uri
                    nullable: true
                  previous:
                    type: string
                    format: uri
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Control'
  /divy-backend/controls/control-labels:
    get:
      tags:
        - controls
      operationId: controls_control_labels
      parameters:
        - name: ordering
          in: query
          description: >-
            Options:
            tickets_number,active,result,has_tags,last_comment,source,control_id,control,sub_control,audit_file,description,info,scored,origin_scored,solution,check_value,group_ids,labels_count,assets_count,baselines_count,history_count,last_seen
          schema:
            type: string
        - name: audit_file
          in: query
          schema:
            type: string
        - name: source
          in: query
          schema:
            type: string
        - name: scored
          in: query
          schema:
            type: string
        - name: expected_result
          in: query
          schema:
            type: string
        - name: control_id
          in: query
          schema:
            type: string
        - name: control
          in: query
          schema:
            type: string
        - name: sub_control
          in: query
          schema:
            type: string
        - name: description
          in: query
          schema:
            type: string
        - name: info
          in: query
          schema:
            type: string
        - name: origin_scored
          in: query
          schema:
            type: string
        - name: solution
          in: query
          schema:
            type: string
        - name: check_value
          in: query
          schema:
            type: string
        - name: result
          in: query
          schema:
            type: string
        - name: has_tickets
          in: query
          schema:
            type: string
        - name: annotation
          in: query
          schema:
            type: string
        - name: baseline
          in: query
          schema:
            type: string
        - name: label
          in: query
          schema:
            type: string
        - name: assets
          in: query
          schema:
            type: string
        - name: tag_id
          in: query
          schema:
            type: string
        - name: compliance
          in: query
          schema:
            type: string
        - name: cloud
          in: query
          schema:
            type: string
        - name: account_id
          in: query
          schema:
            type: string
        - name: region
          in: query
          schema:
            type: string
        - name: search
          in: query
          description: A search term.
          schema:
            type: string
        - name: page
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - name: page_size
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                required:
                  - count
                  - results
                type: object
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                    format: uri
                    nullable: true
                  previous:
                    type: string
                    format: uri
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Control'
  /divy-backend/controls/control-scans:
    get:
      tags:
        - controls
      operationId: controls_control_scans
      parameters:
        - name: ordering
          in: query
          description: >-
            Options:
            tickets_number,active,result,has_tags,last_comment,source,control_id,control,sub_control,audit_file,description,info,scored,origin_scored,solution,check_value,group_ids,labels_count,assets_count,baselines_count,history_count,last_seen
          schema:
            type: string
        - name: audit_file
          in: query
          schema:
            type: string
        - name: source
          in: query
          schema:
            type: string
        - name: scored
          in: query
          schema:
            type: string
        - name: expected_result
          in: query
          schema:
            type: string
        - name: control_id
          in: query
          schema:
            type: string
        - name: control
          in: query
          schema:
            type: string
        - name: sub_control
          in: query
          schema:
            type: string
        - name: description
          in: query
          schema:
            type: string
        - name: info
          in: query
          schema:
            type: string
        - name: origin_scored
          in: query
          schema:
            type: string
        - name: solution
          in: query
          schema:
            type: string
        - name: check_value
          in: query
          schema:
            type: string
        - name: result
          in: query
          schema:
            type: string
        - name: has_tickets
          in: query
          schema:
            type: string
        - name: annotation
          in: query
          schema:
            type: string
        - name: baseline
          in: query
          schema:
            type: string
        - name: label
          in: query
          schema:
            type: string
        - name: assets
          in: query
          schema:
            type: string
        - name: tag_id
          in: query
          schema:
            type: string
        - name: compliance
          in: query
          schema:
            type: string
        - name: cloud
          in: query
          schema:
            type: string
        - name: account_id
          in: query
          schema:
            type: string
        - name: region
          in: query
          schema:
            type: string
        - name: search
          in: query
          description: A search term.
          schema:
            type: string
        - name: page
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - name: page_size
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                required:
                  - count
                  - results
                type: object
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                    format: uri
                    nullable: true
                  previous:
                    type: string
                    format: uri
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Control'
  /divy-backend/controls/delete-control:
    get:
      tags:
        - controls
      description: Removes controls to the baseline
      operationId: baseline-delete-controls
      parameters:
        - name: ordering
          in: query
          description: >-
            Options:
            tickets_number,active,result,has_tags,last_comment,source,control_id,control,sub_control,audit_file,description,info,scored,origin_scored,solution,check_value,group_ids,labels_count,assets_count,baselines_count,history_count,last_seen
          schema:
            type: string
        - name: audit_file
          in: query
          schema:
            type: string
        - name: source
          in: query
          schema:
            type: string
        - name: scored
          in: query
          schema:
            type: string
        - name: expected_result
          in: query
          schema:
            type: string
        - name: control_id
          in: query
          schema:
            type: string
        - name: control
          in: query
          schema:
            type: string
        - name: sub_control
          in: query
          schema:
            type: string
        - name: description
          in: query
          schema:
            type: string
        - name: info
          in: query
          schema:
            type: string
        - name: origin_scored
          in: query
          schema:
            type: string
        - name: solution
          in: query
          schema:
            type: string
        - name: check_value
          in: query
          schema:
            type: string
        - name: result
          in: query
          schema:
            type: string
        - name: has_tickets
          in: query
          schema:
            type: string
        - name: annotation
          in: query
          schema:
            type: string
        - name: baseline
          in: query
          schema:
            type: string
        - name: label
          in: query
          schema:
            type: string
        - name: assets
          in: query
          schema:
            type: string
        - name: tag_id
          in: query
          schema:
            type: string
        - name: compliance
          in: query
          schema:
            type: string
        - name: cloud
          in: query
          schema:
            type: string
        - name: account_id
          in: query
          schema:
            type: string
        - name: region
          in: query
          schema:
            type: string
        - name: search
          in: query
          description: A search term.
          schema:
            type: string
        - name: page
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - name: page_size
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Baseline'
        '400':
          description: ids parameter required
          content: {}
        '404':
          description: Baseline doesn't exists
          content: {}
    post:
      tags:
        - controls
      description: Removes controls to the baseline
      operationId: baseline-delete-controls1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Control'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Baseline'
        '400':
          description: ids parameter required
          content: {}
        '404':
          description: Baseline doesn't exists
          content: {}
      x-codegen-request-body-name: data
  /divy-backend/controls/export:
    get:
      tags:
        - controls
      operationId: controls_export_read
      parameters:
        - name: ordering
          in: query
          description: >-
            Options:
            tickets_number,active,result,has_tags,last_comment,source,control_id,control,sub_control,audit_file,description,info,scored,origin_scored,solution,check_value,group_ids,labels_count,assets_count,baselines_count,history_count,last_seen
          schema:
            type: string
        - name: audit_file
          in: query
          schema:
            type: string
        - name: source
          in: query
          schema:
            type: string
        - name: scored
          in: query
          schema:
            type: string
        - name: expected_result
          in: query
          schema:
            type: string
        - name: control_id
          in: query
          schema:
            type: string
        - name: control
          in: query
          schema:
            type: string
        - name: sub_control
          in: query
          schema:
            type: string
        - name: description
          in: query
          schema:
            type: string
        - name: info
          in: query
          schema:
            type: string
        - name: origin_scored
          in: query
          schema:
            type: string
        - name: solution
          in: query
          schema:
            type: string
        - name: check_value
          in: query
          schema:
            type: string
        - name: result
          in: query
          schema:
            type: string
        - name: has_tickets
          in: query
          schema:
            type: string
        - name: annotation
          in: query
          schema:
            type: string
        - name: baseline
          in: query
          schema:
            type: string
        - name: label
          in: query
          schema:
            type: string
        - name: assets
          in: query
          schema:
            type: string
        - name: tag_id
          in: query
          schema:
            type: string
        - name: compliance
          in: query
          schema:
            type: string
        - name: cloud
          in: query
          schema:
            type: string
        - name: account_id
          in: query
          schema:
            type: string
        - name: region
          in: query
          schema:
            type: string
        - name: search
          in: query
          description: A search term.
          schema:
            type: string
        - name: page
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - name: page_size
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                required:
                  - count
                  - results
                type: object
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                    format: uri
                    nullable: true
                  previous:
                    type: string
                    format: uri
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Control'
    post:
      tags:
        - controls
      operationId: controls_export_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Control'
        required: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Control'
      x-codegen-request-body-name: data
  /divy-backend/controls/filter-options:
    get:
      tags:
        - controls
      operationId: controls_filter_options
      parameters:
        - name: ordering
          in: query
          description: >-
            Options:
            tickets_number,active,result,has_tags,last_comment,source,control_id,control,sub_control,audit_file,description,info,scored,origin_scored,solution,check_value,group_ids,labels_count,assets_count,baselines_count,history_count,last_seen
          schema:
            type: string
        - name: audit_file
          in: query
          schema:
            type: string
        - name: source
          in: query
          schema:
            type: string
        - name: scored
          in: query
          schema:
            type: string
        - name: expected_result
          in: query
          schema:
            type: string
        - name: control_id
          in: query
          schema:
            type: string
        - name: control
          in: query
          schema:
            type: string
        - name: sub_control
          in: query
          schema:
            type: string
        - name: description
          in: query
          schema:
            type: string
        - name: info
          in: query
          schema:
            type: string
        - name: origin_scored
          in: query
          schema:
            type: string
        - name: solution
          in: query
          schema:
            type: string
        - name: check_value
          in: query
          schema:
            type: string
        - name: result
          in: query
          schema:
            type: string
        - name: has_tickets
          in: query
          schema:
            type: string
        - name: annotation
          in: query
          schema:
            type: string
        - name: baseline
          in: query
          schema:
            type: string
        - name: label
          in: query
          schema:
            type: string
        - name: assets
          in: query
          schema:
            type: string
        - name: tag_id
          in: query
          schema:
            type: string
        - name: compliance
          in: query
          schema:
            type: string
        - name: cloud
          in: query
          schema:
            type: string
        - name: account_id
          in: query
          schema:
            type: string
        - name: region
          in: query
          schema:
            type: string
        - name: search
          in: query
          description: A search term.
          schema:
            type: string
        - name: page
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - name: page_size
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                required:
                  - count
                  - results
                type: object
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                    format: uri
                    nullable: true
                  previous:
                    type: string
                    format: uri
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Control'
  /divy-backend/controls/label-choices:
    get:
      tags:
        - controls
      operationId: controls_label
      parameters:
        - name: ordering
          in: query
          description: >-
            Options:
            tickets_number,active,result,has_tags,last_comment,source,control_id,control,sub_control,audit_file,description,info,scored,origin_scored,solution,check_value,group_ids,labels_count,assets_count,baselines_count,history_count,last_seen
          schema:
            type: string
        - name: audit_file
          in: query
          schema:
            type: string
        - name: source
          in: query
          schema:
            type: string
        - name: scored
          in: query
          schema:
            type: string
        - name: expected_result
          in: query
          schema:
            type: string
        - name: control_id
          in: query
          schema:
            type: string
        - name: control
          in: query
          schema:
            type: string
        - name: sub_control
          in: query
          schema:
            type: string
        - name: description
          in: query
          schema:
            type: string
        - name: info
          in: query
          schema:
            type: string
        - name: origin_scored
          in: query
          schema:
            type: string
        - name: solution
          in: query
          schema:
            type: string
        - name: check_value
          in: query
          schema:
            type: string
        - name: result
          in: query
          schema:
            type: string
        - name: has_tickets
          in: query
          schema:
            type: string
        - name: annotation
          in: query
          schema:
            type: string
        - name: baseline
          in: query
          schema:
            type: string
        - name: label
          in: query
          schema:
            type: string
        - name: assets
          in: query
          schema:
            type: string
        - name: tag_id
          in: query
          schema:
            type: string
        - name: compliance
          in: query
          schema:
            type: string
        - name: cloud
          in: query
          schema:
            type: string
        - name: account_id
          in: query
          schema:
            type: string
        - name: region
          in: query
          schema:
            type: string
        - name: search
          in: query
          description: A search term.
          schema:
            type: string
        - name: page
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - name: page_size
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                required:
                  - count
                  - results
                type: object
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                    format: uri
                    nullable: true
                  previous:
                    type: string
                    format: uri
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Control'
  /divy-backend/controls/region-ids:
    get:
      tags:
        - controls
      operationId: controls_region_list
      parameters:
        - name: ordering
          in: query
          description: >-
            Options:
            tickets_number,active,result,has_tags,last_comment,source,control_id,control,sub_control,audit_file,description,info,scored,origin_scored,solution,check_value,group_ids,labels_count,assets_count,baselines_count,history_count,last_seen
          schema:
            type: string
        - name: audit_file
          in: query
          schema:
            type: string
        - name: source
          in: query
          schema:
            type: string
        - name: scored
          in: query
          schema:
            type: string
        - name: expected_result
          in: query
          schema:
            type: string
        - name: control_id
          in: query
          schema:
            type: string
        - name: control
          in: query
          schema:
            type: string
        - name: sub_control
          in: query
          schema:
            type: string
        - name: description
          in: query
          schema:
            type: string
        - name: info
          in: query
          schema:
            type: string
        - name: origin_scored
          in: query
          schema:
            type: string
        - name: solution
          in: query
          schema:
            type: string
        - name: check_value
          in: query
          schema:
            type: string
        - name: result
          in: query
          schema:
            type: string
        - name: has_tickets
          in: query
          schema:
            type: string
        - name: annotation
          in: query
          schema:
            type: string
        - name: baseline
          in: query
          schema:
            type: string
        - name: label
          in: query
          schema:
            type: string
        - name: assets
          in: query
          schema:
            type: string
        - name: tag_id
          in: query
          schema:
            type: string
        - name: compliance
          in: query
          schema:
            type: string
        - name: cloud
          in: query
          schema:
            type: string
        - name: account_id
          in: query
          schema:
            type: string
        - name: region
          in: query
          schema:
            type: string
        - name: search
          in: query
          description: A search term.
          schema:
            type: string
        - name: page
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - name: page_size
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                required:
                  - count
                  - results
                type: object
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                    format: uri
                    nullable: true
                  previous:
                    type: string
                    format: uri
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Control'
  /divy-backend/controls/sources-choices:
    get:
      tags:
        - controls
      operationId: controls_sources
      parameters:
        - name: ordering
          in: query
          description: >-
            Options:
            tickets_number,active,result,has_tags,last_comment,source,control_id,control,sub_control,audit_file,description,info,scored,origin_scored,solution,check_value,group_ids,labels_count,assets_count,baselines_count,history_count,last_seen
          schema:
            type: string
        - name: audit_file
          in: query
          schema:
            type: string
        - name: source
          in: query
          schema:
            type: string
        - name: scored
          in: query
          schema:
            type: string
        - name: expected_result
          in: query
          schema:
            type: string
        - name: control_id
          in: query
          schema:
            type: string
        - name: control
          in: query
          schema:
            type: string
        - name: sub_control
          in: query
          schema:
            type: string
        - name: description
          in: query
          schema:
            type: string
        - name: info
          in: query
          schema:
            type: string
        - name: origin_scored
          in: query
          schema:
            type: string
        - name: solution
          in: query
          schema:
            type: string
        - name: check_value
          in: query
          schema:
            type: string
        - name: result
          in: query
          schema:
            type: string
        - name: has_tickets
          in: query
          schema:
            type: string
        - name: annotation
          in: query
          schema:
            type: string
        - name: baseline
          in: query
          schema:
            type: string
        - name: label
          in: query
          schema:
            type: string
        - name: assets
          in: query
          schema:
            type: string
        - name: tag_id
          in: query
          schema:
            type: string
        - name: compliance
          in: query
          schema:
            type: string
        - name: cloud
          in: query
          schema:
            type: string
        - name: account_id
          in: query
          schema:
            type: string
        - name: region
          in: query
          schema:
            type: string
        - name: search
          in: query
          description: A search term.
          schema:
            type: string
        - name: page
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - name: page_size
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                required:
                  - count
                  - results
                type: object
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                    format: uri
                    nullable: true
                  previous:
                    type: string
                    format: uri
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Control'
  '/divy-backend/controls/{id}':
    get:
      tags:
        - controls
      operationId: controls_read
      parameters:
        - name: id
          in: path
          description: A UUID string identifying this control.
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Control'
  /divy-backend/dashboard:
    get:
      tags:
        - dashboard
      description: A view for the dashboard that provides data for the frontend dashboard.
      operationId: dashboard_list
      parameters:
        - name: data_type
          in: query
          required: true
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
              enum:
                - VULNERABILITY_BY_SOURCE
                - LATEST_SCANS
                - TOP_RISKS
                - MOST_VULNERABLE_ASSETS
                - PIE_CHARTS_DATA
                - VULNERABILITY_OVERVIEW
                - NUMBERS
                - SEVERITY_ASSESSMENT
                - SEVERITY_ISSUES
                - TOTAL_COMPLIANCE
                - TICKET_CHART
                - RESULT_RATIO
                - TOTAL_CLOUD_ACCOUNTS
                - REGION_BASED_WARNING
                - ASSET_COMPLIANCE_SUMMARY
                - EXECUTIVE_COMPLIANCE_SUMMARY
                - COMPLIANCE_SUMMARY
                - CLOUD_ACCOUNT_ASSESSMENT
        - name: date_from
          in: query
          schema:
            type: string
        - name: date_to
          in: query
          schema:
            type: string
        - name: limit
          in: query
          schema:
            type: integer
      responses:
        '200':
          description: dashboard data
          content: {}
  /divy-backend/data-lists:
    get:
      tags:
        - data-lists
      operationId: data-lists_list
      parameters:
        - name: search
          in: query
          description: A search term.
          schema:
            type: string
        - name: ordering
          in: query
          description: >-
            Options:
            asset__title,target__name,assets,targets,data_type,tickets_count,group_ids,monitors,date_discovered,last_seen
          schema:
            type: string
        - name: last_seen
          in: query
          schema:
            type: string
        - name: date_discovered
          in: query
          schema:
            type: string
        - name: asset_id
          in: query
          schema:
            type: string
        - name: scan_id
          in: query
          schema:
            type: string
        - name: data_type
          in: query
          schema:
            type: string
        - name: tag_id
          in: query
          schema:
            type: string
        - name: group_id
          in: query
          schema:
            type: string
        - name: target_id
          in: query
          schema:
            type: string
        - name: label_id
          in: query
          schema:
            type: string
        - name: page
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - name: page_size
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                required:
                  - count
                  - results
                type: object
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                    format: uri
                    nullable: true
                  previous:
                    type: string
                    format: uri
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Datalist'
  /divy-backend/data-lists-config:
    get:
      tags:
        - data-lists-config
      description: data list config view
      operationId: data-lists-config_list
      parameters:
        - name: page
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                required:
                  - count
                  - results
                type: object
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                    format: uri
                    nullable: true
                  previous:
                    type: string
                    format: uri
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/DataListConfig'
    post:
      tags:
        - data-lists-config
      description: data list config view
      operationId: data-lists-config_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataListConfig'
        required: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataListConfig'
      x-codegen-request-body-name: data
  /divy-backend/data-lists-config/filters-data:
    get:
      tags:
        - data-lists-config
      description: data list config view
      operationId: data-lists-config_filter_list
      parameters:
        - name: page
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                required:
                  - count
                  - results
                type: object
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                    format: uri
                    nullable: true
                  previous:
                    type: string
                    format: uri
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/DataListConfig'
  '/divy-backend/data-lists-config/{id}':
    get:
      tags:
        - data-lists-config
      description: data list config view
      operationId: data-lists-config_read
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataListConfig'
    put:
      tags:
        - data-lists-config
      description: data list config view
      operationId: data-lists-config_update
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataListConfig'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataListConfig'
      x-codegen-request-body-name: data
    delete:
      tags:
        - data-lists-config
      description: data list config view
      operationId: data-lists-config_delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: ''
          content: {}
    patch:
      tags:
        - data-lists-config
      description: data list config view
      operationId: data-lists-config_partial_update
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataListConfig'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataListConfig'
      x-codegen-request-body-name: data
  /divy-backend/data-lists-mini:
    get:
      tags:
        - data-lists-mini
      operationId: data-lists-mini_list
      parameters:
        - name: search
          in: query
          description: A search term.
          schema:
            type: string
        - name: ordering
          in: query
          description: >-
            Options:
            asset__title,target__name,assets,targets,data_type,tickets_count,group_ids,monitors,date_discovered,last_seen
          schema:
            type: string
        - name: last_seen
          in: query
          schema:
            type: string
        - name: date_discovered
          in: query
          schema:
            type: string
        - name: asset_id
          in: query
          schema:
            type: string
        - name: scan_id
          in: query
          schema:
            type: string
        - name: data_type
          in: query
          schema:
            type: string
        - name: tag_id
          in: query
          schema:
            type: string
        - name: group_id
          in: query
          schema:
            type: string
        - name: target_id
          in: query
          schema:
            type: string
        - name: label_id
          in: query
          schema:
            type: string
        - name: page
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - name: page_size
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                required:
                  - count
                  - results
                type: object
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                    format: uri
                    nullable: true
                  previous:
                    type: string
                    format: uri
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/DatalistMini'
  /divy-backend/data-lists-mini/add-to-group:
    post:
      tags:
        - data-lists-mini
      description: Add object to group
      operationId: add-to-group2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RelatedModelAssetGroup'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
      x-codegen-request-body-name: data
  /divy-backend/data-lists-mini/add-to-target:
    post:
      tags:
        - data-lists-mini
      description: Add object to target
      operationId: add-to-target
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RelatedModelAssetTarget'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Target'
      x-codegen-request-body-name: data
  /divy-backend/data-lists-mini/collapsed-data:
    get:
      tags:
        - data-lists-mini
      operationId: data-lists-mini_collapsed_data
      parameters:
        - name: search
          in: query
          description: A search term.
          schema:
            type: string
        - name: ordering
          in: query
          description: >-
            Options:
            asset__title,target__name,assets,targets,data_type,tickets_count,group_ids,monitors,date_discovered,last_seen
          schema:
            type: string
        - name: last_seen
          in: query
          schema:
            type: string
        - name: date_discovered
          in: query
          schema:
            type: string
        - name: asset_id
          in: query
          schema:
            type: string
        - name: scan_id
          in: query
          schema:
            type: string
        - name: data_type
          in: query
          schema:
            type: string
        - name: tag_id
          in: query
          schema:
            type: string
        - name: group_id
          in: query
          schema:
            type: string
        - name: target_id
          in: query
          schema:
            type: string
        - name: label_id
          in: query
          schema:
            type: string
        - name: page
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - name: page_size
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                required:
                  - count
                  - results
                type: object
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                    format: uri
                    nullable: true
                  previous:
                    type: string
                    format: uri
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/DatalistMini'
  /divy-backend/data-lists-mini/data-types:
    get:
      tags:
        - data-lists-mini
      operationId: data-lists-mini_data_types
      parameters:
        - name: search
          in: query
          description: A search term.
          schema:
            type: string
        - name: ordering
          in: query
          description: >-
            Options:
            asset__title,target__name,assets,targets,data_type,tickets_count,group_ids,monitors,date_discovered,last_seen
          schema:
            type: string
        - name: last_seen
          in: query
          schema:
            type: string
        - name: date_discovered
          in: query
          schema:
            type: string
        - name: asset_id
          in: query
          schema:
            type: string
        - name: scan_id
          in: query
          schema:
            type: string
        - name: data_type
          in: query
          schema:
            type: string
        - name: tag_id
          in: query
          schema:
            type: string
        - name: group_id
          in: query
          schema:
            type: string
        - name: target_id
          in: query
          schema:
            type: string
        - name: label_id
          in: query
          schema:
            type: string
        - name: page
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - name: page_size
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                required:
                  - count
                  - results
                type: object
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                    format: uri
                    nullable: true
                  previous:
                    type: string
                    format: uri
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/DatalistMini'
  /divy-backend/data-lists-mini/diff-view:
    get:
      tags:
        - data-lists-mini
      description: Diff View
      operationId: diff-view
      parameters:
        - name: search
          in: query
          description: A search term.
          schema:
            type: string
        - name: ordering
          in: query
          description: >-
            Options:
            asset__title,target__name,assets,targets,data_type,tickets_count,group_ids,monitors,date_discovered,last_seen
          schema:
            type: string
        - name: last_seen
          in: query
          schema:
            type: string
        - name: date_discovered
          in: query
          schema:
            type: string
        - name: asset_id
          in: query
          schema:
            type: string
        - name: scan_id
          in: query
          schema:
            type: string
        - name: data_type
          in: query
          schema:
            type: string
        - name: tag_id
          in: query
          schema:
            type: string
        - name: group_id
          in: query
          schema:
            type: string
        - name: target_id
          in: query
          schema:
            type: string
        - name: label_id
          in: query
          schema:
            type: string
        - name: page
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - name: page_size
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                required:
                  - count
                  - results
                type: object
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                    format: uri
                    nullable: true
                  previous:
                    type: string
                    format: uri
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/DatalistMini'
  /divy-backend/data-lists-mini/export:
    get:
      tags:
        - data-lists-mini
      description: Export Finding
      operationId: findings-export
      parameters:
        - name: search
          in: query
          description: A search term.
          schema:
            type: string
        - name: ordering
          in: query
          description: >-
            Options:
            asset__title,target__name,assets,targets,data_type,tickets_count,group_ids,monitors,date_discovered,last_seen
          schema:
            type: string
        - name: last_seen
          in: query
          schema:
            type: string
        - name: date_discovered
          in: query
          schema:
            type: string
        - name: asset_id
          in: query
          schema:
            type: string
        - name: scan_id
          in: query
          schema:
            type: string
        - name: data_type
          in: query
          schema:
            type: string
        - name: tag_id
          in: query
          schema:
            type: string
        - name: group_id
          in: query
          schema:
            type: string
        - name: target_id
          in: query
          schema:
            type: string
        - name: label_id
          in: query
          schema:
            type: string
        - name: page
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - name: page_size
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                required:
                  - count
                  - results
                type: object
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                    format: uri
                    nullable: true
                  previous:
                    type: string
                    format: uri
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/DatalistMini'
    post:
      tags:
        - data-lists-mini
      description: Export Finding
      operationId: findings-export1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DatalistMini'
        required: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatalistMini'
      x-codegen-request-body-name: data
  /divy-backend/data-lists-mini/filter-options:
    get:
      tags:
        - data-lists-mini
      operationId: data-lists-mini_filter_options
      parameters:
        - name: search
          in: query
          description: A search term.
          schema:
            type: string
        - name: ordering
          in: query
          description: >-
            Options:
            asset__title,target__name,assets,targets,data_type,tickets_count,group_ids,monitors,date_discovered,last_seen
          schema:
            type: string
        - name: last_seen
          in: query
          schema:
            type: string
        - name: date_discovered
          in: query
          schema:
            type: string
        - name: asset_id
          in: query
          schema:
            type: string
        - name: scan_id
          in: query
          schema:
            type: string
        - name: data_type
          in: query
          schema:
            type: string
        - name: tag_id
          in: query
          schema:
            type: string
        - name: group_id
          in: query
          schema:
            type: string
        - name: target_id
          in: query
          schema:
            type: string
        - name: label_id
          in: query
          schema:
            type: string
        - name: page
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - name: page_size
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                required:
                  - count
                  - results
                type: object
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                    format: uri
                    nullable: true
                  previous:
                    type: string
                    format: uri
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/DatalistMini'
  /divy-backend/data-lists-mini/scan-dates:
    get:
      tags:
        - data-lists-mini
      operationId: data-lists-mini_scan_dates
      parameters:
        - name: search
          in: query
          description: A search term.
          schema:
            type: string
        - name: ordering
          in: query
          description: >-
            Options:
            asset__title,target__name,assets,targets,data_type,tickets_count,group_ids,monitors,date_discovered,last_seen
          schema:
            type: string
        - name: last_seen
          in: query
          schema:
            type: string
        - name: date_discovered
          in: query
          schema:
            type: string
        - name: asset_id
          in: query
          schema:
            type: string
        - name: scan_id
          in: query
          schema:
            type: string
        - name: data_type
          in: query
          schema:
            type: string
        - name: tag_id
          in: query
          schema:
            type: string
        - name: group_id
          in: query
          schema:
            type: string
        - name: target_id
          in: query
          schema:
            type: string
        - name: label_id
          in: query
          schema:
            type: string
        - name: page
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - name: page_size
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                required:
                  - count
                  - results
                type: object
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                    format: uri
                    nullable: true
                  previous:
                    type: string
                    format: uri
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/DatalistMini'
  '/divy-backend/data-lists-mini/{id}':
    get:
      tags:
        - data-lists-mini
      operationId: data-lists-mini_read
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatalistMini'
  /divy-backend/data-lists/add-to-group:
    post:
      tags:
        - data-lists
      description: Add object to group
      operationId: add-to-group3
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RelatedModelAssetGroup'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
      x-codegen-request-body-name: data
  /divy-backend/data-lists/add-to-target:
    post:
      tags:
        - data-lists
      description: Add object to target
      operationId: add-to-target1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RelatedModelAssetTarget'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Target'
      x-codegen-request-body-name: data
  /divy-backend/data-lists/collapsed-data:
    get:
      tags:
        - data-lists
      operationId: data-lists_collapsed_data
      parameters:
        - name: search
          in: query
          description: A search term.
          schema:
            type: string
        - name: ordering
          in: query
          description: >-
            Options:
            asset__title,target__name,assets,targets,data_type,tickets_count,group_ids,monitors,date_discovered,last_seen
          schema:
            type: string
        - name: last_seen
          in: query
          schema:
            type: string
        - name: date_discovered
          in: query
          schema:
            type: string
        - name: asset_id
          in: query
          schema:
            type: string
        - name: scan_id
          in: query
          schema:
            type: string
        - name: data_type
          in: query
          schema:
            type: string
        - name: tag_id
          in: query
          schema:
            type: string
        - name: group_id
          in: query
          schema:
            type: string
        - name: target_id
          in: query
          schema:
            type: string
        - name: label_id
          in: query
          schema:
            type: string
        - name: page
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - name: page_size
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                required:
                  - count
                  - results
                type: object
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                    format: uri
                    nullable: true
                  previous:
                    type: string
                    format: uri
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Datalist'
  /divy-backend/data-lists/data-types:
    get:
      tags:
        - data-lists
      operationId: data-lists_data_types
      parameters:
        - name: search
          in: query
          description: A search term.
          schema:
            type: string
        - name: ordering
          in: query
          description: >-
            Options:
            asset__title,target__name,assets,targets,data_type,tickets_count,group_ids,monitors,date_discovered,last_seen
          schema:
            type: string
        - name: last_seen
          in: query
          schema:
            type: string
        - name: date_discovered
          in: query
          schema:
            type: string
        - name: asset_id
          in: query
          schema:
            type: string
        - name: scan_id
          in: query
          schema:
            type: string
        - name: data_type
          in: query
          schema:
            type: string
        - name: tag_id
          in: query
          schema:
            type: string
        - name: group_id
          in: query
          schema:
            type: string
        - name: target_id
          in: query
          schema:
            type: string
        - name: label_id
          in: query
          schema:
            type: string
        - name: page
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - name: page_size
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                required:
                  - count
                  - results
                type: object
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                    format: uri
                    nullable: true
                  previous:
                    type: string
                    format: uri
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Datalist'
  /divy-backend/data-lists/diff-view:
    get:
      tags:
        - data-lists
      description: Diff View
      operationId: diff-view1
      parameters:
        - name: search
          in: query
          description: A search term.
          schema:
            type: string
        - name: ordering
          in: query
          description: >-
            Options:
            asset__title,target__name,assets,targets,data_type,tickets_count,group_ids,monitors,date_discovered,last_seen
          schema:
            type: string
        - name: last_seen
          in: query
          schema:
            type: string
        - name: date_discovered
          in: query
          schema:
            type: string
        - name: asset_id
          in: query
          schema:
            type: string
        - name: scan_id
          in: query
          schema:
            type: string
        - name: data_type
          in: query
          schema:
            type: string
        - name: tag_id
          in: query
          schema:
            type: string
        - name: group_id
          in: query
          schema:
            type: string
        - name: target_id
          in: query
          schema:
            type: string
        - name: label_id
          in: query
          schema:
            type: string
        - name: page
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - name: page_size
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                required:
                  - count
                  - results
                type: object
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                    format: uri
                    nullable: true
                  previous:
                    type: string
                    format: uri
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Datalist'
  /divy-backend/data-lists/export:
    get:
      tags:
        - data-lists
      description: Export Finding
      operationId: findings-export2
      parameters:
        - name: search
          in: query
          description: A search term.
          schema:
            type: string
        - name: ordering
          in: query
          description: >-
            Options:
            asset__title,target__name,assets,targets,data_type,tickets_count,group_ids,monitors,date_discovered,last_seen
          schema:
            type: string
        - name: last_seen
          in: query
          schema:
            type: string
        - name: date_discovered
          in: query
          schema:
            type: string
        - name: asset_id
          in: query
          schema:
            type: string
        - name: scan_id
          in: query
          schema:
            type: string
        - name: data_type
          in: query
          schema:
            type: string
        - name: tag_id
          in: query
          schema:
            type: string
        - name: group_id
          in: query
          schema:
            type: string
        - name: target_id
          in: query
          schema:
            type: string
        - name: label_id
          in: query
          schema:
            type: string
        - name: page
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - name: page_size
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                required:
                  - count
                  - results
                type: object
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                    format: uri
                    nullable: true
                  previous:
                    type: string
                    format: uri
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Datalist'
    post:
      tags:
        - data-lists
      description: Export Finding
      operationId: findings-export3
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Datalist'
        required: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Datalist'
      x-codegen-request-body-name: data
  /divy-backend/data-lists/filter-options:
    get:
      tags:
        - data-lists
      operationId: data-lists_filter_options
      parameters:
        - name: search
          in: query
          description: A search term.
          schema:
            type: string
        - name: ordering
          in: query
          description: >-
            Options:
            asset__title,target__name,assets,targets,data_type,tickets_count,group_ids,monitors,date_discovered,last_seen
          schema:
            type: string
        - name: last_seen
          in: query
          schema:
            type: string
        - name: date_discovered
          in: query
          schema:
            type: string
        - name: asset_id
          in: query
          schema:
            type: string
        - name: scan_id
          in: query
          schema:
            type: string
        - name: data_type
          in: query
          schema:
            type: string
        - name: tag_id
          in: query
          schema:
            type: string
        - name: group_id
          in: query
          schema:
            type: string
        - name: target_id
          in: query
          schema:
            type: string
        - name: label_id
          in: query
          schema:
            type: string
        - name: page
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - name: page_size
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                required:
                  - count
                  - results
                type: object
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                    format: uri
                    nullable: true
                  previous:
                    type: string
                    format: uri
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Datalist'
  /divy-backend/data-lists/scan-dates:
    get:
      tags:
        - data-lists
      operationId: data-lists_scan-dates_read
      parameters:
        - name: search
          in: query
          description: A search term.
          schema:
            type: string
        - name: ordering
          in: query
          description: >-
            Options:
            asset__title,target__name,assets,targets,data_type,tickets_count,group_ids,monitors,date_discovered,last_seen
          schema:
            type: string
        - name: last_seen
          in: query
          schema:
            type: string
        - name: date_discovered
          in: query
          schema:
            type: string
        - name: asset_id
          in: query
          schema:
            type: string
        - name: scan_id
          in: query
          schema:
            type: string
        - name: data_type
          in: query
          schema:
            type: string
        - name: tag_id
          in: query
          schema:
            type: string
        - name: group_id
          in: query
          schema:
            type: string
        - name: target_id
          in: query
          schema:
            type: string
        - name: label_id
          in: query
          schema:
            type: string
        - name: page
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - name: page_size
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                required:
                  - count
                  - results
                type: object
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                    format: uri
                    nullable: true
                  previous:
                    type: string
                    format: uri
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Datalist'
  '/divy-backend/data-lists/{id}':
    get:
      tags:
        - data-lists
      operationId: data-lists_read
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Datalist'
  /divy-backend/email-profile:
    get:
      tags:
        - email-profile
      operationId: email-profile_list
      parameters:
        - name: page
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                required:
                  - count
                  - results
                type: object
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                    format: uri
                    nullable: true
                  previous:
                    type: string
                    format: uri
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/EmailProfile'
    post:
      tags:
        - email-profile
      operationId: email-profile_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailProfile'
        required: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailProfile'
      x-codegen-request-body-name: data
  /divy-backend/email-profile/:
    put:
      tags:
        - email-profile
      operationId: email-profile_update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailProfile'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailProfile'
      x-codegen-request-body-name: data
    delete:
      tags:
        - email-profile
      operationId: email-profile_delete
      responses:
        '204':
          description: ''
          content: {}
    patch:
      tags:
        - email-profile
      operationId: email-profile_partial_update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailProfile'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailProfile'
      x-codegen-request-body-name: data
  /divy-backend/expected-variable:
    get:
      tags:
        - expected-variable
      operationId: expected-variable_list
      parameters:
        - name: playbook_id
          in: query
          schema:
            type: string
        - name: function_id
          in: query
          schema:
            type: string
        - name: name
          in: query
          schema:
            type: string
        - name: search
          in: query
          description: A search term.
          schema:
            type: string
        - name: page
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                required:
                  - count
                  - results
                type: object
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                    format: uri
                    nullable: true
                  previous:
                    type: string
                    format: uri
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/ExpectedVariable'
  '/divy-backend/expected-variable/{id}':
    get:
      tags:
        - expected-variable
      operationId: expected-variable_read
      parameters:
        - name: id
          in: path
          description: A UUID string identifying this expected variable.
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpectedVariable'
  /divy-backend/finding-comments:
    get:
      tags:
        - finding-comments
      operationId: finding-comments_list
      parameters:
        - name: finding_id
          in: query
          schema:
            type: string
        - name: user_id
          in: query
          schema:
            type: string
        - name: external_key
          in: query
          schema:
            type: string
        - name: username
          in: query
          schema:
            type: string
        - name: search
          in: query
          description: A search term.
          schema:
            type: string
        - name: page
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                required:
                  - count
                  - results
                type: object
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                    format: uri
                    nullable: true
                  previous:
                    type: string
                    format: uri
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/FindingComment'
    post:
      tags:
        - finding-comments
      operationId: finding-comments_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FindingComment'
        required: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FindingComment'
      x-codegen-request-body-name: data
  '/divy-backend/finding-comments/{id}':
    get:
      tags:
        - finding-comments
      operationId: finding-comments_read
      parameters:
        - name: id
          in: path
          description: A UUID string identifying this finding comment.
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FindingComment'
    put:
      tags:
        - finding-comments
      operationId: finding-comments_update
      parameters:
        - name: id
          in: path
          description: A UUID string identifying this finding comment.
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FindingComment'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FindingComment'
      x-codegen-request-body-name: data
    delete:
      tags:
        - finding-comments
      operationId: finding-comments_delete
      parameters:
        - name: id
          in: path
          description: A UUID string identifying this finding comment.
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: ''
          content: {}
    patch:
      tags:
        - finding-comments
      operationId: finding-comments_partial_update
      parameters:
        - name: id
          in: path
          description: A UUID string identifying this finding comment.
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FindingComment'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FindingComment'
      x-codegen-request-body-name: data
  /divy-backend/findings:
    get:
      tags:
        - findings
      operationId: findings_list
      parameters:
        - name: ordering
          in: query
          description: >-
            Options:
            vulnerability__name,vulnerability__exploit_available,vulnerability__risk_factor,tool_output,vulnerability__data_type,vulnerability__cvss_score,vulnerability__solution,status,date_discovered,last_seen,location,scan_id,group_ids,tickets,last_ticket_age,last_comment,ignored,asset__title,is_new,closed_tickets_count
          schema:
            type: string
        - name: last_seen
          in: query
          schema:
            type: string
        - name: present_on_date
          in: query
          schema:
            type: string
        - name: date_discovered
          in: query
          schema:
            type: string
        - name: exploit_available
          in: query
          schema:
            type: string
        - name: risk_factor
          in: query
          schema:
            type: string
        - name: ignored
          in: query
          schema:
            type: string
        - name: data_type
          in: query
          schema:
            type: string
        - name: vulnerability__data_type
          in: query
          schema:
            type: string
        - name: location
          in: query
          schema:
            type: string
        - name: status
          in: query
          schema:
            type: string
        - name: vulnerability
          in: query
          schema:
            type: string
        - name: vulnerability__name
          in: query
          schema:
            type: string
        - name: vulnerability__id
          in: query
          schema:
            type: string
        - name: vulnerability__risk_factor
          in: query
          schema:
            type: string
        - name: vulnerability__origin_risk_factor
          in: query
          schema:
            type: string
        - name: vulnerability__cvss_score
          in: query
          schema:
            type: string
        - name: vulnerability__solution
          in: query
          schema:
            type: string
        - name: tool_output
          in: query
          schema:
            type: string
        - name: identification_number
          in: query
          schema:
            type: string
        - name: scan_id
          in: query
          schema:
            type: string
        - name: label_id
          in: query
          schema:
            type: string
        - name: group_id
          in: query
          schema:
            type: string
        - name: asset_id
          in: query
          schema:
            type: string
        - name: asset__id
          in: query
          schema:
            type: string
        - name: asset_type
          in: query
          schema:
            type: string
        - name: target_id
          in: query
          schema:
            type: string
        - name: tag_id
          in: query
          schema:
            type: string
        - name: has_tickets
          in: query
          schema:
            type: string
        - name: is_new
          in: query
          schema:
            type: string
        - name: search
          in: query
          description: A search term.
          schema:
            type: string
        - name: page
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - name: page_size
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                required:
                  - count
                  - results
                type: object
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                    format: uri
                    nullable: true
                  previous:
                    type: string
                    format: uri
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/FindingList'
  /divy-backend/findings-mini:
    get:
      tags:
        - findings-mini
      operationId: findings-mini_list
      parameters:
        - name: ordering
          in: query
          description: >-
            Options:
            vulnerability__name,vulnerability__exploit_available,vulnerability__risk_factor,tool_output,vulnerability__data_type,vulnerability__cvss_score,vulnerability__solution,status,date_discovered,last_seen,location,scan_id,group_ids,tickets,last_ticket_age,last_comment,ignored,asset__title,is_new,closed_tickets_count
          schema:
            type: string
        - name: last_seen
          in: query
          schema:
            type: string
        - name: present_on_date
          in: query
          schema:
            type: string
        - name: date_discovered
          in: query
          schema:
            type: string
        - name: exploit_available
          in: query
          schema:
            type: string
        - name: risk_factor
          in: query
          schema:
            type: string
        - name: ignored
          in: query
          schema:
            type: string
        - name: data_type
          in: query
          schema:
            type: string
        - name: vulnerability__data_type
          in: query
          schema:
            type: string
        - name: location
          in: query
          schema:
            type: string
        - name: status
          in: query
          schema:
            type: string
        - name: vulnerability
          in: query
          schema:
            type: string
        - name: vulnerability__name
          in: query
          schema:
            type: string
        - name: vulnerability__id
          in: query
          schema:
            type: string
        - name: vulnerability__risk_factor
          in: query
          schema:
            type: string
        - name: vulnerability__origin_risk_factor
          in: query
          schema:
            type: string
        - name: vulnerability__cvss_score
          in: query
          schema:
            type: string
        - name: vulnerability__solution
          in: query
          schema:
            type: string
        - name: tool_output
          in: query
          schema:
            type: string
        - name: identification_number
          in: query
          schema:
            type: string
        - name: scan_id
          in: query
          schema:
            type: string
        - name: label_id
          in: query
          schema:
            type: string
        - name: group_id
          in: query
          schema:
            type: string
        - name: asset_id
          in: query
          schema:
            type: string
        - name: asset__id
          in: query
          schema:
            type: string
        - name: asset_type
          in: query
          schema:
            type: string
        - name: target_id
          in: query
          schema:
            type: string
        - name: tag_id
          in: query
          schema:
            type: string
        - name: has_tickets
          in: query
          schema:
            type: string
        - name: is_new
          in: query
          schema:
            type: string
        - name: search
          in: query
          description: A search term.
          schema:
            type: string
        - name: page
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - name: page_size
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                required:
                  - count
                  - results
                type: object
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                    format: uri
                    nullable: true
                  previous:
                    type: string
                    format: uri
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/FindingLite'
  '/divy-backend/findings-mini/{id}':
    get:
      tags:
        - findings-mini
      operationId: findings-mini_read
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FindingLite'
  /divy-backend/findings/add-tag:
    post:
      tags:
        - findings
      description: add tag
      operationId: finding-add-tag
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FindingTag'
        required: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FindingTag'
      x-codegen-request-body-name: data
  /divy-backend/findings/add-to-group:
    post:
      tags:
        - findings
      description: Add object to group
      operationId: add-to-group4
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RelatedModelAssetGroup'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
      x-codegen-request-body-name: data
  /divy-backend/findings/add-to-target:
    post:
      tags:
        - findings
      description: Add object to target
      operationId: add-to-target2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RelatedModelAssetTarget'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Target'
      x-codegen-request-body-name: data
  /divy-backend/findings/assets:
    get:
      tags:
        - findings
      description: Returns findings assets number by the each asset type
      operationId: findings-assets
      parameters:
        - name: ordering
          in: query
          description: >-
            Options:
            vulnerability__name,vulnerability__exploit_available,vulnerability__risk_factor,tool_output,vulnerability__data_type,vulnerability__cvss_score,vulnerability__solution,status,date_discovered,last_seen,location,scan_id,group_ids,tickets,last_ticket_age,last_comment,ignored,asset__title,is_new,closed_tickets_count
          schema:
            type: string
        - name: last_seen
          in: query
          schema:
            type: string
        - name: present_on_date
          in: query
          schema:
            type: string
        - name: date_discovered
          in: query
          schema:
            type: string
        - name: exploit_available
          in: query
          schema:
            type: string
        - name: risk_factor
          in: query
          schema:
            type: string
        - name: ignored
          in: query
          schema:
            type: string
        - name: data_type
          in: query
          schema:
            type: string
        - name: vulnerability__data_type
          in: query
          schema:
            type: string
        - name: location
          in: query
          schema:
            type: string
        - name: status
          in: query
          schema:
            type: string
        - name: vulnerability
          in: query
          schema:
            type: string
        - name: vulnerability__name
          in: query
          schema:
            type: string
        - name: vulnerability__id
          in: query
          schema:
            type: string
        - name: vulnerability__risk_factor
          in: query
          schema:
            type: string
        - name: vulnerability__origin_risk_factor
          in: query
          schema:
            type: string
        - name: vulnerability__cvss_score
          in: query
          schema:
            type: string
        - name: vulnerability__solution
          in: query
          schema:
            type: string
        - name: tool_output
          in: query
          schema:
            type: string
        - name: identification_number
          in: query
          schema:
            type: string
        - name: scan_id
          in: query
          schema:
            type: string
        - name: label_id
          in: query
          schema:
            type: string
        - name: group_id
          in: query
          schema:
            type: string
        - name: asset_id
          in: query
          schema:
            type: string
        - name: asset__id
          in: query
          schema:
            type: string
        - name: asset_type
          in: query
          schema:
            type: string
        - name: target_id
          in: query
          schema:
            type: string
        - name: tag_id
          in: query
          schema:
            type: string
        - name: has_tickets
          in: query
          schema:
            type: string
        - name: is_new
          in: query
          schema:
            type: string
        - name: search
          in: query
          description: A search term.
          schema:
            type: string
        - name: page
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - name: page_size
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FindingAssetsResponseDocs'
  /divy-backend/findings/collapsed-data:
    get:
      tags:
        - findings
      operationId: findings_collapsed_data
      parameters:
        - name: ordering
          in: query
          description: >-
            Options:
            vulnerability__name,vulnerability__exploit_available,vulnerability__risk_factor,tool_output,vulnerability__data_type,vulnerability__cvss_score,vulnerability__solution,status,date_discovered,last_seen,location,scan_id,group_ids,tickets,last_ticket_age,last_comment,ignored,asset__title,is_new,closed_tickets_count
          schema:
            type: string
        - name: last_seen
          in: query
          schema:
            type: string
        - name: present_on_date
          in: query
          schema:
            type: string
        - name: date_discovered
          in: query
          schema:
            type: string
        - name: exploit_available
          in: query
          schema:
            type: string
        - name: risk_factor
          in: query
          schema:
            type: string
        - name: ignored
          in: query
          schema:
            type: string
        - name: data_type
          in: query
          schema:
            type: string
        - name: vulnerability__data_type
          in: query
          schema:
            type: string
        - name: location
          in: query
          schema:
            type: string
        - name: status
          in: query
          schema:
            type: string
        - name: vulnerability
          in: query
          schema:
            type: string
        - name: vulnerability__name
          in: query
          schema:
            type: string
        - name: vulnerability__id
          in: query
          schema:
            type: string
        - name: vulnerability__risk_factor
          in: query
          schema:
            type: string
        - name: vulnerability__origin_risk_factor
          in: query
          schema:
            type: string
        - name: vulnerability__cvss_score
          in: query
          schema:
            type: string
        - name: vulnerability__solution
          in: query
          schema:
            type: string
        - name: tool_output
          in: query
          schema:
            type: string
        - name: identification_number
          in: query
          schema:
            type: string
        - name: scan_id
          in: query
          schema:
            type: string
        - name: label_id
          in: query
          schema:
            type: string
        - name: group_id
          in: query
          schema:
            type: string
        - name: asset_id
          in: query
          schema:
            type: string
        - name: asset__id
          in: query
          schema:
            type: string
        - name: asset_type
          in: query
          schema:
            type: string
        - name: target_id
          in: query
          schema:
            type: string
        - name: tag_id
          in: query
          schema:
            type: string
        - name: has_tickets
          in: query
          schema:
            type: string
        - name: is_new
          in: query
          schema:
            type: string
        - name: search
          in: query
          description: A search term.
          schema:
            type: string
        - name: page
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - name: page_size
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                required:
                  - count
                  - results
                type: object
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                    format: uri
                    nullable: true
                  previous:
                    type: string
                    format: uri
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/FindingList'
  /divy-backend/findings/export:
    get:
      tags:
        - findings
      description: Export Finding
      operationId: findings-export4
      parameters:
        - name: ordering
          in: query
          description: >-
            Options:
            vulnerability__name,vulnerability__exploit_available,vulnerability__risk_factor,tool_output,vulnerability__data_type,vulnerability__cvss_score,vulnerability__solution,status,date_discovered,last_seen,location,scan_id,group_ids,tickets,last_ticket_age,last_comment,ignored,asset__title,is_new,closed_tickets_count
          schema:
            type: string
        - name: last_seen
          in: query
          schema:
            type: string
        - name: present_on_date
          in: query
          schema:
            type: string
        - name: date_discovered
          in: query
          schema:
            type: string
        - name: exploit_available
          in: query
          schema:
            type: string
        - name: risk_factor
          in: query
          schema:
            type: string
        - name: ignored
          in: query
          schema:
            type: string
        - name: data_type
          in: query
          schema:
            type: string
        - name: vulnerability__data_type
          in: query
          schema:
            type: string
        - name: location
          in: query
          schema:
            type: string
        - name: status
          in: query
          schema:
            type: string
        - name: vulnerability
          in: query
          schema:
            type: string
        - name: vulnerability__name
          in: query
          schema:
            type: string
        - name: vulnerability__id
          in: query
          schema:
            type: string
        - name: vulnerability__risk_factor
          in: query
          schema:
            type: string
        - name: vulnerability__origin_risk_factor
          in: query
          schema:
            type: string
        - name: vulnerability__cvss_score
          in: query
          schema:
            type: string
        - name: vulnerability__solution
          in: query
          schema:
            type: string
        - name: tool_output
          in: query
          schema:
            type: string
        - name: identification_number
          in: query
          schema:
            type: string
        - name: scan_id
          in: query
          schema:
            type: string
        - name: label_id
          in: query
          schema:
            type: string
        - name: group_id
          in: query
          schema:
            type: string
        - name: asset_id
          in: query
          schema:
            type: string
        - name: asset__id
          in: query
          schema:
            type: string
        - name: asset_type
          in: query
          schema:
            type: string
        - name: target_id
          in: query
          schema:
            type: string
        - name: tag_id
          in: query
          schema:
            type: string
        - name: has_tickets
          in: query
          schema:
            type: string
        - name: is_new
          in: query
          schema:
            type: string
        - name: search
          in: query
          description: A search term.
          schema:
            type: string
        - name: page
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - name: page_size
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                required:
                  - count
                  - results
                type: object
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                    format: uri
                    nullable: true
                  previous:
                    type: string
                    format: uri
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/FindingList'
    post:
      tags:
        - findings
      description: Export Finding
      operationId: findings-export5
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FindingList'
        required: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FindingList'
      x-codegen-request-body-name: data
  /divy-backend/findings/filter-options:
    get:
      tags:
        - findings
      operationId: findings_filter_options
      parameters:
        - name: ordering
          in: query
          description: >-
            Options:
            vulnerability__name,vulnerability__exploit_available,vulnerability__risk_factor,tool_output,vulnerability__data_type,vulnerability__cvss_score,vulnerability__solution,status,date_discovered,last_seen,location,scan_id,group_ids,tickets,last_ticket_age,last_comment,ignored,asset__title,is_new,closed_tickets_count
          schema:
            type: string
        - name: last_seen
          in: query
          schema:
            type: string
        - name: present_on_date
          in: query
          schema:
            type: string
        - name: date_discovered
          in: query
          schema:
            type: string
        - name: exploit_available
          in: query
          schema:
            type: string
        - name: risk_factor
          in: query
          schema:
            type: string
        - name: ignored
          in: query
          schema:
            type: string
        - name: data_type
          in: query
          schema:
            type: string
        - name: vulnerability__data_type
          in: query
          schema:
            type: string
        - name: location
          in: query
          schema:
            type: string
        - name: status
          in: query
          schema:
            type: string
        - name: vulnerability
          in: query
          schema:
            type: string
        - name: vulnerability__name
          in: query
          schema:
            type: string
        - name: vulnerability__id
          in: query
          schema:
            type: string
        - name: vulnerability__risk_factor
          in: query
          schema:
            type: string
        - name: vulnerability__origin_risk_factor
          in: query
          schema:
            type: string
        - name: vulnerability__cvss_score
          in: query
          schema:
            type: string
        - name: vulnerability__solution
          in: query
          schema:
            type: string
        - name: tool_output
          in: query
          schema:
            type: string
        - name: identification_number
          in: query
          schema:
            type: string
        - name: scan_id
          in: query
          schema:
            type: string
        - name: label_id
          in: query
          schema:
            type: string
        - name: group_id
          in: query
          schema:
            type: string
        - name: asset_id
          in: query
          schema:
            type: string
        - name: asset__id
          in: query
          schema:
            type: string
        - name: asset_type
          in: query
          schema:
            type: string
        - name: target_id
          in: query
          schema:
            type: string
        - name: tag_id
          in: query
          schema:
            type: string
        - name: has_tickets
          in: query
          schema:
            type: string
        - name: is_new
          in: query
          schema:
            type: string
        - name: search
          in: query
          description: A search term.
          schema:
            type: string
        - name: page
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - name: page_size
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                required:
                  - count
                  - results
                type: object
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                    format: uri
                    nullable: true
                  previous:
                    type: string
                    format: uri
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/FindingList'
  /divy-backend/findings/findings-chart-data:
    get:
      tags:
        - findings
      operationId: findings_findings_chart_data
      parameters:
        - name: ordering
          in: query
          description: >-
            Options:
            vulnerability__name,vulnerability__exploit_available,vulnerability__risk_factor,tool_output,vulnerability__data_type,vulnerability__cvss_score,vulnerability__solution,status,date_discovered,last_seen,location,scan_id,group_ids,tickets,last_ticket_age,last_comment,ignored,asset__title,is_new,closed_tickets_count
          schema:
            type: string
        - name: last_seen
          in: query
          schema:
            type: string
        - name: present_on_date
          in: query
          schema:
            type: string
        - name: date_discovered
          in: query
          schema:
            type: string
        - name: exploit_available
          in: query
          schema:
            type: string
        - name: risk_factor
          in: query
          schema:
            type: string
        - name: ignored
          in: query
          schema:
            type: string
        - name: data_type
          in: query
          schema:
            type: string
        - name: vulnerability__data_type
          in: query
          schema:
            type: string
        - name: location
          in: query
          schema:
            type: string
        - name: status
          in: query
          schema:
            type: string
        - name: vulnerability
          in: query
          schema:
            type: string
        - name: vulnerability__name
          in: query
          schema:
            type: string
        - name: vulnerability__id
          in: query
          schema:
            type: string
        - name: vulnerability__risk_factor
          in: query
          schema:
            type: string
        - name: vulnerability__origin_risk_factor
          in: query
          schema:
            type: string
        - name: vulnerability__cvss_score
          in: query
          schema:
            type: string
        - name: vulnerability__solution
          in: query
          schema:
            type: string
        - name: tool_output
          in: query
          schema:
            type: string
        - name: identification_number
          in: query
          schema:
            type: string
        - name: scan_id
          in: query
          schema:
            type: string
        - name: label_id
          in: query
          schema:
            type: string
        - name: group_id
          in: query
          schema:
            type: string
        - name: asset_id
          in: query
          schema:
            type: string
        - name: asset__id
          in: query
          schema:
            type: string
        - name: asset_type
          in: query
          schema:
            type: string
        - name: target_id
          in: query
          schema:
            type: string
        - name: tag_id
          in: query
          schema:
            type: string
        - name: has_tickets
          in: query
          schema:
            type: string
        - name: is_new
          in: query
          schema:
            type: string
        - name: search
          in: query
          description: A search term.
          schema:
            type: string
        - name: page
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - name: page_size
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                required:
                  - count
                  - results
                type: object
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                    format: uri
                    nullable: true
                  previous:
                    type: string
                    format: uri
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/FindingList'
  /divy-backend/findings/ignore:
    post:
      tags:
        - findings
      description: Ignore Finding
      operationId: findings-ignore
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FindingList'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FindingIgnore'
      x-codegen-request-body-name: data
  /divy-backend/findings/severity:
    get:
      tags:
        - findings
      description: Returns findings severity number by the each risk factor
      operationId: findings-severity
      parameters:
        - name: ordering
          in: query
          description: >-
            Options:
            vulnerability__name,vulnerability__exploit_available,vulnerability__risk_factor,tool_output,vulnerability__data_type,vulnerability__cvss_score,vulnerability__solution,status,date_discovered,last_seen,location,scan_id,group_ids,tickets,last_ticket_age,last_comment,ignored,asset__title,is_new,closed_tickets_count
          schema:
            type: string
        - name: last_seen
          in: query
          schema:
            type: string
        - name: present_on_date
          in: query
          schema:
            type: string
        - name: date_discovered
          in: query
          schema:
            type: string
        - name: exploit_available
          in: query
          schema:
            type: string
        - name: risk_factor
          in: query
          schema:
            type: string
        - name: ignored
          in: query
          schema:
            type: string
        - name: data_type
          in: query
          schema:
            type: string
        - name: vulnerability__data_type
          in: query
          schema:
            type: string
        - name: location
          in: query
          schema:
            type: string
        - name: status
          in: query
          schema:
            type: string
        - name: vulnerability
          in: query
          schema:
            type: string
        - name: vulnerability__name
          in: query
          schema:
            type: string
        - name: vulnerability__id
          in: query
          schema:
            type: string
        - name: vulnerability__risk_factor
          in: query
          schema:
            type: string
        - name: vulnerability__origin_risk_factor
          in: query
          schema:
            type: string
        - name: vulnerability__cvss_score
          in: query
          schema:
            type: string
        - name: vulnerability__solution
          in: query
          schema:
            type: string
        - name: tool_output
          in: query
          schema:
            type: string
        - name: identification_number
          in: query
          schema:
            type: string
        - name: scan_id
          in: query
          schema:
            type: string
        - name: label_id
          in: query
          schema:
            type: string
        - name: group_id
          in: query
          schema:
            type: string
        - name: asset_id
          in: query
          schema:
            type: string
        - name: asset__id
          in: query
          schema:
            type: string
        - name: asset_type
          in: query
          schema:
            type: string
        - name: target_id
          in: query
          schema:
            type: string
        - name: tag_id
          in: query
          schema:
            type: string
        - name: has_tickets
          in: query
          schema:
            type: string
        - name: is_new
          in: query
          schema:
            type: string
        - name: search
          in: query
          description: A search term.
          schema:
            type: string
        - name: page
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - name: page_size
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FindingSeverityResponseDocs'
  /divy-backend/findings/statuses:
    get:
      tags:
        - findings
      operationId: findings_statuses
      parameters:
        - name: ordering
          in: query
          description: >-
            Options:
            vulnerability__name,vulnerability__exploit_available,vulnerability__risk_factor,tool_output,vulnerability__data_type,vulnerability__cvss_score,vulnerability__solution,status,date_discovered,last_seen,location,scan_id,group_ids,tickets,last_ticket_age,last_comment,ignored,asset__title,is_new,closed_tickets_count
          schema:
            type: string
        - name: last_seen
          in: query
          schema:
            type: string
        - name: present_on_date
          in: query
          schema:
            type: string
        - name: date_discovered
          in: query
          schema:
            type: string
        - name: exploit_available
          in: query
          schema:
            type: string
        - name: risk_factor
          in: query
          schema:
            type: string
        - name: ignored
          in: query
          schema:
            type: string
        - name: data_type
          in: query
          schema:
            type: string
        - name: vulnerability__data_type
          in: query
          schema:
            type: string
        - name: location
          in: query
          schema:
            type: string
        - name: status
          in: query
          schema:
            type: string
        - name: vulnerability
          in: query
          schema:
            type: string
        - name: vulnerability__name
          in: query
          schema:
            type: string
        - name: vulnerability__id
          in: query
          schema:
            type: string
        - name: vulnerability__risk_factor
          in: query
          schema:
            type: string
        - name: vulnerability__origin_risk_factor
          in: query
          schema:
            type: string
        - name: vulnerability__cvss_score
          in: query
          schema:
            type: string
        - name: vulnerability__solution
          in: query
          schema:
            type: string
        - name: tool_output
          in: query
          schema:
            type: string
        - name: identification_number
          in: query
          schema:
            type: string
        - name: scan_id
          in: query
          schema:
            type: string
        - name: label_id
          in: query
          schema:
            type: string
        - name: group_id
          in: query
          schema:
            type: string
        - name: asset_id
          in: query
          schema:
            type: string
        - name: asset__id
          in: query
          schema:
            type: string
        - name: asset_type
          in: query
          schema:
            type: string
        - name: target_id
          in: query
          schema:
            type: string
        - name: tag_id
          in: query
          schema:
            type: string
        - name: has_tickets
          in: query
          schema:
            type: string
        - name: is_new
          in: query
          schema:
            type: string
        - name: search
          in: query
          description: A search term.
          schema:
            type: string
        - name: page
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - name: page_size
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                required:
                  - count
                  - results
                type: object
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                    format: uri
                    nullable: true
                  previous:
                    type: string
                    format: uri
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/FindingList'
  /divy-backend/findings/tickets-stats:
    get:
      tags:
        - findings
      description: Returns findings tickets number by the each ticket status
      operationId: findings-tickets
      parameters:
        - name: ordering
          in: query
          description: >-
            Options:
            vulnerability__name,vulnerability__exploit_available,vulnerability__risk_factor,tool_output,vulnerability__data_type,vulnerability__cvss_score,vulnerability__solution,status,date_discovered,last_seen,location,scan_id,group_ids,tickets,last_ticket_age,last_comment,ignored,asset__title,is_new,closed_tickets_count
          schema:
            type: string
        - name: last_seen
          in: query
          schema:
            type: string
        - name: present_on_date
          in: query
          schema:
            type: string
        - name: date_discovered
          in: query
          schema:
            type: string
        - name: exploit_available
          in: query
          schema:
            type: string
        - name: risk_factor
          in: query
          schema:
            type: string
        - name: ignored
          in: query
          schema:
            type: string
        - name: data_type
          in: query
          schema:
            type: string
        - name: vulnerability__data_type
          in: query
          schema:
            type: string
        - name: location
          in: query
          schema:
            type: string
        - name: status
          in: query
          schema:
            type: string
        - name: vulnerability
          in: query
          schema:
            type: string
        - name: vulnerability__name
          in: query
          schema:
            type: string
        - name: vulnerability__id
          in: query
          schema:
            type: string
        - name: vulnerability__risk_factor
          in: query
          schema:
            type: string
        - name: vulnerability__origin_risk_factor
          in: query
          schema:
            type: string
        - name: vulnerability__cvss_score
          in: query
          schema:
            type: string
        - name: vulnerability__solution
          in: query
          schema:
            type: string
        - name: tool_output
          in: query
          schema:
            type: string
        - name: identification_number
          in: query
          schema:
            type: string
        - name: scan_id
          in: query
          schema:
            type: string
        - name: label_id
          in: query
          schema:
            type: string
        - name: group_id
          in: query
          schema:
            type: string
        - name: asset_id
          in: query
          schema:
            type: string
        - name: asset__id
          in: query
          schema:
            type: string
        - name: asset_type
          in: query
          schema:
            type: string
        - name: target_id
          in: query
          schema:
            type: string
        - name: tag_id
          in: query
          schema:
            type: string
        - name: has_tickets
          in: query
          schema:
            type: string
        - name: is_new
          in: query
          schema:
            type: string
        - name: search
          in: query
          description: A search term.
          schema:
            type: string
        - name: page
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - name: page_size
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FindingTicketsResponseDocs'
  /divy-backend/findings/update-status:
    post:
      tags:
        - findings
      description: Update Findings Status
      operationId: findings-update-status
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FindingList'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FindingStatus'
      x-codegen-request-body-name: data
  '/divy-backend/findings/{id}':
    get:
      tags:
        - findings
      operationId: findings_read
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FindingRetrieve'
    put:
      tags:
        - findings
      operationId: findings_update
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FindingUpdate'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FindingUpdate'
      x-codegen-request-body-name: data
    patch:
      tags:
        - findings
      operationId: findings_partial_update
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FindingUpdate'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FindingUpdate'
      x-codegen-request-body-name: data
  '/divy-backend/findings/{id}/history':
    get:
      tags:
        - findings
      description: Returns finding history
      operationId: findings-history
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FindingHistory'
  '/divy-backend/findings/{id}/same-vuln-assets':
    get:
      tags:
        - findings
      description: Returns assets with same vulnerability
      operationId: findings-same-vuln-assets
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FindingLite'
  '/divy-backend/findings/{id}/tickets':
    get:
      tags:
        - findings
      description: Returns findings tickets number by the each ticket status
      operationId: findings-tickets1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TicketFinding'
  /divy-backend/fresh-service:
    get:
      tags:
        - fresh-service
      operationId: fresh-service_list
      parameters:
        - name: page
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                required:
                  - count
                  - results
                type: object
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                    format: uri
                    nullable: true
                  previous:
                    type: string
                    format: uri
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/FreshServiceProfile'
    post:
      tags:
        - fresh-service
      operationId: fresh-service_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FreshServiceProfile'
        required: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FreshServiceProfile'
      x-codegen-request-body-name: data
  '/divy-backend/fresh-service/{id}':
    get:
      tags:
        - fresh-service
      operationId: fresh-service_read
      parameters:
        - name: id
          in: path
          description: A UUID string identifying this fresh service profile.
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FreshServiceProfile'
    put:
      tags:
        - fresh-service
      operationId: fresh-service_update
      parameters:
        - name: id
          in: path
          description: A UUID string identifying this fresh service profile.
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FreshServiceProfile'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FreshServiceProfile'
      x-codegen-request-body-name: data
    delete:
      tags:
        - fresh-service
      operationId: fresh-service_delete
      parameters:
        - name: id
          in: path
          description: A UUID string identifying this fresh service profile.
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: ''
          content: {}
    patch:
      tags:
        - fresh-service
      operationId: fresh-service_partial_update
      parameters:
        - name: id
          in: path
          description: A UUID string identifying this fresh service profile.
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FreshServiceProfile'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FreshServiceProfile'
      x-codegen-request-body-name: data
  '/divy-backend/fresh-service/{id}/config-data':
    get:
      tags:
        - fresh-service
      operationId: fresh-service_freshservice_data
      parameters:
        - name: id
          in: path
          description: A UUID string identifying this fresh service profile.
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FreshServiceProfile'
  /divy-backend/functions:
    get:
      tags:
        - functions
      operationId: functions_list
      parameters:
        - name: module_id
          in: query
          schema:
            type: string
        - name: name
          in: query
          schema:
            type: string
        - name: search
          in: query
          description: A search term.
          schema:
            type: string
        - name: page
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                required:
                  - count
                  - results
                type: object
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                    format: uri
                    nullable: true
                  previous:
                    type: string
                    format: uri
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Function'
  '/divy-backend/functions/{id}':
    get:
      tags:
        - functions
      operationId: functions_read
      parameters:
        - name: id
          in: path
          description: A UUID string identifying this function.
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Function'
  /divy-backend/google-cloud-create:
    post:
      tags:
        - google-cloud-create
      operationId: google-cloud-create_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GCPCloud'
        required: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GCPCloud'
      x-codegen-request-body-name: data
  '/divy-backend/google-cloud-create/{id}':
    get:
      tags:
        - google-cloud-create
      operationId: google-cloud-create_read
      parameters:
        - name: id
          in: path
          description: A UUID string identifying this cloud variable set.
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GCPCloud'
    put:
      tags:
        - google-cloud-create
      operationId: google-cloud-create_update
      parameters:
        - name: id
          in: path
          description: A UUID string identifying this cloud variable set.
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GCPCloud'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GCPCloud'
      x-codegen-request-body-name: data
    patch:
      tags:
        - google-cloud-create
      operationId: google-cloud-create_partial_update
      parameters:
        - name: id
          in: path
          description: A UUID string identifying this cloud variable set.
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GCPCloud'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GCPCloud'
      x-codegen-request-body-name: data
  /divy-backend/groups:
    get:
      tags:
        - groups
      description: Returns a list of groups
      operationId: groups_list
      parameters:
        - name: search
          in: query
          description: A search term.
          schema:
            type: string
        - name: ordering
          in: query
          description: 'Options: name,tickets,findings,compliances,last_scan,monitors'
          schema:
            type: string
        - name: asset_id
          in: query
          schema:
            type: string
        - name: tag_id
          in: query
          schema:
            type: string
        - name: page
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                required:
                  - count
                  - results
                type: object
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                    format: uri
                    nullable: true
                  previous:
                    type: string
                    format: uri
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/GroupList'
    post:
      tags:
        - groups
      description: Creates a group
      operationId: groups_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
        required: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
      x-codegen-request-body-name: data
  /divy-backend/groups-mini:
    get:
      tags:
        - groups-mini
      description: Groups name for dropdown
      operationId: groups-mini_list
      parameters:
        - name: search
          in: query
          description: A search term.
          schema:
            type: string
        - name: page
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                required:
                  - count
                  - results
                type: object
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                    format: uri
                    nullable: true
                  previous:
                    type: string
                    format: uri
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/GroupMini'
  '/divy-backend/groups-mini/{id}':
    get:
      tags:
        - groups-mini
      description: Groups name for dropdown
      operationId: groups-mini_read
      parameters:
        - name: id
          in: path
          description: A UUID string identifying this group.
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupMini'
  '/divy-backend/groups/{id}':
    get:
      tags:
        - groups
      description: Returns a certain group by id
      operationId: groups_read
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupList'
    put:
      tags:
        - groups
      description: Updates a group
      operationId: groups_update
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
      x-codegen-request-body-name: data
    delete:
      tags:
        - groups
      description: delete group
      operationId: groups_delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: ''
          content: {}
    patch:
      tags:
        - groups
      operationId: groups_partial_update
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
      x-codegen-request-body-name: data
  /divy-backend/import-data/:
    post:
      tags:
        - import-data
      description: Uploads a json file and saves information
      operationId: upload-json
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
                - file
                - model_name
              properties:
                model_name:
                  type: string
                  enum:
                    - minion
                    - playbook
                    - modulesrepo
                    - role
                    - tickettemplate
                    - visiblepermissions
                    - condition
                    - miniongroup
                    - targettype
                    - targetfield
                file:
                  type: string
                  format: binary
        required: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadJSON'
  /divy-backend/jira-cloud-profile:
    get:
      tags:
        - jira-cloud-profile
      operationId: jira-cloud-profile_list
      parameters:
        - name: page
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                required:
                  - count
                  - results
                type: object
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                    format: uri
                    nullable: true
                  previous:
                    type: string
                    format: uri
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/JiraCloudProfile'
    post:
      tags:
        - jira-cloud-profile
      operationId: jira-cloud-profile_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JiraCloudProfile'
        required: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JiraCloudProfile'
      x-codegen-request-body-name: data
  '/divy-backend/jira-cloud-profile/{id}':
    get:
      tags:
        - jira-cloud-profile
      operationId: jira-cloud-profile_read
      parameters:
        - name: id
          in: path
          description: A UUID string identifying this jira cloud profile.
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JiraCloudProfile'
    put:
      tags:
        - jira-cloud-profile
      operationId: jira-cloud-profile_update
      parameters:
        - name: id
          in: path
          description: A UUID string identifying this jira cloud profile.
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JiraCloudProfile'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JiraCloudProfile'
      x-codegen-request-body-name: data
    delete:
      tags:
        - jira-cloud-profile
      operationId: jira-cloud-profile_delete
      parameters:
        - name: id
          in: path
          description: A UUID string identifying this jira cloud profile.
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: ''
          content: {}
    patch:
      tags:
        - jira-cloud-profile
      operationId: jira-cloud-profile_partial_update
      parameters:
        - name: id
          in: path
          description: A UUID string identifying this jira cloud profile.
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JiraCloudProfile'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JiraCloudProfile'
      x-codegen-request-body-name: data
  /divy-backend/jira-profile:
    get:
      tags:
        - jira-profile
      operationId: jira-profile_list
      parameters:
        - name: page
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                required:
                  - count
                  - results
                type: object
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                    format: uri
                    nullable: true
                  previous:
                    type: string
                    format: uri
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/JiraProfile'
    post:
      tags:
        - jira-profile
      operationId: jira-profile_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JiraProfile'
        required: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JiraProfile'
      x-codegen-request-body-name: data
  '/divy-backend/jira-profile/{id}':
    get:
      tags:
        - jira-profile
      operationId: jira-profile_read
      parameters:
        - name: id
          in: path
          description: A UUID string identifying this jira profile.
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JiraProfile'
    put:
      tags:
        - jira-profile
      operationId: jira-profile_update
      parameters:
        - name: id
          in: path
          description: A UUID string identifying this jira profile.
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JiraProfile'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JiraProfile'
      x-codegen-request-body-name: data
    delete:
      tags:
        - jira-profile
      operationId: jira-profile_delete
      parameters:
        - name: id
          in: path
          description: A UUID string identifying this jira profile.
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: ''
          content: {}
    patch:
      tags:
        - jira-profile
      operationId: jira-profile_partial_update
      parameters:
        - name: id
          in: path
          description: A UUID string identifying this jira profile.
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JiraProfile'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JiraProfile'
      x-codegen-request-body-name: data
  '/divy-backend/jira-webhook/{profile_id}/':
    post:
      tags:
        - jira-webhook
      description: Processes data from Jira webhook
      operationId: jira-webhook_create
      parameters:
        - name: profile_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '201':
          description: ''
          content: {}
  /divy-backend/jira/all:
    get:
      tags:
        - jira
      description: Returns a list of all ticket required data for the current Jira account
      operationId: jira-all
      parameters:
        - name: object_id
          in: query
          description: JiraProfile or JiraCloudProfile id
          required: true
          schema:
            type: string
        - name: model
          in: query
          description: 'Shows what model user wants to use: JiraProfile or JiraCloudProfile'
          required: true
          schema:
            type: string
            enum:
              - jiraprofile
              - jiracloudprofile
      responses:
        '200':
          description: A List of all ticket required data for the current Jira account
          content: {}
  /divy-backend/jira/issue-types:
    get:
      tags:
        - jira
      description: Returns a list of issue types for the current Jira account
      operationId: jira-issue-types
      parameters:
        - name: object_id
          in: query
          description: JiraProfile or JiraCloudProfile id
          required: true
          schema:
            type: string
        - name: model
          in: query
          description: 'Shows what model user wants to use: JiraProfile or JiraCloudProfile'
          required: true
          schema:
            type: string
            enum:
              - jiraprofile
              - jiracloudprofile
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BaseJiraDataResponseDocs'
  /divy-backend/jira/priorities:
    get:
      tags:
        - jira
      description: Returns a list of priorities for the current Jira account
      operationId: jira-priorities
      parameters:
        - name: object_id
          in: query
          description: JiraProfile or JiraCloudProfile id
          required: true
          schema:
            type: string
        - name: model
          in: query
          description: 'Shows what model user wants to use: JiraProfile or JiraCloudProfile'
          required: true
          schema:
            type: string
            enum:
              - jiraprofile
              - jiracloudprofile
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BaseJiraDataResponseDocs'
  /divy-backend/jira/projects:
    get:
      tags:
        - jira
      description: Returns a list of projects for the current Jira account
      operationId: jira-projects
      parameters:
        - name: object_id
          in: query
          description: JiraProfile or JiraCloudProfile id
          required: true
          schema:
            type: string
        - name: model
          in: query
          description: 'Shows what model user wants to use: JiraProfile or JiraCloudProfile'
          required: true
          schema:
            type: string
            enum:
              - jiraprofile
              - jiracloudprofile
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JiraProjectsResponseDocs'
  /divy-backend/jira/statuses:
    get:
      tags:
        - jira
      description: Returns a list of statuses for the current Jira account
      operationId: jira-statuses
      parameters:
        - name: object_id
          in: query
          description: JiraProfile or JiraCloudProfile id
          required: true
          schema:
            type: string
        - name: model
          in: query
          description: 'Shows what model user wants to use: JiraProfile or JiraCloudProfile'
          required: true
          schema:
            type: string
            enum:
              - jiraprofile
              - jiracloudprofile
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BaseJiraDataResponseDocs'
  /divy-backend/jwks/:
    get:
      tags:
        - jwks
      operationId: jwks_list
      responses:
        '200':
          description: ''
          content: {}
  /divy-backend/labels:
    get:
      tags:
        - labels
      description: Returns a list of labels
      operationId: labels_list
      parameters:
        - name: search
          in: query
          description: A search term.
          schema:
            type: string
        - name: ordering
          in: query
          description: 'Options: name,assets,tickets,findings,baselines'
          schema:
            type: string
        - name: page
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - name: page_size
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                required:
                  - count
                  - results
                type: object
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                    format: uri
                    nullable: true
                  previous:
                    type: string
                    format: uri
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Label'
    post:
      tags:
        - labels
      operationId: labels_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Label'
        required: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Label'
      x-codegen-request-body-name: data
  /divy-backend/labels-mini:
    get:
      tags:
        - labels-mini
      operationId: labels-mini_list
      parameters:
        - name: search
          in: query
          description: A search term.
          schema:
            type: string
        - name: ordering
          in: query
          description: 'Options: name,assets,tickets,findings,baselines'
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LabelMini'
    post:
      tags:
        - labels-mini
      operationId: labels-mini_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LabelMini'
        required: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelMini'
      x-codegen-request-body-name: data
  '/divy-backend/labels-mini/{id}':
    get:
      tags:
        - labels-mini
      operationId: labels-mini_read
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelMini'
    put:
      tags:
        - labels-mini
      operationId: labels-mini_update
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LabelMini'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelMini'
      x-codegen-request-body-name: data
    delete:
      tags:
        - labels-mini
      operationId: labels-mini_delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: ''
          content: {}
    patch:
      tags:
        - labels-mini
      operationId: labels-mini_partial_update
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LabelMini'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelMini'
      x-codegen-request-body-name: data
  '/divy-backend/labels/{id}':
    get:
      tags:
        - labels
      operationId: labels_read
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Label'
    put:
      tags:
        - labels
      operationId: labels_update
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Label'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Label'
      x-codegen-request-body-name: data
    delete:
      tags:
        - labels
      operationId: labels_delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: ''
          content: {}
    patch:
      tags:
        - labels
      operationId: labels_partial_update
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Label'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Label'
      x-codegen-request-body-name: data
  /divy-backend/login/:
    post:
      tags:
        - login
      description: |-
        Overrides the standard JWT auth. Returns a token if login successfully
        or user_id for the MFA
      operationId: login_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomTokenObtainSliding'
        required: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomTokenObtainSliding'
      x-codegen-request-body-name: data
  /divy-backend/mfa/add:
    get:
      tags:
        - mfa
      description: Use this endpoint to set up a new TOTP device
      operationId: mfa-add
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TOPTAddMFAResponseDocs'
  /divy-backend/mfa/submit:
    post:
      tags:
        - mfa
      description: Use this endpoint to verify/enable a TOTP device
      operationId: submit-mfa
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TOPTSubmitMFARequestDocs'
        required: true
      responses:
        '200':
          description: Mfa added successfully
          content: {}
        '404':
          description: Device wasn't found
          content: {}
      x-codegen-request-body-name: data
  /divy-backend/mfa/verify:
    get:
      tags:
        - mfa
      description: Use this endpoint to verify/enable a TOTP device
      operationId: mfa-verify
      parameters:
        - name: oauth
          in: query
          description: Is an OAuth Login
          schema:
            type: boolean
        - name: mfa_uuid
          in: query
          description: MFA UUID from login api
          required: true
          schema:
            type: string
        - name: token
          in: query
          description: MFA Token that the user submitted
          required: true
          schema:
            type: string
        - name: response_type
          in: query
          description: OAuth response code type
          required: true
          schema:
            type: string
        - name: client_id
          in: query
          description: OAuth client id
          required: true
          schema:
            type: string
        - name: redirect_uri
          in: query
          description: OAuth redirect URI
          required: true
          schema:
            type: string
        - name: code_challenge
          in: query
          description: OAuth code challenge
          required: true
          schema:
            type: string
        - name: code_challenge_method
          in: query
          description: OAuth code challenge method
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Authorization is complete
          content: {}
        '404':
          description: Device wasn't found
          content: {}
    post:
      tags:
        - mfa
      description: Use this endpoint to verify/enable a TOTP device
      operationId: mfa-verify1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TOPTVerifyMFARequestDocs'
        required: true
      responses:
        '200':
          description: Authorization is complete
          content: {}
        '404':
          description: Device wasn't found
          content: {}
      x-codegen-request-body-name: data
  '/divy-backend/mfa/{id}':
    delete:
      tags:
        - mfa
      operationId: mfa_delete
      parameters:
        - name: id
          in: path
          description: A unique integer value identifying this TOTP device.
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: ''
          content: {}
  /divy-backend/minion-groups:
    get:
      tags:
        - minion-groups
      operationId: minion-groups_list
      parameters:
        - name: page
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                required:
                  - count
                  - results
                type: object
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                    format: uri
                    nullable: true
                  previous:
                    type: string
                    format: uri
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/MinionGroupList'
    post:
      tags:
        - minion-groups
      operationId: minion-groups_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MinionGroup'
        required: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MinionGroup'
      x-codegen-request-body-name: data
  '/divy-backend/minion-groups/{id}':
    get:
      tags:
        - minion-groups
      operationId: minion-groups_read
      parameters:
        - name: id
          in: path
          description: A UUID string identifying this minion group.
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MinionGroupList'
    put:
      tags:
        - minion-groups
      operationId: minion-groups_update
      parameters:
        - name: id
          in: path
          description: A UUID string identifying this minion group.
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MinionGroup'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MinionGroup'
      x-codegen-request-body-name: data
    delete:
      tags:
        - minion-groups
      operationId: minion-groups_delete
      parameters:
        - name: id
          in: path
          description: A UUID string identifying this minion group.
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: ''
          content: {}
    patch:
      tags:
        - minion-groups
      operationId: minion-groups_partial_update
      parameters:
        - name: id
          in: path
          description: A UUID string identifying this minion group.
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MinionGroup'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MinionGroup'
      x-codegen-request-body-name: data
  /divy-backend/minions:
    get:
      tags:
        - minions
      operationId: minions_list
      parameters:
        - name: search
          in: query
          description: A search term.
          schema:
            type: string
        - name: status
          in: query
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
              enum:
                - '0'
                - '1'
                - '2'
                - '3'
                - '4'
        - name: ordering
          in: query
          description: Which field to use when ordering the results.
          schema:
            type: string
        - name: page
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Minion'
    post:
      tags:
        - minions
      operationId: minions_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Minion'
        required: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Minion'
      x-codegen-request-body-name: data
  /divy-backend/minions/bulk-delete:
    post:
      tags:
        - minions
      description: Bulk delete endpoint
      operationId: minions_bulk_delete
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MinionSwaggerAPI'
        required: true
      responses:
        '204':
          description: Successfully deleted minions.
          content: {}
        '400':
          description: Check the provided ids.
          content: {}
      x-codegen-request-body-name: data
  /divy-backend/minions/sync-minions:
    get:
      tags:
        - minions
      operationId: minions_sync_minions
      parameters:
        - name: search
          in: query
          description: A search term.
          schema:
            type: string
        - name: status
          in: query
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
              enum:
                - '0'
                - '1'
                - '2'
                - '3'
                - '4'
        - name: ordering
          in: query
          description: Which field to use when ordering the results.
          schema:
            type: string
        - name: page
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
      responses:
        '200':
          description: Task for syncing minions was added to queue.
          content: {}
  '/divy-backend/minions/{id}':
    get:
      tags:
        - minions
      operationId: minions_read
      parameters:
        - name: id
          in: path
          description: A UUID string identifying this minion.
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Minion'
    put:
      tags:
        - minions
      operationId: minions_update
      parameters:
        - name: id
          in: path
          description: A UUID string identifying this minion.
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Minion'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Minion'
      x-codegen-request-body-name: data
    delete:
      tags:
        - minions
      operationId: minions_delete
      parameters:
        - name: id
          in: path
          description: A UUID string identifying this minion.
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: ''
          content: {}
    patch:
      tags:
        - minions
      operationId: minions_partial_update
      parameters:
        - name: id
          in: path
          description: A UUID string identifying this minion.
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Minion'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Minion'
      x-codegen-request-body-name: data
  /divy-backend/modules:
    get:
      tags:
        - modules
      operationId: modules_list
      parameters:
        - name: function_id
          in: query
          schema:
            type: string
        - name: name
          in: query
          schema:
            type: string
        - name: search
          in: query
          description: A search term.
          schema:
            type: string
        - name: page
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                required:
                  - count
                  - results
                type: object
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                    format: uri
                    nullable: true
                  previous:
                    type: string
                    format: uri
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Module'
  '/divy-backend/modules/{id}':
    get:
      tags:
        - modules
      operationId: modules_read
      parameters:
        - name: id
          in: path
          description: A UUID string identifying this module.
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Module'
  /divy-backend/monitor-history:
    get:
      tags:
        - monitor-history
      operationId: monitor-history_list
      parameters:
        - name: ordering
          in: query
          description: 'Options: asset,groups,scan'
          schema:
            type: string
        - name: asset_id
          in: query
          schema:
            type: string
        - name: group_id
          in: query
          schema:
            type: string
        - name: monitor_id
          in: query
          schema:
            type: string
        - name: data_type
          in: query
          schema:
            type: string
        - name: search
          in: query
          description: A search term.
          schema:
            type: string
        - name: page
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                required:
                  - count
                  - results
                type: object
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                    format: uri
                    nullable: true
                  previous:
                    type: string
                    format: uri
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/MonitorHistory'
  '/divy-backend/monitor-history/{id}':
    get:
      tags:
        - monitor-history
      operationId: monitor-history_read
      parameters:
        - name: id
          in: path
          description: A UUID string identifying this monitor history.
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MonitorHistory'
  '/divy-backend/monitor-history/{id}/datalist':
    get:
      tags:
        - monitor-history
      operationId: monitor-history_datalist
      parameters:
        - name: id
          in: path
          description: A UUID string identifying this monitor history.
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MonitorHistory'
  /divy-backend/monitors:
    get:
      tags:
        - monitors
      operationId: monitors_list
      parameters:
        - name: ordering
          in: query
          description: 'Options: name,data_type,assets,groups,assign_to_data_type'
          schema:
            type: string
        - name: asset_id
          in: query
          schema:
            type: string
        - name: group_id
          in: query
          schema:
            type: string
        - name: data_type
          in: query
          schema:
            type: string
        - name: search
          in: query
          description: A search term.
          schema:
            type: string
        - name: page
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                required:
                  - count
                  - results
                type: object
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                    format: uri
                    nullable: true
                  previous:
                    type: string
                    format: uri
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Monitor'
    post:
      tags:
        - monitors
      operationId: monitors_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Monitor'
        required: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Monitor'
      x-codegen-request-body-name: data
  /divy-backend/monitors/custom-datalist:
    get:
      tags:
        - monitors
      operationId: monitors_custom-datalist_list
      parameters:
        - name: page
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                required:
                  - count
                  - results
                type: object
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                    format: uri
                    nullable: true
                  previous:
                    type: string
                    format: uri
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/CustomDatalist'
    post:
      tags:
        - monitors
      operationId: monitors_custom-datalist_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomDatalist'
        required: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomDatalist'
      x-codegen-request-body-name: data
  '/divy-backend/monitors/custom-datalist/{id}':
    get:
      tags:
        - monitors
      operationId: monitors_custom-datalist_read
      parameters:
        - name: id
          in: path
          description: A UUID string identifying this data list.
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomDatalist'
    put:
      tags:
        - monitors
      operationId: monitors_custom-datalist_update
      parameters:
        - name: id
          in: path
          description: A UUID string identifying this data list.
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomDatalist'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomDatalist'
      x-codegen-request-body-name: data
    delete:
      tags:
        - monitors
      operationId: monitors_custom-datalist_delete
      parameters:
        - name: id
          in: path
          description: A UUID string identifying this data list.
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: ''
          content: {}
    patch:
      tags:
        - monitors
      operationId: monitors_custom-datalist_partial_update
      parameters:
        - name: id
          in: path
          description: A UUID string identifying this data list.
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomDatalist'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomDatalist'
      x-codegen-request-body-name: data
  /divy-backend/monitors/data-list:
    get:
      tags:
        - monitors
      description: user data_type + display_fields or monitor_id
      operationId: monitors_data_list
      parameters:
        - name: ordering
          in: query
          description: 'Options: name,data_type,assets,groups,assign_to_data_type'
          schema:
            type: string
        - name: asset_id
          in: query
          schema:
            type: string
        - name: group_id
          in: query
          schema:
            type: string
        - name: data_type
          in: query
          schema:
            type: string
        - name: search
          in: query
          description: A search term.
          schema:
            type: string
        - name: page
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                required:
                  - count
                  - results
                type: object
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                    format: uri
                    nullable: true
                  previous:
                    type: string
                    format: uri
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Monitor'
  /divy-backend/monitors/duplicate:
    post:
      tags:
        - monitors
      operationId: monitor-duplicate
      requestBody:
        content:
          application/json:
            schema:
              required:
                - id
              type: object
              properties:
                id:
                  type: string
                  format: uuid
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Monitor'
        '404':
          description: Monitor doesn't exists
          content: {}
      x-codegen-request-body-name: data
  /divy-backend/monitors/select-options:
    get:
      tags:
        - monitors
      operationId: monitors_action_choices
      parameters:
        - name: ordering
          in: query
          description: 'Options: name,data_type,assets,groups,assign_to_data_type'
          schema:
            type: string
        - name: asset_id
          in: query
          schema:
            type: string
        - name: group_id
          in: query
          schema:
            type: string
        - name: data_type
          in: query
          schema:
            type: string
        - name: search
          in: query
          description: A search term.
          schema:
            type: string
        - name: page
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                required:
                  - count
                  - results
                type: object
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                    format: uri
                    nullable: true
                  previous:
                    type: string
                    format: uri
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Monitor'
  '/divy-backend/monitors/{id}':
    get:
      tags:
        - monitors
      operationId: monitors_read
      parameters:
        - name: id
          in: path
          description: A UUID string identifying this monitor.
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MonitorDetailed'
    put:
      tags:
        - monitors
      operationId: monitors_update
      parameters:
        - name: id
          in: path
          description: A UUID string identifying this monitor.
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Monitor'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Monitor'
      x-codegen-request-body-name: data
    delete:
      tags:
        - monitors
      operationId: monitors_delete
      parameters:
        - name: id
          in: path
          description: A UUID string identifying this monitor.
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: ''
          content: {}
    patch:
      tags:
        - monitors
      operationId: monitors_partial_update
      parameters:
        - name: id
          in: path
          description: A UUID string identifying this monitor.
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Monitor'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Monitor'
      x-codegen-request-body-name: data
  '/divy-backend/monitors/{id}/add-asset':
    post:
      tags:
        - monitors
      description: Add assets to monitor
      operationId: monitor-add-asset
      parameters:
        - name: id
          in: path
          description: A UUID string identifying this monitor.
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssetID'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Monitor'
        '400':
          description: ids parameter missing
          content: {}
        '404':
          description: Monitor doesn't exists
          content: {}
      x-codegen-request-body-name: data
  '/divy-backend/monitors/{id}/add-group':
    post:
      tags:
        - monitors
      description: Add group assets to monitor
      operationId: monitor-add-group
      parameters:
        - name: id
          in: path
          description: A UUID string identifying this monitor.
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupID'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Monitor'
        '400':
          description: group parameter missing
          content: {}
        '404':
          description: Group doesn't exists
          content: {}
      x-codegen-request-body-name: data
  '/divy-backend/monitors/{id}/add-rule':
    post:
      tags:
        - monitors
      description: Adds rule to the monitor
      operationId: add_rule_monitor
      parameters:
        - name: id
          in: path
          description: A UUID string identifying this monitor.
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ControlListIdserializer'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Monitor'
        '400':
          description: ids parameter required
          content: {}
        '404':
          description: Monitor doesn't exists
          content: {}
      x-codegen-request-body-name: data
  '/divy-backend/monitors/{id}/conditions':
    get:
      tags:
        - monitors
      operationId: monitors_monitor_conditions
      parameters:
        - name: id
          in: path
          description: A UUID string identifying this monitor.
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Monitor'
  '/divy-backend/monitors/{id}/delete-asset':
    post:
      tags:
        - monitors
      operationId: monitor-delete-asset
      parameters:
        - name: id
          in: path
          description: A UUID string identifying this monitor.
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssetID'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Monitor'
        '400':
          description: id parameter missing
          content: {}
        '404':
          description: Monitor doesn't exists
          content: {}
      x-codegen-request-body-name: data
  '/divy-backend/monitors/{id}/delete-group':
    post:
      tags:
        - monitors
      operationId: monitors_delete_group
      parameters:
        - name: id
          in: path
          description: A UUID string identifying this monitor.
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Monitor'
        required: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Monitor'
      x-codegen-request-body-name: data
  '/divy-backend/monitors/{id}/delete-rule':
    post:
      tags:
        - monitors
      description: Removes rule from monitor
      operationId: monitor-delete-rule
      parameters:
        - name: id
          in: path
          description: A UUID string identifying this monitor.
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ControlListIdserializer'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Monitor'
        '400':
          description: ids parameter required
          content: {}
        '404':
          description: Monitor doesn't exists
          content: {}
      x-codegen-request-body-name: data
  '/divy-backend/monitors/{id}/run-monitor':
    post:
      tags:
        - monitors
      operationId: monitors_run_monitor
      parameters:
        - name: id
          in: path
          description: A UUID string identifying this monitor.
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Monitor'
        required: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Monitor'
      x-codegen-request-body-name: data
  /divy-backend/notifications:
    get:
      tags:
        - notifications
      operationId: notifications_list
      parameters:
        - name: search
          in: query
          description: A search term.
          schema:
            type: string
        - name: ordering
          in: query
          description: 'Options: subject,date,label,notification_type'
          schema:
            type: string
        - name: baseline_id
          in: query
          schema:
            type: string
        - name: findings_id
          in: query
          schema:
            type: string
        - name: label_id
          in: query
          schema:
            type: string
        - name: notification_type
          in: query
          schema:
            type: string
        - name: related_type
          in: query
          schema:
            type: string
        - name: scan_id
          in: query
          schema:
            type: string
        - name: page
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - name: page_size
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                required:
                  - count
                  - results
                type: object
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                    format: uri
                    nullable: true
                  previous:
                    type: string
                    format: uri
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Notification'
  /divy-backend/notifications/interested:
    put:
      tags:
        - notifications
      description: Update list of subscribed notifications
      operationId: notifications_get_projects
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Notification'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notification'
      x-codegen-request-body-name: data
  /divy-backend/notifications/notification-list:
    get:
      tags:
        - notifications
      operationId: notifications_get_notification_list
      parameters:
        - name: search
          in: query
          description: A search term.
          schema:
            type: string
        - name: ordering
          in: query
          description: 'Options: subject,date,label,notification_type'
          schema:
            type: string
        - name: baseline_id
          in: query
          schema:
            type: string
        - name: findings_id
          in: query
          schema:
            type: string
        - name: label_id
          in: query
          schema:
            type: string
        - name: notification_type
          in: query
          schema:
            type: string
        - name: related_type
          in: query
          schema:
            type: string
        - name: scan_id
          in: query
          schema:
            type: string
        - name: page
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - name: page_size
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                required:
                  - count
                  - results
                type: object
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                    format: uri
                    nullable: true
                  previous:
                    type: string
                    format: uri
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Notification'
  '/divy-backend/notifications/{id}':
    get:
      tags:
        - notifications
      operationId: notifications_read
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notification'
    put:
      tags:
        - notifications
      operationId: notifications_update
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationUpdate'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationUpdate'
      x-codegen-request-body-name: data
    patch:
      tags:
        - notifications
      operationId: notifications_partial_update
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Notification'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notification'
      x-codegen-request-body-name: data
  /divy-backend/permissions:
    get:
      tags:
        - permissions
      description: Returns a list of permissions
      operationId: permissions_list
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Permission'
  /divy-backend/persistent-cache-set:
    get:
      tags:
        - persistent-cache-set
      operationId: persistent-cache-set_list
      parameters:
        - name: playbook_id
          in: query
          schema:
            type: string
        - name: page
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                required:
                  - count
                  - results
                type: object
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                    format: uri
                    nullable: true
                  previous:
                    type: string
                    format: uri
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/PersistentCacheSet'
    post:
      tags:
        - persistent-cache-set
      operationId: persistent-cache-set_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PersistentCacheSet'
        required: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersistentCacheSet'
      x-codegen-request-body-name: data
  '/divy-backend/persistent-cache-set/{id}':
    get:
      tags:
        - persistent-cache-set
      operationId: persistent-cache-set_read
      parameters:
        - name: id
          in: path
          description: A UUID string identifying this persistent cache set.
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersistentCacheSet'
    put:
      tags:
        - persistent-cache-set
      operationId: persistent-cache-set_update
      parameters:
        - name: id
          in: path
          description: A UUID string identifying this persistent cache set.
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PersistentCacheSet'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersistentCacheSet'
      x-codegen-request-body-name: data
    delete:
      tags:
        - persistent-cache-set
      operationId: persistent-cache-set_delete
      parameters:
        - name: id
          in: path
          description: A UUID string identifying this persistent cache set.
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: ''
          content: {}
    patch:
      tags:
        - persistent-cache-set
      operationId: persistent-cache-set_partial_update
      parameters:
        - name: id
          in: path
          description: A UUID string identifying this persistent cache set.
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PersistentCacheSet'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersistentCacheSet'
      x-codegen-request-body-name: data
  /divy-backend/playbook:
    get:
      tags:
        - playbook
      operationId: playbook_list
      parameters:
        - name: search
          in: query
          description: A search term.
          schema:
            type: string
        - name: page
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                required:
                  - count
                  - results
                type: object
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                    format: uri
                    nullable: true
                  previous:
                    type: string
                    format: uri
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Playbook'
    post:
      tags:
        - playbook
      operationId: playbook_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Playbook'
        required: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Playbook'
      x-codegen-request-body-name: data
  /divy-backend/playbook-configuration:
    get:
      tags:
        - playbook-configuration
      operationId: playbook-configuration_list
      parameters:
        - name: playbook_id
          in: query
          schema:
            type: string
        - name: minion_id
          in: query
          schema:
            type: string
        - name: label_id
          in: query
          schema:
            type: string
        - name: target_id
          in: query
          schema:
            type: string
        - name: tag_id
          in: query
          schema:
            type: string
        - name: search
          in: query
          description: A search term.
          schema:
            type: string
        - name: page
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                required:
                  - count
                  - results
                type: object
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                    format: uri
                    nullable: true
                  previous:
                    type: string
                    format: uri
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/PlaybookConfigurationList'
    post:
      tags:
        - playbook-configuration
      operationId: playbook-configuration_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlaybookConfiguration'
        required: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlaybookConfiguration'
      x-codegen-request-body-name: data
  '/divy-backend/playbook-configuration/{id}':
    get:
      tags:
        - playbook-configuration
      operationId: playbook-configuration_read
      parameters:
        - name: id
          in: path
          description: A UUID string identifying this playbook configuration.
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlaybookConfigurationList'
    put:
      tags:
        - playbook-configuration
      operationId: playbook-configuration_update
      parameters:
        - name: id
          in: path
          description: A UUID string identifying this playbook configuration.
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlaybookConfiguration'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlaybookConfiguration'
      x-codegen-request-body-name: data
    delete:
      tags:
        - playbook-configuration
      operationId: playbook-configuration_delete
      parameters:
        - name: id
          in: path
          description: A UUID string identifying this playbook configuration.
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: ''
          content: {}
    patch:
      tags:
        - playbook-configuration
      operationId: playbook-configuration_partial_update
      parameters:
        - name: id
          in: path
          description: A UUID string identifying this playbook configuration.
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlaybookConfiguration'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlaybookConfiguration'
      x-codegen-request-body-name: data
  '/divy-backend/playbook-configuration/{id}/run':
    post:
      tags:
        - playbook-configuration
      operationId: playbook-configuration_run_playbook_configuration
      parameters:
        - name: id
          in: path
          description: A UUID string identifying this playbook configuration.
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlaybookConfigurationList'
        required: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlaybookConfigurationList'
      x-codegen-request-body-name: data
  '/divy-backend/playbook/{id}':
    get:
      tags:
        - playbook
      operationId: playbook_read
      parameters:
        - name: id
          in: path
          description: A UUID string identifying this playbook.
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Playbook'
    put:
      tags:
        - playbook
      operationId: playbook_update
      parameters:
        - name: id
          in: path
          description: A UUID string identifying this playbook.
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Playbook'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Playbook'
      x-codegen-request-body-name: data
    delete:
      tags:
        - playbook
      operationId: playbook_delete
      parameters:
        - name: id
          in: path
          description: A UUID string identifying this playbook.
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: ''
          content: {}
    patch:
      tags:
        - playbook
      operationId: playbook_partial_update
      parameters:
        - name: id
          in: path
          description: A UUID string identifying this playbook.
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Playbook'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Playbook'
      x-codegen-request-body-name: data
  '/divy-backend/redis-key-value/{key}/':
    get:
      tags:
        - redis-key-value
      operationId: redis-key-value_read
      parameters:
        - name: key
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content: {}
  /divy-backend/regions:
    get:
      tags:
        - regions
      operationId: regions_list
      parameters:
        - name: page
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content: {}
  /divy-backend/report-confs:
    get:
      tags:
        - report-confs
      operationId: report-confs_list
      parameters:
        - name: label_id
          in: query
          schema:
            type: string
        - name: baseline_id
          in: query
          schema:
            type: string
        - name: group_id
          in: query
          schema:
            type: string
        - name: search
          in: query
          description: A search term.
          schema:
            type: string
        - name: page
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - name: page_size
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                required:
                  - count
                  - results
                type: object
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                    format: uri
                    nullable: true
                  previous:
                    type: string
                    format: uri
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/ReportConfiguration'
    post:
      tags:
        - report-confs
      operationId: report-confs_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReportConfiguration'
        required: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportConfiguration'
      x-codegen-request-body-name: data
  /divy-backend/report-confs/pages-list:
    get:
      tags:
        - report-confs
      operationId: report-confs_get_pages_list
      parameters:
        - name: label_id
          in: query
          schema:
            type: string
        - name: baseline_id
          in: query
          schema:
            type: string
        - name: group_id
          in: query
          schema:
            type: string
        - name: search
          in: query
          description: A search term.
          schema:
            type: string
        - name: page
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - name: page_size
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                required:
                  - count
                  - results
                type: object
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                    format: uri
                    nullable: true
                  previous:
                    type: string
                    format: uri
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/ReportConfiguration'
  /divy-backend/report-confs/periods:
    get:
      tags:
        - report-confs
      operationId: report-confs_get_periods
      parameters:
        - name: label_id
          in: query
          schema:
            type: string
        - name: baseline_id
          in: query
          schema:
            type: string
        - name: group_id
          in: query
          schema:
            type: string
        - name: search
          in: query
          description: A search term.
          schema:
            type: string
        - name: page
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - name: page_size
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                required:
                  - count
                  - results
                type: object
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                    format: uri
                    nullable: true
                  previous:
                    type: string
                    format: uri
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/ReportConfiguration'
  '/divy-backend/report-confs/{id}':
    get:
      tags:
        - report-confs
      operationId: report-confs_read
      parameters:
        - name: id
          in: path
          description: A UUID string identifying this report configuration.
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportConfiguration'
    put:
      tags:
        - report-confs
      operationId: report-confs_update
      parameters:
        - name: id
          in: path
          description: A UUID string identifying this report configuration.
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReportConfiguration'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportConfiguration'
      x-codegen-request-body-name: data
    delete:
      tags:
        - report-confs
      operationId: report-confs_delete
      parameters:
        - name: id
          in: path
          description: A UUID string identifying this report configuration.
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: ''
          content: {}
    patch:
      tags:
        - report-confs
      operationId: report-confs_partial_update
      parameters:
        - name: id
          in: path
          description: A UUID string identifying this report configuration.
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReportConfiguration'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportConfiguration'
      x-codegen-request-body-name: data
  '/divy-backend/report-confs/{id}/run':
    post:
      tags:
        - report-confs
      operationId: report-confs_run
      parameters:
        - name: id
          in: path
          description: A UUID string identifying this report configuration.
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReportConfiguration'
        required: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportConfiguration'
      x-codegen-request-body-name: data
  '/divy-backend/report-confs/{id}/view':
    post:
      tags:
        - report-confs
      operationId: report-confs_tickets_pdf
      parameters:
        - name: id
          in: path
          description: A UUID string identifying this report configuration.
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReportConfiguration'
        required: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportConfiguration'
      x-codegen-request-body-name: data
  /divy-backend/request-secrets:
    get:
      tags:
        - request-secrets
      operationId: request-secrets_list
      parameters:
        - name: page
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                required:
                  - count
                  - results
                type: object
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                    format: uri
                    nullable: true
                  previous:
                    type: string
                    format: uri
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/SecretsRequest'
    post:
      tags:
        - request-secrets
      operationId: request-secrets_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecretsRequest'
        required: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecretsRequest'
      x-codegen-request-body-name: data
  '/divy-backend/request-secrets/{id}':
    get:
      tags:
        - request-secrets
      operationId: request-secrets_read
      parameters:
        - name: id
          in: path
          description: A UUID string identifying this secrets request.
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecretsRequest'
    put:
      tags:
        - request-secrets
      operationId: request-secrets_update
      parameters:
        - name: id
          in: path
          description: A UUID string identifying this secrets request.
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecretsRequest'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecretsRequest'
      x-codegen-request-body-name: data
    delete:
      tags:
        - request-secrets
      operationId: request-secrets_delete
      parameters:
        - name: id
          in: path
          description: A UUID string identifying this secrets request.
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: ''
          content: {}
    patch:
      tags:
        - request-secrets
      operationId: request-secrets_partial_update
      parameters:
        - name: id
          in: path
          description: A UUID string identifying this secrets request.
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecretsRequest'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecretsRequest'
      x-codegen-request-body-name: data
  /divy-backend/reset-password/new-password:
    post:
      tags:
        - reset-password
      description: Validates and sets the new password
      operationId: new-password
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewPasswordRequestDocs'
        required: true
      responses:
        '200':
          description: Password was changed
          content: {}
        '400':
          description: |-
            Responses:

            •Your reset password url was expired

            •Token has not pass checking

            •Check your password
          content: {}
      x-codegen-request-body-name: data
  /divy-backend/reset-password/reset:
    post:
      tags:
        - reset-password
      description: Sends a link to the user's email to reset password
      operationId: reset-password
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetPasswordRequestDocs'
        required: true
      responses:
        '200':
          description: Reset password mail was sent
          content: {}
        '400':
          description: Your already have reset password link on your email
          content: {}
        '404':
          description: User with provided username does not exist
          content: {}
      x-codegen-request-body-name: data
  /divy-backend/reset-password/validate-token:
    get:
      tags:
        - reset-password
      description: Validate token
      operationId: token-validation
      parameters:
        - name: uid
          in: query
          required: true
          schema:
            minLength: 1
            type: string
        - name: token
          in: query
          required: true
          schema:
            minLength: 1
            type: string
      responses:
        '200':
          description: Token valid
          content: {}
        '400':
          description: |-
            Responses:

            •Reset password link has expired

            •Token has not pass checking
          content: {}
  /divy-backend/roles:
    get:
      tags:
        - roles
      operationId: roles_list
      parameters:
        - name: ordering
          in: query
          description: 'Options: name or permissions_count or users_count'
          schema:
            type: string
        - name: page
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - name: page_size
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                required:
                  - count
                  - results
                type: object
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                    format: uri
                    nullable: true
                  previous:
                    type: string
                    format: uri
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/RoleRead'
    post:
      tags:
        - roles
      operationId: roles_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleWrite'
        required: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleWrite'
      x-codegen-request-body-name: data
  '/divy-backend/roles/{id}':
    get:
      tags:
        - roles
      operationId: roles_read
      parameters:
        - name: id
          in: path
          description: A UUID string identifying this role.
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleRead'
    put:
      tags:
        - roles
      operationId: roles_update
      parameters:
        - name: id
          in: path
          description: A UUID string identifying this role.
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleWrite'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleWrite'
      x-codegen-request-body-name: data
    delete:
      tags:
        - roles
      operationId: roles_delete
      parameters:
        - name: id
          in: path
          description: A UUID string identifying this role.
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: ''
          content: {}
    patch:
      tags:
        - roles
      operationId: roles_partial_update
      parameters:
        - name: id
          in: path
          description: A UUID string identifying this role.
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleWrite'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleWrite'
      x-codegen-request-body-name: data
  '/divy-backend/roles/{id}/clone':
    post:
      tags:
        - roles
      description: Clones role according to provided uuid
      operationId: roles_clone_role
      parameters:
        - name: id
          in: path
          description: A UUID string identifying this role.
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              type: object
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleRead'
      x-codegen-request-body-name: data
  /divy-backend/s3-profile:
    get:
      tags:
        - s3-profile
      operationId: s3-profile_list
      parameters:
        - name: page
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                required:
                  - count
                  - results
                type: object
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                    format: uri
                    nullable: true
                  previous:
                    type: string
                    format: uri
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/S3Profile'
    post:
      tags:
        - s3-profile
      operationId: s3-profile_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/S3Profile'
        required: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/S3Profile'
      x-codegen-request-body-name: data
  /divy-backend/s3-profile/:
    put:
      tags:
        - s3-profile
      operationId: s3-profile_update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/S3Profile'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/S3Profile'
      x-codegen-request-body-name: data
    delete:
      tags:
        - s3-profile
      operationId: s3-profile_delete
      responses:
        '204':
          description: ''
          content: {}
    patch:
      tags:
        - s3-profile
      operationId: s3-profile_partial_update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/S3Profile'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/S3Profile'
      x-codegen-request-body-name: data
  /divy-backend/scan-errors:
    get:
      tags:
        - scan-errors
      operationId: scan-errors_list
      parameters:
        - name: page
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                required:
                  - count
                  - results
                type: object
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                    format: uri
                    nullable: true
                  previous:
                    type: string
                    format: uri
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/ScanErrors'
  /divy-backend/scans:
    get:
      tags:
        - scans
      description: Returns a list of scans
      operationId: scans_list
      parameters:
        - name: ordering
          in: query
          description: >-
            Options:
            data_type,audit_files,scan_file,scan_date,tags,errors,label,target,assets
          schema:
            type: string
        - name: scan_date
          in: query
          schema:
            type: string
        - name: data_type
          in: query
          schema:
            type: string
        - name: label_id
          in: query
          schema:
            type: string
        - name: asset_id
          in: query
          schema:
            type: string
        - name: search
          in: query
          description: A search term.
          schema:
            type: string
        - name: page
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - name: page_size
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                required:
                  - count
                  - results
                type: object
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                    format: uri
                    nullable: true
                  previous:
                    type: string
                    format: uri
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Scan'
  /divy-backend/scans/add-tag:
    post:
      tags:
        - scans
      description: add tag
      operationId: scan-add-tag
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScanTag'
        required: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScanTag'
      x-codegen-request-body-name: data
  /divy-backend/scans/data-types:
    get:
      tags:
        - scans
      description: Get scan source choices
      operationId: sources-choices
      parameters:
        - name: ordering
          in: query
          description: >-
            Options:
            data_type,audit_files,scan_file,scan_date,tags,errors,label,target,assets
          schema:
            type: string
        - name: scan_date
          in: query
          schema:
            type: string
        - name: data_type
          in: query
          schema:
            type: string
        - name: label_id
          in: query
          schema:
            type: string
        - name: asset_id
          in: query
          schema:
            type: string
        - name: search
          in: query
          description: A search term.
          schema:
            type: string
        - name: page
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - name: page_size
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                required:
                  - count
                  - results
                type: object
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                    format: uri
                    nullable: true
                  previous:
                    type: string
                    format: uri
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Scan'
  /divy-backend/scans/run:
    post:
      tags:
        - scans
      operationId: run-parsers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Scan'
        required: true
      responses:
        '200':
          description: Task for run parsers was added to queue.
          content: {}
        '404':
          description: Periodic Task run parsers does not exist.
          content: {}
      x-codegen-request-body-name: data
  /divy-backend/scans/scans-chart-data:
    get:
      tags:
        - scans
      operationId: scans_scans_chart_data
      parameters:
        - name: ordering
          in: query
          description: >-
            Options:
            data_type,audit_files,scan_file,scan_date,tags,errors,label,target,assets
          schema:
            type: string
        - name: scan_date
          in: query
          schema:
            type: string
        - name: data_type
          in: query
          schema:
            type: string
        - name: label_id
          in: query
          schema:
            type: string
        - name: asset_id
          in: query
          schema:
            type: string
        - name: search
          in: query
          description: A search term.
          schema:
            type: string
        - name: page
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - name: page_size
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                required:
                  - count
                  - results
                type: object
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                    format: uri
                    nullable: true
                  previous:
                    type: string
                    format: uri
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Scan'
  '/divy-backend/scans/{id}':
    get:
      tags:
        - scans
      description: Returns a certain scan by id
      operationId: scans_read
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Scan'
    delete:
      tags:
        - scans
      operationId: scans_delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: ''
          content: {}
  '/divy-backend/scans/{id}/assets-details':
    get:
      tags:
        - scans
      description: Get scan assets data
      operationId: assets-details
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Scan'
  /divy-backend/screen:
    get:
      tags:
        - screen
      description: A view for the dashboard that provides data for the frontend dashboard.
      operationId: screen_list
      parameters:
        - name: data_type
          in: query
          required: true
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
              enum:
                - SUMMARIZED_LIST
                - LISTING_IMAGES
                - IMAGE_DETAILS
                - SENSITIVE_DATA
                - RESOURCE_IMAGES
                - INSPECT_IMAGES
                - METADATA_IMAGE
                - SCAN_HISTORY_IMAGES
                - RISK_BASED_PRIORITIZATION
                - EXECUTIVE_COMPLIANCE_SUMMARY
                - ASSET_COMPLIANCE_SUMMARY
        - name: page
          in: query
          schema:
            type: integer
        - name: limit
          in: query
          schema:
            type: integer
        - name: asset
          in: query
          schema:
            type: string
        - name: registry
          in: query
          schema:
            type: string
        - name: repository_name
          in: query
          schema:
            type: string
        - name: high_to_critical
          in: query
          schema:
            type: string
        - name: network_attack
          in: query
          schema:
            type: string
        - name: status
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Screen data
          content: {}
  /divy-backend/servicenow:
    get:
      tags:
        - servicenow
      operationId: servicenow_list
      parameters:
        - name: page
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                required:
                  - count
                  - results
                type: object
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                    format: uri
                    nullable: true
                  previous:
                    type: string
                    format: uri
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/ServiceNowProfile'
    post:
      tags:
        - servicenow
      operationId: servicenow_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceNowProfile'
        required: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceNowProfile'
      x-codegen-request-body-name: data
  '/divy-backend/servicenow/{id}':
    get:
      tags:
        - servicenow
      operationId: servicenow_read
      parameters:
        - name: id
          in: path
          description: A UUID string identifying this service now profile.
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceNowProfile'
    put:
      tags:
        - servicenow
      operationId: servicenow_update
      parameters:
        - name: id
          in: path
          description: A UUID string identifying this service now profile.
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceNowProfile'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceNowProfile'
      x-codegen-request-body-name: data
    delete:
      tags:
        - servicenow
      operationId: servicenow_delete
      parameters:
        - name: id
          in: path
          description: A UUID string identifying this service now profile.
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: ''
          content: {}
    patch:
      tags:
        - servicenow
      operationId: servicenow_partial_update
      parameters:
        - name: id
          in: path
          description: A UUID string identifying this service now profile.
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceNowProfile'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceNowProfile'
      x-codegen-request-body-name: data
  /divy-backend/sign-up:
    post:
      tags:
        - sign-up
      operationId: sign-up_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignUp'
        required: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignUp'
      x-codegen-request-body-name: data
  /divy-backend/soarcast/sync-git-modules/:
    get:
      tags:
        - soarcast
      description: Sync Modules to salt minions from masters
      operationId: soarcast_sync-git-modules_list
      responses:
        '200':
          description: ''
          content: {}
  '/divy-backend/soarcast/sync-git-modules/{id}/':
    get:
      tags:
        - soarcast
      description: Sync Modules to salt minions from masters
      operationId: soarcast_sync-git-modules_read
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content: {}
  /divy-backend/sources/:
    get:
      tags:
        - sources
      description: Returns a list of sources
      operationId: source-list
      responses:
        '200':
          description: Source list
          content: {}
  '/divy-backend/submit-secrets/{set_id}/':
    get:
      tags:
        - submit-secrets
      operationId: submit-secrets_read
      parameters:
        - name: set_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content: {}
    post:
      tags:
        - submit-secrets
      operationId: submit-secrets_create
      parameters:
        - name: set_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '201':
          description: ''
          content: {}
  /divy-backend/switch-tenant/:
    post:
      tags:
        - switch-tenant
      operationId: switch-tenant_create
      parameters:
        - name: tenant_id
          in: query
          schema:
            type: integer
      responses:
        '200':
          description: JWT Token
          content: {}
  '/divy-backend/sync-module-admin/{id}/':
    get:
      tags:
        - sync-module-admin
      description: Sync Modules to salt minions from masters
      operationId: sync-module-admin_read
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content: {}
  '/divy-backend/sync-module/{id}/':
    post:
      tags:
        - sync-module
      description: Sync Modules to salt minions
      operationId: sync-module_create
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '201':
          description: ''
          content: {}
  /divy-backend/tags:
    get:
      tags:
        - tags
      description: Returns a list of tags
      operationId: tags_list
      parameters:
        - name: search
          in: query
          description: A search term.
          schema:
            type: string
        - name: data_type
          in: query
          schema:
            type: string
        - name: page
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - name: page_size
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                required:
                  - count
                  - results
                type: object
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                    format: uri
                    nullable: true
                  previous:
                    type: string
                    format: uri
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Tag'
    post:
      tags:
        - tags
      operationId: tags_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tag'
        required: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
      x-codegen-request-body-name: data
  '/divy-backend/tags/{id}':
    get:
      tags:
        - tags
      operationId: tags_read
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
    put:
      tags:
        - tags
      operationId: tags_update
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tag'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
      x-codegen-request-body-name: data
    delete:
      tags:
        - tags
      operationId: tags_delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: ''
          content: {}
    patch:
      tags:
        - tags
      operationId: tags_partial_update
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tag'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
      x-codegen-request-body-name: data
  /divy-backend/target-types:
    get:
      tags:
        - target-types
      operationId: target-types_list
      parameters:
        - name: page
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                required:
                  - count
                  - results
                type: object
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                    format: uri
                    nullable: true
                  previous:
                    type: string
                    format: uri
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/TargetType'
  '/divy-backend/target-types/{id}':
    get:
      tags:
        - target-types
      operationId: target-types_read
      parameters:
        - name: id
          in: path
          description: A UUID string identifying this target type.
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TargetType'
  /divy-backend/targets:
    get:
      tags:
        - targets
      description: Target CRUD
      operationId: targets_list
      parameters:
        - name: search
          in: query
          description: A search term.
          schema:
            type: string
        - name: ordering
          in: query
          description: 'Options: name,target_type,id,tags'
          schema:
            type: string
        - name: target_type
          in: query
          schema:
            type: string
        - name: tag_id
          in: query
          schema:
            type: string
        - name: page
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - name: page_size
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                required:
                  - count
                  - results
                type: object
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                    format: uri
                    nullable: true
                  previous:
                    type: string
                    format: uri
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/TargetList'
    post:
      tags:
        - targets
      description: Target CRUD
      operationId: targets_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Target'
        required: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Target'
      x-codegen-request-body-name: data
  /divy-backend/targets/add-to-group:
    post:
      tags:
        - targets
      description: Add object to group
      operationId: add-to-group5
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RelatedModelAssetGroup'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
      x-codegen-request-body-name: data
  /divy-backend/targets/add-to-target:
    post:
      tags:
        - targets
      description: Add object to target
      operationId: add-to-target3
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RelatedModelAssetTarget'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Target'
      x-codegen-request-body-name: data
  /divy-backend/targets/data-types:
    get:
      tags:
        - targets
      description: Target CRUD
      operationId: targets_get_data_type
      parameters:
        - name: search
          in: query
          description: A search term.
          schema:
            type: string
        - name: ordering
          in: query
          description: 'Options: name,target_type,id,tags'
          schema:
            type: string
        - name: target_type
          in: query
          schema:
            type: string
        - name: tag_id
          in: query
          schema:
            type: string
        - name: page
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - name: page_size
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TargetType'
  /divy-backend/targets/schedule-data:
    get:
      tags:
        - targets
      description: Target CRUD
      operationId: targets_get_schedule
      parameters:
        - name: search
          in: query
          description: A search term.
          schema:
            type: string
        - name: ordering
          in: query
          description: 'Options: name,target_type,id,tags'
          schema:
            type: string
        - name: target_type
          in: query
          schema:
            type: string
        - name: tag_id
          in: query
          schema:
            type: string
        - name: page
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - name: page_size
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                required:
                  - count
                  - results
                type: object
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                    format: uri
                    nullable: true
                  previous:
                    type: string
                    format: uri
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Target'
  '/divy-backend/targets/{id}':
    get:
      tags:
        - targets
      description: Target CRUD
      operationId: targets_read
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Target'
    put:
      tags:
        - targets
      description: Target CRUD
      operationId: targets_update
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Target'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Target'
      x-codegen-request-body-name: data
    delete:
      tags:
        - targets
      description: Target CRUD
      operationId: targets_delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: ''
          content: {}
    patch:
      tags:
        - targets
      description: Target CRUD
      operationId: targets_partial_update
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Target'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Target'
      x-codegen-request-body-name: data
  '/divy-backend/targets/{id}/run-scan':
    post:
      tags:
        - targets
      description: Target CRUD
      operationId: targets_run_scan
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Target'
        required: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Target'
      x-codegen-request-body-name: data
  /divy-backend/tasks:
    get:
      tags:
        - tasks
      description: 'list, update Periodic schedule'
      operationId: tasks_list
      parameters:
        - name: search
          in: query
          description: A search term.
          schema:
            type: string
        - name: enabled
          in: query
          schema:
            type: string
        - name: page
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                required:
                  - count
                  - results
                type: object
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                    format: uri
                    nullable: true
                  previous:
                    type: string
                    format: uri
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/PeriodicTask'
  '/divy-backend/tasks/{id}':
    put:
      tags:
        - tasks
      description: 'list, update Periodic schedule'
      operationId: tasks_update
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PeriodicTask'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PeriodicTask'
      x-codegen-request-body-name: data
    patch:
      tags:
        - tasks
      description: 'list, update Periodic schedule'
      operationId: tasks_partial_update
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PeriodicTask'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PeriodicTask'
      x-codegen-request-body-name: data
  '/divy-backend/tasks/{id}/execute':
    post:
      tags:
        - tasks
      description: Execute selected task
      operationId: tasks_get_projects
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PeriodicTask'
        required: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PeriodicTask'
      x-codegen-request-body-name: data
  /divy-backend/thank-you/:
    get:
      tags:
        - thank-you
      operationId: thank-you_list
      responses:
        '200':
          description: ''
          content: {}
  /divy-backend/ticket-comments:
    get:
      tags:
        - ticket-comments
      description: Returns the list of comments by ticket_id
      operationId: ticket-comments_list
      parameters:
        - name: synced
          in: query
          schema:
            type: string
        - name: user_id
          in: query
          schema:
            type: string
        - name: ticket_id
          in: query
          schema:
            type: string
        - name: created
          in: query
          schema:
            type: string
        - name: ordering
          in: query
          schema:
            type: string
        - name: page
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                required:
                  - count
                  - results
                type: object
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                    format: uri
                    nullable: true
                  previous:
                    type: string
                    format: uri
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Comment'
    post:
      tags:
        - ticket-comments
      description: Creates a comment for a specific ticket
      operationId: ticket-comments_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Comment'
        required: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
      x-codegen-request-body-name: data
  '/divy-backend/ticket-comments/{id}':
    get:
      tags:
        - ticket-comments
      operationId: ticket-comments_read
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
    put:
      tags:
        - ticket-comments
      description: Updates a comment by id
      operationId: ticket-comments_update
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Comment'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
      x-codegen-request-body-name: data
    patch:
      tags:
        - ticket-comments
      operationId: ticket-comments_partial_update
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Comment'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
      x-codegen-request-body-name: data
  /divy-backend/tickets:
    get:
      tags:
        - tickets
      description: Returns a list of tickets
      operationId: tickets_list
      parameters:
        - name: ordering
          in: query
          description: >-
            Options:
            project,ticket_profile_type,title,status,assets,comments,created_at,closed_at,ticket_configuration,project_name,desk_id
          schema:
            type: string
        - name: label_id
          in: query
          schema:
            type: string
        - name: ticket_profile_type
          in: query
          schema:
            type: string
        - name: priority
          in: query
          schema:
            type: string
        - name: created
          in: query
          schema:
            type: string
        - name: by_ticket_related_objects_type
          in: query
          schema:
            type: string
        - name: asset_id
          in: query
          schema:
            type: string
        - name: status
          in: query
          schema:
            type: string
        - name: ticket_configuration_id
          in: query
          schema:
            type: string
        - name: search
          in: query
          description: A search term.
          schema:
            type: string
        - name: page
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - name: page_size
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                required:
                  - count
                  - results
                type: object
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                    format: uri
                    nullable: true
                  previous:
                    type: string
                    format: uri
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Ticket'
    post:
      tags:
        - tickets
      description: Creates a ticket in the database and on the remote board
      operationId: tickets_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ticket'
        required: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ticket'
      x-codegen-request-body-name: data
  /divy-backend/tickets-config:
    get:
      tags:
        - tickets-config
      operationId: tickets-config_list
      parameters:
        - name: search
          in: query
          description: A search term.
          schema:
            type: string
        - name: ticket_profile_id
          in: query
          schema:
            type: string
        - name: project
          in: query
          schema:
            type: string
        - name: issue_type
          in: query
          schema:
            type: string
        - name: data_type
          in: query
          schema:
            type: string
        - name: page
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                required:
                  - count
                  - results
                type: object
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                    format: uri
                    nullable: true
                  previous:
                    type: string
                    format: uri
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/TicketConfiguration'
    post:
      tags:
        - tickets-config
      operationId: tickets-config_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TicketConfiguration'
        required: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TicketConfiguration'
      x-codegen-request-body-name: data
  /divy-backend/tickets-config-mini:
    get:
      tags:
        - tickets-config-mini
      operationId: tickets-config-mini_list
      parameters:
        - name: search
          in: query
          description: A search term.
          schema:
            type: string
        - name: ticket_profile_id
          in: query
          schema:
            type: string
        - name: project
          in: query
          schema:
            type: string
        - name: issue_type
          in: query
          schema:
            type: string
        - name: data_type
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TicketConfigurationMini'
    post:
      tags:
        - tickets-config-mini
      operationId: tickets-config-mini_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TicketConfigurationMini'
        required: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TicketConfigurationMini'
      x-codegen-request-body-name: data
  /divy-backend/tickets-config-mini/profile-types:
    get:
      tags:
        - tickets-config-mini
      operationId: tickets-config-mini_get_data_type
      parameters:
        - name: search
          in: query
          description: A search term.
          schema:
            type: string
        - name: ticket_profile_id
          in: query
          schema:
            type: string
        - name: project
          in: query
          schema:
            type: string
        - name: issue_type
          in: query
          schema:
            type: string
        - name: data_type
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TicketConfigurationMini'
  /divy-backend/tickets-config-mini/ticket-profiles:
    get:
      tags:
        - tickets-config-mini
      operationId: tickets-config-mini_ticket_profiles
      parameters:
        - name: search
          in: query
          description: A search term.
          schema:
            type: string
        - name: ticket_profile_id
          in: query
          schema:
            type: string
        - name: project
          in: query
          schema:
            type: string
        - name: issue_type
          in: query
          schema:
            type: string
        - name: data_type
          in: query
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TicketConfigurationMini'
  '/divy-backend/tickets-config-mini/{id}':
    get:
      tags:
        - tickets-config-mini
      operationId: tickets-config-mini_read
      parameters:
        - name: id
          in: path
          description: A UUID string identifying this ticket configuration.
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TicketConfigurationMini'
    put:
      tags:
        - tickets-config-mini
      operationId: tickets-config-mini_update
      parameters:
        - name: id
          in: path
          description: A UUID string identifying this ticket configuration.
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TicketConfigurationMini'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TicketConfigurationMini'
      x-codegen-request-body-name: data
    delete:
      tags:
        - tickets-config-mini
      operationId: tickets-config-mini_delete
      parameters:
        - name: id
          in: path
          description: A UUID string identifying this ticket configuration.
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: ''
          content: {}
    patch:
      tags:
        - tickets-config-mini
      operationId: tickets-config-mini_partial_update
      parameters:
        - name: id
          in: path
          description: A UUID string identifying this ticket configuration.
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TicketConfigurationMini'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TicketConfigurationMini'
      x-codegen-request-body-name: data
  /divy-backend/tickets-config/profile-types:
    get:
      tags:
        - tickets-config
      operationId: tickets-config_get_data_type
      parameters:
        - name: search
          in: query
          description: A search term.
          schema:
            type: string
        - name: ticket_profile_id
          in: query
          schema:
            type: string
        - name: project
          in: query
          schema:
            type: string
        - name: issue_type
          in: query
          schema:
            type: string
        - name: data_type
          in: query
          schema:
            type: string
        - name: page
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                required:
                  - count
                  - results
                type: object
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                    format: uri
                    nullable: true
                  previous:
                    type: string
                    format: uri
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/TicketConfiguration'
  /divy-backend/tickets-config/ticket-profiles:
    get:
      tags:
        - tickets-config
      operationId: tickets-config_ticket_profiles
      parameters:
        - name: search
          in: query
          description: A search term.
          schema:
            type: string
        - name: ticket_profile_id
          in: query
          schema:
            type: string
        - name: project
          in: query
          schema:
            type: string
        - name: issue_type
          in: query
          schema:
            type: string
        - name: data_type
          in: query
          schema:
            type: string
        - name: page
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                required:
                  - count
                  - results
                type: object
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                    format: uri
                    nullable: true
                  previous:
                    type: string
                    format: uri
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/TicketConfiguration'
  '/divy-backend/tickets-config/{id}':
    get:
      tags:
        - tickets-config
      operationId: tickets-config_read
      parameters:
        - name: id
          in: path
          description: A UUID string identifying this ticket configuration.
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TicketConfiguration'
    put:
      tags:
        - tickets-config
      operationId: tickets-config_update
      parameters:
        - name: id
          in: path
          description: A UUID string identifying this ticket configuration.
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TicketConfiguration'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TicketConfiguration'
      x-codegen-request-body-name: data
    delete:
      tags:
        - tickets-config
      operationId: tickets-config_delete
      parameters:
        - name: id
          in: path
          description: A UUID string identifying this ticket configuration.
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: ''
          content: {}
    patch:
      tags:
        - tickets-config
      operationId: tickets-config_partial_update
      parameters:
        - name: id
          in: path
          description: A UUID string identifying this ticket configuration.
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TicketConfiguration'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TicketConfiguration'
      x-codegen-request-body-name: data
  /divy-backend/tickets-history:
    get:
      tags:
        - tickets-history
      description: Returns the list of comments by ticket_id
      operationId: tickets-history_list
      parameters:
        - name: action
          in: query
          schema:
            type: string
        - name: user_id
          in: query
          schema:
            type: string
        - name: third_party_user
          in: query
          schema:
            type: string
        - name: date
          in: query
          schema:
            type: string
        - name: ticket_id
          in: query
          schema:
            type: string
        - name: ordering
          in: query
          schema:
            type: string
        - name: page
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                required:
                  - count
                  - results
                type: object
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                    format: uri
                    nullable: true
                  previous:
                    type: string
                    format: uri
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/TicketHistory'
  '/divy-backend/tickets-history/{id}':
    get:
      tags:
        - tickets-history
      description: Returns a certain comment by id
      operationId: tickets-history_read
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TicketHistory'
  /divy-backend/tickets-mini:
    get:
      tags:
        - tickets-mini
      operationId: tickets-mini_list
      parameters:
        - name: ordering
          in: query
          description: >-
            Options:
            project,ticket_profile_type,title,status,assets,comments,created_at,closed_at,ticket_configuration,project_name,desk_id
          schema:
            type: string
        - name: label_id
          in: query
          schema:
            type: string
        - name: ticket_profile_type
          in: query
          schema:
            type: string
        - name: priority
          in: query
          schema:
            type: string
        - name: created
          in: query
          schema:
            type: string
        - name: by_ticket_related_objects_type
          in: query
          schema:
            type: string
        - name: asset_id
          in: query
          schema:
            type: string
        - name: status
          in: query
          schema:
            type: string
        - name: ticket_configuration_id
          in: query
          schema:
            type: string
        - name: search
          in: query
          description: A search term.
          schema:
            type: string
        - name: page
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - name: page_size
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                required:
                  - count
                  - results
                type: object
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                    format: uri
                    nullable: true
                  previous:
                    type: string
                    format: uri
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/TicketMini'
  '/divy-backend/tickets-mini/{id}':
    get:
      tags:
        - tickets-mini
      operationId: tickets-mini_read
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TicketMini'
  /divy-backend/tickets-template:
    get:
      tags:
        - tickets-template
      operationId: tickets-template_list
      parameters:
        - name: source
          in: query
          schema:
            type: string
        - name: attachment
          in: query
          schema:
            type: string
        - name: ordering
          in: query
          description: 'Options: name or data_type'
          schema:
            type: string
        - name: page
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - name: page_size
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                required:
                  - count
                  - results
                type: object
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                    format: uri
                    nullable: true
                  previous:
                    type: string
                    format: uri
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/TicketTemplate'
    post:
      tags:
        - tickets-template
      operationId: tickets-template_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TicketTemplate'
        required: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TicketTemplate'
      x-codegen-request-body-name: data
  /divy-backend/tickets-template-mini:
    get:
      tags:
        - tickets-template-mini
      description: Ticket Template name for dropdown
      operationId: tickets-template-mini_list
      parameters:
        - name: page
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                required:
                  - count
                  - results
                type: object
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                    format: uri
                    nullable: true
                  previous:
                    type: string
                    format: uri
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/TicketTemplateMini'
  '/divy-backend/tickets-template-mini/{id}':
    get:
      tags:
        - tickets-template-mini
      description: Ticket Template name for dropdown
      operationId: tickets-template-mini_read
      parameters:
        - name: id
          in: path
          description: A UUID string identifying this ticket template.
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TicketTemplateMini'
  /divy-backend/tickets-template/available-variables:
    get:
      tags:
        - tickets-template
      description: Returns a list of statuses for the current Jira account
      operationId: tickets-template_get_available_variables
      parameters:
        - name: source
          in: query
          schema:
            type: string
        - name: attachment
          in: query
          schema:
            type: string
        - name: ordering
          in: query
          description: 'Options: name or data_type'
          schema:
            type: string
        - name: page
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - name: page_size
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                required:
                  - count
                  - results
                type: object
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                    format: uri
                    nullable: true
                  previous:
                    type: string
                    format: uri
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/TicketTemplate'
  /divy-backend/tickets-template/data-types:
    get:
      tags:
        - tickets-template
      operationId: tickets-template_get_data_type
      parameters:
        - name: source
          in: query
          schema:
            type: string
        - name: attachment
          in: query
          schema:
            type: string
        - name: ordering
          in: query
          description: 'Options: name or data_type'
          schema:
            type: string
        - name: page
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - name: page_size
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                required:
                  - count
                  - results
                type: object
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                    format: uri
                    nullable: true
                  previous:
                    type: string
                    format: uri
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/TicketTemplate'
  /divy-backend/tickets-template/duplicate:
    post:
      tags:
        - tickets-template
      operationId: ticket-template-duplicate
      requestBody:
        content:
          application/json:
            schema:
              required:
                - id
              type: object
              properties:
                id:
                  type: string
                  format: uuid
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TicketTemplate'
        '404':
          description: Ticket template doesn't exists
          content: {}
      x-codegen-request-body-name: data
  '/divy-backend/tickets-template/{id}':
    get:
      tags:
        - tickets-template
      operationId: tickets-template_read
      parameters:
        - name: id
          in: path
          description: A UUID string identifying this ticket template.
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TicketTemplate'
    put:
      tags:
        - tickets-template
      operationId: tickets-template_update
      parameters:
        - name: id
          in: path
          description: A UUID string identifying this ticket template.
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TicketTemplate'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TicketTemplate'
      x-codegen-request-body-name: data
    delete:
      tags:
        - tickets-template
      operationId: tickets-template_delete
      parameters:
        - name: id
          in: path
          description: A UUID string identifying this ticket template.
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: ''
          content: {}
    patch:
      tags:
        - tickets-template
      operationId: tickets-template_partial_update
      parameters:
        - name: id
          in: path
          description: A UUID string identifying this ticket template.
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TicketTemplate'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TicketTemplate'
      x-codegen-request-body-name: data
  /divy-backend/tickets/preview:
    post:
      tags:
        - tickets
      operationId: tickets_ticket_preview
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ticket'
        required: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ticket'
      x-codegen-request-body-name: data
  /divy-backend/tickets/ticket-related-types-list:
    get:
      tags:
        - tickets
      operationId: tickets_get_ticket_related_types_list
      parameters:
        - name: ordering
          in: query
          description: >-
            Options:
            project,ticket_profile_type,title,status,assets,comments,created_at,closed_at,ticket_configuration,project_name,desk_id
          schema:
            type: string
        - name: label_id
          in: query
          schema:
            type: string
        - name: ticket_profile_type
          in: query
          schema:
            type: string
        - name: priority
          in: query
          schema:
            type: string
        - name: created
          in: query
          schema:
            type: string
        - name: by_ticket_related_objects_type
          in: query
          schema:
            type: string
        - name: asset_id
          in: query
          schema:
            type: string
        - name: status
          in: query
          schema:
            type: string
        - name: ticket_configuration_id
          in: query
          schema:
            type: string
        - name: search
          in: query
          description: A search term.
          schema:
            type: string
        - name: page
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - name: page_size
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                required:
                  - count
                  - results
                type: object
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                    format: uri
                    nullable: true
                  previous:
                    type: string
                    format: uri
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Ticket'
  /divy-backend/tickets/ticket-statuses:
    get:
      tags:
        - tickets
      operationId: tickets_get_ticket_status
      parameters:
        - name: ordering
          in: query
          description: >-
            Options:
            project,ticket_profile_type,title,status,assets,comments,created_at,closed_at,ticket_configuration,project_name,desk_id
          schema:
            type: string
        - name: label_id
          in: query
          schema:
            type: string
        - name: ticket_profile_type
          in: query
          schema:
            type: string
        - name: priority
          in: query
          schema:
            type: string
        - name: created
          in: query
          schema:
            type: string
        - name: by_ticket_related_objects_type
          in: query
          schema:
            type: string
        - name: asset_id
          in: query
          schema:
            type: string
        - name: status
          in: query
          schema:
            type: string
        - name: ticket_configuration_id
          in: query
          schema:
            type: string
        - name: search
          in: query
          description: A search term.
          schema:
            type: string
        - name: page
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - name: page_size
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                required:
                  - count
                  - results
                type: object
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                    format: uri
                    nullable: true
                  previous:
                    type: string
                    format: uri
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Ticket'
  '/divy-backend/tickets/{id}':
    get:
      tags:
        - tickets
      description: Returns a certain ticket by id
      operationId: tickets_read
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ticket'
    put:
      tags:
        - tickets
      description: Updates a ticket in the database and on the remote board
      operationId: tickets_update
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TicketUpdate'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TicketUpdate'
      x-codegen-request-body-name: data
    delete:
      tags:
        - tickets
      description: Closes or mark ticket as "Done"
      operationId: tickets_delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: ''
          content: {}
    patch:
      tags:
        - tickets
      operationId: tickets_partial_update
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ticket'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ticket'
      x-codegen-request-body-name: data
  '/divy-backend/tickets/{id}/close':
    delete:
      tags:
        - tickets
      operationId: tickets_cancel_ticket
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: ''
          content: {}
  /divy-backend/token:
    get:
      tags:
        - token
      operationId: token_list
      parameters:
        - name: search
          in: query
          description: A search term.
          schema:
            type: string
        - name: tenant
          in: query
          schema:
            type: string
        - name: target
          in: query
          schema:
            type: string
        - name: tag
          in: query
          schema:
            type: string
        - name: page
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                required:
                  - count
                  - results
                type: object
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                    format: uri
                    nullable: true
                  previous:
                    type: string
                    format: uri
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Token'
    post:
      tags:
        - token
      operationId: token_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Token'
        required: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
      x-codegen-request-body-name: data
  '/divy-backend/token/{id}':
    get:
      tags:
        - token
      operationId: token_read
      parameters:
        - name: id
          in: path
          description: A UUID string identifying this token model.
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
    delete:
      tags:
        - token
      operationId: token_delete
      parameters:
        - name: id
          in: path
          description: A UUID string identifying this token model.
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: ''
          content: {}
  /divy-backend/user-profiles:
    get:
      tags:
        - user-profiles
      operationId: user-profiles_list
      parameters:
        - name: ordering
          in: query
          description: >-
            Options:
            first_name,last_name,username,email,role,permissions_count,recent_login
          schema:
            type: string
        - name: status
          in: query
          description: 'Available values: 0 = "Pending", 1 = "Activated", 2 = "Deactivated"'
          schema:
            type: string
            enum:
              - '0'
              - '1'
              - '2'
        - name: search
          in: query
          description: A search term.
          schema:
            type: string
        - name: page
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - name: page_size
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfileList'
    post:
      tags:
        - user-profiles
      operationId: user-profiles_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ManageRoleUserProfile'
        required: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManageRoleUserProfile'
      x-codegen-request-body-name: data
  /divy-backend/user-profiles-mini:
    get:
      tags:
        - user-profiles-mini
      operationId: user-profiles-mini_list
      parameters:
        - name: status
          in: query
          description: 'Available values: 0 = "Pending", 1 = "Activated", 2 = "Deactivated"'
          schema:
            type: string
            enum:
              - '0'
              - '1'
              - '2'
        - name: search
          in: query
          description: A search term.
          schema:
            type: string
        - name: ordering
          in: query
          description: Which field to use when ordering the results.
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfileListMini'
  '/divy-backend/user-profiles/{id}':
    get:
      tags:
        - user-profiles
      operationId: user-profiles_read
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManageRoleUserProfile'
    put:
      tags:
        - user-profiles
      operationId: user-profiles_update
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ManageRoleUserProfile'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManageRoleUserProfile'
      x-codegen-request-body-name: data
    delete:
      tags:
        - user-profiles
      operationId: user-profiles_delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: ''
          content: {}
    patch:
      tags:
        - user-profiles
      operationId: user-profiles_partial_update
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ManageRoleUserProfile'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManageRoleUserProfile'
      x-codegen-request-body-name: data
  '/divy-backend/user-profiles/{id}/activate':
    post:
      tags:
        - user-profiles
      operationId: user-profiles_activate
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Changed status to ACTIVATED
          content: {}
  '/divy-backend/user-profiles/{id}/deactivate':
    post:
      tags:
        - user-profiles
      operationId: user-profiles_deactivate
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Changed status to DEACTIVATED
          content: {}
  '/divy-backend/user-profiles/{id}/resend-invitation':
    post:
      tags:
        - user-profiles
      operationId: user-profiles_resend_invitation
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The email have been sent
          content: {}
  /divy-backend/users:
    get:
      tags:
        - users
      description: Returns the list of users
      operationId: users_list
      parameters:
        - name: page
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                required:
                  - count
                  - results
                type: object
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                    format: uri
                    nullable: true
                  previous:
                    type: string
                    format: uri
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/User'
    post:
      tags:
        - users
      description: Creates and invites users to the tenant. Only tenant admin could do this
      operationId: users_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserTenant'
        required: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateUserTenant'
      x-codegen-request-body-name: data
  /divy-backend/users/change-password:
    patch:
      tags:
        - users
      description: Represents user change password view
      operationId: user-change-password
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangePassword'
        required: true
      responses:
        '200':
          description: Password was changed
          content: {}
      x-codegen-request-body-name: data
  /divy-backend/users/current-user-data:
    get:
      tags:
        - users
      description: Represents current user information by token if password not expired
      operationId: users_current-user-data_read
      parameters:
        - name: page
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                required:
                  - count
                  - results
                type: object
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                    format: uri
                    nullable: true
                  previous:
                    type: string
                    format: uri
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/User'
  '/divy-backend/users/{id}':
    get:
      tags:
        - users
      description: Returns the user by id
      operationId: users_read
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    put:
      tags:
        - users
      description: Updates the user info by id
      operationId: users_update
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
      x-codegen-request-body-name: data
    patch:
      tags:
        - users
      operationId: users_partial_update
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
      x-codegen-request-body-name: data
  /divy-backend/variable:
    get:
      tags:
        - variable
      operationId: variable_list
      parameters:
        - name: search
          in: query
          description: A search term.
          schema:
            type: string
        - name: variable_set
          in: query
          schema:
            type: string
        - name: encrypted
          in: query
          schema:
            type: string
        - name: has_value
          in: query
          schema:
            type: string
        - name: page
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                required:
                  - count
                  - results
                type: object
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                    format: uri
                    nullable: true
                  previous:
                    type: string
                    format: uri
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Variable'
    post:
      tags:
        - variable
      operationId: variable_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Variable'
        required: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Variable'
      x-codegen-request-body-name: data
  /divy-backend/variable-mini:
    get:
      tags:
        - variable-mini
      operationId: variable-mini_list
      parameters:
        - name: search
          in: query
          description: A search term.
          schema:
            type: string
        - name: variable_set
          in: query
          schema:
            type: string
        - name: encrypted
          in: query
          schema:
            type: string
        - name: has_value
          in: query
          schema:
            type: string
        - name: page
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                required:
                  - count
                  - results
                type: object
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                    format: uri
                    nullable: true
                  previous:
                    type: string
                    format: uri
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/VariableMini'
    post:
      tags:
        - variable-mini
      operationId: variable-mini_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VariableMini'
        required: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VariableMini'
      x-codegen-request-body-name: data
  '/divy-backend/variable-mini/{id}':
    get:
      tags:
        - variable-mini
      operationId: variable-mini_read
      parameters:
        - name: id
          in: path
          description: A UUID string identifying this variable.
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VariableMini'
    put:
      tags:
        - variable-mini
      operationId: variable-mini_update
      parameters:
        - name: id
          in: path
          description: A UUID string identifying this variable.
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VariableMini'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VariableMini'
      x-codegen-request-body-name: data
    delete:
      tags:
        - variable-mini
      operationId: variable-mini_delete
      parameters:
        - name: id
          in: path
          description: A UUID string identifying this variable.
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: ''
          content: {}
    patch:
      tags:
        - variable-mini
      operationId: variable-mini_partial_update
      parameters:
        - name: id
          in: path
          description: A UUID string identifying this variable.
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VariableMini'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VariableMini'
      x-codegen-request-body-name: data
  /divy-backend/variable-set:
    get:
      tags:
        - variable-set
      operationId: variable-set_list
      parameters:
        - name: search
          in: query
          description: A search term.
          schema:
            type: string
        - name: page
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                required:
                  - count
                  - results
                type: object
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                    format: uri
                    nullable: true
                  previous:
                    type: string
                    format: uri
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/VariableSet'
    post:
      tags:
        - variable-set
      operationId: variable-set_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VariableSet'
        required: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VariableSet'
      x-codegen-request-body-name: data
  '/divy-backend/variable-set/{id}':
    get:
      tags:
        - variable-set
      operationId: variable-set_read
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VariableSet'
    put:
      tags:
        - variable-set
      operationId: variable-set_update
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VariableSet'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VariableSet'
      x-codegen-request-body-name: data
    delete:
      tags:
        - variable-set
      operationId: variable-set_delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: ''
          content: {}
    patch:
      tags:
        - variable-set
      operationId: variable-set_partial_update
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VariableSet'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VariableSet'
      x-codegen-request-body-name: data
  '/divy-backend/variable/{id}':
    get:
      tags:
        - variable
      operationId: variable_read
      parameters:
        - name: id
          in: path
          description: A UUID string identifying this variable.
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Variable'
    put:
      tags:
        - variable
      operationId: variable_update
      parameters:
        - name: id
          in: path
          description: A UUID string identifying this variable.
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Variable'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Variable'
      x-codegen-request-body-name: data
    delete:
      tags:
        - variable
      operationId: variable_delete
      parameters:
        - name: id
          in: path
          description: A UUID string identifying this variable.
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: ''
          content: {}
    patch:
      tags:
        - variable
      operationId: variable_partial_update
      parameters:
        - name: id
          in: path
          description: A UUID string identifying this variable.
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Variable'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Variable'
      x-codegen-request-body-name: data
  '/divy-backend/verify-email/{uid}/check-email-verification-status':
    post:
      tags:
        - verify-email
      description: Check email verification status.
      operationId: verify-email_check_email_verification_status
      parameters:
        - name: uid
          in: path
          description: Base64 encoded email
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailVerification'
        required: true
      responses:
        '200':
          description: User is verified.
          content: {}
        '400':
          description: Something went wring.
          content: {}
      x-codegen-request-body-name: data
  '/divy-backend/verify-email/{uid}/resend-email-verification':
    post:
      tags:
        - verify-email
      description: resend email verification.
      operationId: verify-email_resend_email_verification
      parameters:
        - name: uid
          in: path
          description: Base64 encoded email
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailVerification'
        required: true
      responses:
        '200':
          description: Verification email sent.
          content: {}
        '400':
          description: Something went wrong.
          content: {}
      x-codegen-request-body-name: data
  '/divy-backend/verify-email/{uid}/{token}/check-email-verification':
    get:
      tags:
        - verify-email
      description: Check email verification.
      operationId: verify-email_check_email_verification
      parameters:
        - name: uid
          in: path
          description: Base64 encoded email
          required: true
          schema:
            type: string
        - name: token
          in: path
          description: token
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Verified
          content: {}
        '400':
          description: Something went wrong.
          content: {}
  /divy-backend/visible-permissions:
    get:
      tags:
        - visible-permissions
      operationId: visible-permissions_list
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VisiblePermissions'
    post:
      tags:
        - visible-permissions
      operationId: visible-permissions_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VisiblePermissions'
        required: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VisiblePermissions'
      x-codegen-request-body-name: data
  '/divy-backend/visible-permissions/{id}':
    get:
      tags:
        - visible-permissions
      operationId: visible-permissions_read
      parameters:
        - name: id
          in: path
          description: A UUID string identifying this visible permissions.
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VisiblePermissions'
    put:
      tags:
        - visible-permissions
      operationId: visible-permissions_update
      parameters:
        - name: id
          in: path
          description: A UUID string identifying this visible permissions.
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VisiblePermissions'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VisiblePermissions'
      x-codegen-request-body-name: data
    delete:
      tags:
        - visible-permissions
      operationId: visible-permissions_delete
      parameters:
        - name: id
          in: path
          description: A UUID string identifying this visible permissions.
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: ''
          content: {}
    patch:
      tags:
        - visible-permissions
      operationId: visible-permissions_partial_update
      parameters:
        - name: id
          in: path
          description: A UUID string identifying this visible permissions.
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VisiblePermissions'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VisiblePermissions'
      x-codegen-request-body-name: data
  /divy-backend/vulnerabilities:
    get:
      tags:
        - vulnerabilities
      description: Returns a list of groups
      operationId: vulnerabilities_list
      parameters:
        - name: search
          in: query
          description: A search term.
          schema:
            type: string
        - name: data_type
          in: query
          schema:
            type: string
        - name: risk_factor
          in: query
          schema:
            type: string
        - name: tag_id
          in: query
          schema:
            type: string
        - name: page
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                required:
                  - count
                  - results
                type: object
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                    format: uri
                    nullable: true
                  previous:
                    type: string
                    format: uri
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/VulnerabilityRetrieve'
  /divy-backend/vulnerabilities/risk-factors:
    get:
      tags:
        - vulnerabilities
      operationId: vulnerabilities_risk_factors
      parameters:
        - name: search
          in: query
          description: A search term.
          schema:
            type: string
        - name: data_type
          in: query
          schema:
            type: string
        - name: risk_factor
          in: query
          schema:
            type: string
        - name: tag_id
          in: query
          schema:
            type: string
        - name: page
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                required:
                  - count
                  - results
                type: object
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                    format: uri
                    nullable: true
                  previous:
                    type: string
                    format: uri
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/VulnerabilityRetrieve'
  '/divy-backend/vulnerabilities/{id}':
    get:
      tags:
        - vulnerabilities
      description: Returns a certain group by id
      operationId: vulnerabilities_read
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VulnerabilityRetrieve'
    put:
      tags:
        - vulnerabilities
      operationId: vulnerabilities_update
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VulnerabilityUpdate'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VulnerabilityUpdate'
      x-codegen-request-body-name: data
    patch:
      tags:
        - vulnerabilities
      operationId: vulnerabilities_partial_update
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VulnerabilityUpdate'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VulnerabilityUpdate'
      x-codegen-request-body-name: data
  /divy-backend/vulnerability-configs:
    get:
      tags:
        - vulnerability-configs
      description: vulnerability config
      operationId: vulnerability-configs_list
      parameters:
        - name: page
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                required:
                  - count
                  - results
                type: object
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                    format: uri
                    nullable: true
                  previous:
                    type: string
                    format: uri
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/VulnerabilityConfig'
    post:
      tags:
        - vulnerability-configs
      description: vulnerability config
      operationId: vulnerability-configs_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VulnerabilityConfig'
        required: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VulnerabilityConfig'
      x-codegen-request-body-name: data
  /divy-backend/vulnerability-configs/filters-data:
    get:
      tags:
        - vulnerability-configs
      description: vulnerability config
      operationId: vulnerability-configs_filters-data_read
      parameters:
        - name: page
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                required:
                  - count
                  - results
                type: object
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                    format: uri
                    nullable: true
                  previous:
                    type: string
                    format: uri
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/VulnerabilityConfig'
  '/divy-backend/vulnerability-configs/{id}':
    get:
      tags:
        - vulnerability-configs
      description: vulnerability config
      operationId: vulnerability-configs_read
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VulnerabilityConfig'
    put:
      tags:
        - vulnerability-configs
      description: vulnerability config
      operationId: vulnerability-configs_update
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VulnerabilityConfig'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VulnerabilityConfig'
      x-codegen-request-body-name: data
    delete:
      tags:
        - vulnerability-configs
      description: vulnerability config
      operationId: vulnerability-configs_delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: ''
          content: {}
    patch:
      tags:
        - vulnerability-configs
      description: vulnerability config
      operationId: vulnerability-configs_partial_update
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VulnerabilityConfig'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VulnerabilityConfig'
      x-codegen-request-body-name: data
components:
  schemas:
    model.ErrorDTO:
      properties:
        error_code:
          type: string
        error_message:
          type: string
      type: object
    model.ReportFilters:
      properties:
        all_clusters:
          type: boolean
        cluster_security_trend:
          type: boolean
        clusters:
          items:
            type: integer
          type: array
        compliance_trend:
          type: boolean
        exclude_namespaces:
          items:
            type: integer
          type: array
        id:
          type: integer
        type:
          type: string
        workload_with_policy_violation:
          type: boolean
        workload_without_policies:
          type: boolean
      type: object
    model.RequestCreateReports:
      properties:
        description:
          type: string
        emails:
          items:
            type: string
          type: array
        filters:
          items:
            $ref: '#/components/schemas/model.ReportFilters'
          type: array
        frequency:
          type: string
        id:
          type: integer
        name:
          type: string
      required:
        - description
        - emails
        - filters
        - frequency
        - name
      type: object
    model.RequestDeleteReports:
      properties:
        id:
          items:
            type: integer
          type: array
      required:
        - id
      type: object
    model.RequestUpdateReports:
      properties:
        description:
          type: string
        emails:
          items:
            type: string
          type: array
        filters:
          items:
            $ref: '#/components/schemas/model.ReportFilters'
          type: array
        frequency:
          type: string
        id:
          type: integer
        name:
          type: string
      type: object
    model.ResponseCreateReports:
      properties:
        id:
          type: integer
      type: object
    model.ResponseListAllReports:
      properties:
        emails:
          items:
            type: string
          type: array
        frequency:
          type: string
        id:
          type: integer
        last_report_id:
          type: string
        last_report_time:
          type: string
        name:
          type: string
      type: object
    model.ResponseListReports:
      properties:
        description:
          type: string
        emails:
          items:
            type: string
          type: array
        frequency:
          type: string
        id:
          type: integer
        last_report_time:
          type: string
        name:
          type: string
        report_filters:
          items:
            $ref: '#/components/schemas/model.ReportFilters'
          type: array
      type: object
    model.ResponseReportHistory:
      properties:
        completed_at:
          type: string
        emails:
          items:
            type: string
          type: array
        id:
          type: integer
        name:
          type: string
        report_id:
          type: string
        status:
          type: string
      type: object
    model.ResponseUpdateReports:
      properties:
        message:
          type: string
      type: object
    dto.Cluster:
      properties:
        alertsCount:
          type: integer
        clusterName:
          type: string
        id:
          type: integer
        labelCount:
          type: integer
        last_updated_time:
          type: string
        location:
          type: string
        namespaceCount:
          type: integer
        nodeCount:
          type: integer
        podCount:
          type: integer
        policyCount:
          type: integer
        workspaceID:
          type: integer
      type: object
    dto.ClusterFilter:
      properties:
        clusterName:
          type: string
        id:
          type: integer
        status:
          type: string
        workspaceID:
          type: integer
      type: object
    dto.ClusterHash:
      properties:
        cluster_id:
          type: integer
        secret:
          type: string
        workspace_id:
          type: integer
      type: object
    dto.ClusterIDsRequestDto:
      properties:
        cluster_names:
          items:
            type: string
          type: array
      type: object
    dto.ClusterIDsResponseDto:
      properties:
        clusterID:
          type: integer
        clusterName:
          type: string
        location:
          type: string
        workspaceID:
          type: integer
      type: object
    dto.ClusterMeta:
      properties:
        clusterName:
          type: string
        id:
          type: integer
        last_updated_time:
          type: string
        location:
          type: string
        status:
          type: string
        workspaceID:
          type: integer
      type: object
    dto.ClustersInWorkspaceRequest:
      properties:
        from_time:
          items:
            type: string
          type: array
        page_next:
          minimum: 1
          type: integer
        page_previous:
          minimum: 0
          type: integer
        to_time:
          items:
            type: string
          type: array
      type: object
    dto.ClustersRequest:
      properties:
        store_clusters_request:
          items:
            properties:
              CAData:
                type: string
              bearer_token:
                type: string
              cloud_provider:
                type: string
              cluster_name:
                type: string
              host:
                type: string
              location:
                type: string
              project_id:
                type: string
            type: object
          type: array
      type: object
    dto.Container:
      properties:
        clusterID:
          type: integer
        container_id:
          type: string
        container_name:
          type: string
        id:
          type: integer
        image:
          type: string
        last_updated_time:
          type: string
        name_of_services:
          type: string
        namespace:
          type: string
        node_name:
          type: string
        nodeID:
          type: integer
        pod_name:
          type: string
        podID:
          type: integer
        protocol_port:
          type: string
        status:
          type: string
        workspaceID:
          type: integer
      type: object
    dto.ContainerFilter:
      properties:
        clusterID:
          type: integer
        container_name:
          type: string
        id:
          type: integer
        nodeID:
          type: integer
        podID:
          type: integer
        workspaceID:
          type: integer
      type: object
    dto.ContainerResponse:
      properties:
        result:
          items:
            $ref: '#/components/schemas/dto.Container'
          type: array
        total_record:
          type: integer
      type: object
    dto.ContainersInPodRequest:
      properties:
        cluster_id:
          items:
            type: integer
          type: array
        from_time:
          items:
            type: string
          type: array
        namespace_id:
          items:
            type: integer
          type: array
        node_id:
          items:
            type: integer
          type: array
        page_next:
          minimum: 1
          type: integer
        page_previous:
          minimum: 0
          type: integer
        pod_id:
          items:
            type: integer
          type: array
        to_time:
          items:
            type: string
          type: array
      type: object
    dto.DataResponse:
      properties:
        list_of_cluster_data:
          items:
            $ref: '#/components/schemas/dto.ListOfClusterData'
          type: array
        listOfInstanceData:
          items:
            $ref: '#/components/schemas/dto.ListOfInstanceData'
          type: array
        listOfInstanceGroupData:
          items:
            $ref: '#/components/schemas/dto.ListOfInstanceGroupData'
          type: array
        listOfNodeData:
          items:
            $ref: '#/components/schemas/dto.ListOfNodeData'
          type: array
        listOfPodData:
          items:
            $ref: '#/components/schemas/dto.ListOfPodData'
          type: array
      type: object
    dto.Deboardcluster:
      properties:
        cluster_id:
          type: integer
      type: object
    dto.Endpoint:
      properties:
        endpoint_name:
          type: string
        labels:
          items:
            $ref: '#/components/schemas/dto.SelectorLabel'
          type: array
        mappings:
          items:
            $ref: '#/components/schemas/dto.Mappings'
          type: array
        namespace:
          type: string
      type: object
    dto.ErrorDTO:
      properties:
        error_code:
          type: string
        error_message:
          type: string
      type: object
    dto.Filter:
      properties:
        label_id:
          type: integer
      type: object
    dto.Filters:
      properties:
        with:
          items:
            $ref: '#/components/schemas/dto.LabelFilter'
          type: array
        without:
          $ref: '#/components/schemas/dto.LabelFilter'
      type: object
    dto.GetClustersEntityInfo:
      properties:
        alertsCount:
          type: integer
        cluster_id:
          type: integer
        labelCount:
          type: integer
        namespaceCount:
          type: integer
        nodeCount:
          type: integer
        podCount:
          type: integer
        policyCount:
          type: integer
      type: object
    dto.GetClustersEntityRequest:
      properties:
        cluster_id:
          type: integer
        from_time:
          items:
            type: string
          type: array
        to_time:
          items:
            type: string
          type: array
      type: object
    dto.GetContainerFilter:
      properties:
        container_id:
          type: string
        container_name:
          type: string
        id:
          type: integer
      type: object
    dto.GetContainersInPodRequest:
      properties:
        cluster_id:
          items:
            type: integer
          type: array
        namespace_id:
          items:
            type: integer
          type: array
        pod_id:
          items:
            type: integer
          type: array
      type: object
    dto.GetLabels:
      properties:
        color:
          type: string
        label_id:
          type: integer
        name:
          type: string
        value:
          type: string
      type: object
    dto.GetPodFilter:
      properties:
        id:
          type: integer
        podName:
          type: string
      type: object
    dto.GetPodResponse:
      properties:
        clusterID:
          type: integer
        default_posture:
          type: string
        id:
          type: integer
        kubearmor_file_posture:
          type: string
        kubearmor_network_posture:
          type: string
        last_updated_time:
          type: string
        location:
          type: string
        namespace:
          type: string
        namespace_id:
          type: integer
        nodeID:
          type: integer
        podname:
          type: string
        workload_id:
          type: integer
        workspaceID:
          type: integer
      type: object
    dto.GetPodsInNodeRequest:
      properties:
        cluster_id:
          items:
            type: integer
          type: array
        namespace_id:
          items:
            type: integer
          type: array
        node_id:
          items:
            type: integer
          type: array
      type: object
    dto.GetPodsRequest:
      properties:
        cluster_id:
          items:
            type: integer
          type: array
        from_time:
          items:
            type: string
          type: array
        node_id:
          items:
            type: integer
          type: array
        page_next:
          minimum: 1
          type: integer
        page_previous:
          minimum: 0
          type: integer
        to_time:
          items:
            type: string
          type: array
      type: object
    dto.GetTags:
      properties:
        label_id:
          type: integer
        name:
          type: string
      type: object
    dto.Instances:
      properties:
        id:
          type: integer
        instance_name:
          type: string
      type: object
    dto.LabelFilter:
      properties:
        entity_id:
          items:
            type: integer
          type: array
        entity_type:
          type: string
      type: object
    dto.ListOfClusterData:
      properties:
        cluster_id:
          type: integer
        cluster_name:
          type: string
        entity_type:
          type: string
      type: object
    dto.ListOfInstanceData:
      properties:
        entity_type:
          type: string
        instance_group_id:
          type: integer
        instance_group_name:
          type: string
        instance_id:
          type: integer
        instance_name:
          type: string
      type: object
    dto.ListOfInstanceGroup:
      properties:
        group_name:
          type: string
        id:
          type: integer
        instances:
          description: 'InstancesGroup string      `json:"instance_group"`'
          items:
            $ref: '#/components/schemas/dto.Instances'
          type: array
      type: object
    dto.ListOfInstanceGroupData:
      properties:
        entity_type:
          type: string
        instance_group_id:
          type: integer
        instance_group_name:
          type: string
      type: object
    dto.ListOfNodeData:
      properties:
        cluster_id:
          type: integer
        cluster_name:
          type: string
        entity_type:
          type: string
        node_id:
          type: integer
        node_name:
          type: string
      type: object
    dto.ListOfPodData:
      properties:
        cluster_id:
          type: integer
        cluster_name:
          type: string
        entity_type:
          type: string
        node_id:
          type: integer
        node_name:
          type: string
        pod_id:
          type: integer
        pod_name:
          type: string
      type: object
    dto.MachineServicesList:
      properties:
        instance_id:
          type: integer
        process_id:
          type: integer
        service_name:
          type: string
        service_path:
          type: string
        service_port:
          type: integer
        service_process_id:
          type: integer
        service_sub_type:
          type: string
        service_type:
          type: string
        status:
          type: string
        workspace_id:
          type: integer
      type: object
    dto.MachineServicesRequest:
      properties:
        from_time:
          items:
            type: string
          type: array
        instance_group_id:
          type: integer
        instance_id:
          type: integer
        page_number:
          minimum: 0
          type: integer
        page_size:
          minimum: 1
          type: integer
        to_time:
          items:
            type: string
          type: array
      type: object
    dto.MachineServicesResponse:
      properties:
        machine_service_list:
          items:
            $ref: '#/components/schemas/dto.MachineServicesList'
          type: array
        total_record:
          type: integer
      type: object
    dto.Mappings:
      properties:
        ip:
          type: string
        port:
          type: integer
        protocol:
          type: string
      type: object
    dto.Namespace:
      properties:
        annotation_status:
          type: string
        id:
          type: integer
        kubearmor_file_posture:
          type: string
        kubearmor_network_posture:
          type: string
        last_updated_time:
          type: string
        namespace:
          type: string
      type: object
    dto.NamespacesRequest:
      properties:
        cluster_id:
          items:
            type: integer
          type: array
        filter:
          $ref: '#/components/schemas/dto.Filter'
        page_next:
          minimum: 1
          type: integer
        page_previous:
          minimum: 0
          type: integer
      type: object
    dto.Node:
      properties:
        alertsCount:
          type: integer
        clusterID:
          type: integer
        containerCount:
          type: integer
        id:
          type: integer
        labelCount:
          type: integer
        last_updated_time:
          type: string
        location:
          type: string
        namespaceCount:
          type: integer
        nodeName:
          type: string
        podCount:
          type: integer
        policyCount:
          type: integer
        workspaceID:
          type: integer
      type: object
    dto.NodeFilter:
      properties:
        clusterID:
          type: integer
        id:
          type: integer
        nodeName:
          type: string
        workspaceID:
          type: integer
      type: object
    dto.NodePodPair:
      properties:
        nodeName:
          type: string
        podName:
          type: string
      type: object
    dto.NodeResponse:
      properties:
        result:
          items:
            $ref: '#/components/schemas/dto.Node'
          type: array
        total_record:
          type: integer
      type: object
    dto.NodesInClusterRequest:
      properties:
        cluster_id:
          items:
            type: integer
          type: array
        filter:
          $ref: '#/components/schemas/dto.Filter'
        from_time:
          items:
            type: string
          type: array
        page_next:
          minimum: 1
          type: integer
        page_previous:
          minimum: 0
          type: integer
        to_time:
          items:
            type: string
          type: array
      type: object
    dto.Pod:
      properties:
        clusterID:
          type: integer
        containerCount:
          type: integer
        defaultPosture:
          type: string
        id:
          type: integer
        kubarmorNetworkPosture:
          type: string
        kubearmorFilePosture:
          type: string
        labelCount:
          type: integer
        last_updated_time:
          type: string
        location:
          description: AlertsCount            int64
          type: string
        namespace:
          type: string
        namespaceID:
          description: |-
            Labels                 []Label `json:"labels,omitempty"`
            WorkloadID             int64 `json:"workload_id"`
          type: integer
        nodeID:
          type: integer
        podname:
          type: string
        workspaceID:
          type: integer
      type: object
    dto.PodFilter:
      properties:
        clusterID:
          type: integer
        containerCount:
          type: integer
        id:
          type: integer
        nodeID:
          type: integer
        podName:
          type: string
        workspaceID:
          type: integer
      type: object
    dto.PodMetaDataRequest:
      properties:
        from_time:
          items:
            type: string
          type: array
        pod_id:
          type: integer
        to_time:
          items:
            type: string
          type: array
      type: object
    dto.PodMetadataCountResponse:
      properties:
        alertsCount:
          type: integer
        containerCount:
          type: integer
        id:
          type: integer
        labelCount:
          type: integer
        policyCount:
          type: integer
      type: object
    dto.PodsInNodeRequest:
      properties:
        cluster_id:
          items:
            type: integer
          type: array
        filter:
          $ref: '#/components/schemas/dto.Filter'
        from_time:
          items:
            type: string
          type: array
        namespace_id:
          items:
            type: integer
          type: array
        node_id:
          items:
            type: integer
          type: array
        page_next:
          minimum: 1
          type: integer
        page_previous:
          minimum: 0
          type: integer
        to_time:
          items:
            type: string
          type: array
      type: object
    dto.PortMaps:
      properties:
        ip:
          type: string
        nodePort:
          type: string
        port:
          type: string
        protocol:
          type: string
        servicePort:
          type: string
        targetPort:
          type: string
      type: object
    dto.RequestAddTagsDTO:
      properties:
        policy_id:
          minimum: 1
          type: integer
        tag_id:
          items:
            type: integer
          type: array
        tag_name:
          items:
            type: string
          type: array
      type: object
    dto.RequestGetClusters:
      properties:
        filter:
          $ref: '#/components/schemas/dto.V2Filter'
        from_time:
          items:
            type: string
          type: array
        page_next:
          minimum: 1
          type: integer
        page_previous:
          minimum: 0
          type: integer
        to_time:
          items:
            type: string
          type: array
      type: object
    dto.RequestGetLabelsDTO:
      properties:
        filter:
          $ref: '#/components/schemas/dto.Filters'
        page_next:
          minimum: 1
          type: integer
        page_previous:
          minimum: 0
          type: integer
        query:
          type: string
      type: object
    dto.RequestGetPods:
      properties:
        cluster_id:
          items:
            type: integer
          type: array
        filter:
          $ref: '#/components/schemas/dto.V2Filter'
        from_time:
          items:
            type: string
          type: array
        namespace_id:
          items:
            type: integer
          type: array
        node_id:
          items:
            type: integer
          type: array
        page_next:
          minimum: 1
          type: integer
        page_previous:
          minimum: 0
          type: integer
        to_time:
          items:
            type: string
          type: array
      type: object
    dto.RequestGetTagsDTO:
      properties:
        page_next:
          minimum: 1
          type: integer
        page_previous:
          minimum: 0
          type: integer
        policy_id:
          minimum: 1
          type: integer
        query:
          type: string
      type: object
    dto.RequestGetWorkloads:
      properties:
        cluster_id:
          items:
            type: integer
          type: array
        namespace_id:
          items:
            type: integer
          type: array
        type:
          items:
            type: string
          type: array
      type: object
    dto.RequestPodsInWorkload:
      properties:
        cluster_id:
          items:
            type: integer
          type: array
        workload_id:
          items:
            type: integer
          type: array
      type: object
    dto.ResourcesRequest:
      properties:
        cluster_name:
          type: string
        count:
          type: integer
        limit:
          type: integer
        offset:
          type: integer
      type: object
    dto.ResourcesResponse:
      properties:
        count:
          type: integer
        offset:
          type: integer
        resource_list:
          items: {}
          type: array
      type: object
    dto.ResponseClusterHash:
      properties:
        hash:
          items:
            $ref: '#/components/schemas/dto.ClusterHash'
          type: array
        message:
          type: string
      type: object
    dto.ResponseGetLabelsDTO:
      properties:
        get_labels:
          items:
            $ref: '#/components/schemas/dto.GetLabels'
          type: array
        total_record:
          type: integer
      type: object
    dto.ResponseGetTagsDTO:
      properties:
        get_tags:
          items:
            $ref: '#/components/schemas/dto.GetTags'
          type: array
        total_record:
          type: integer
      type: object
    dto.ResponseGetWorkloads:
      properties:
        id:
          type: integer
        name:
          type: string
        namespace:
          type: string
        namespace_id:
          type: integer
        type:
          type: string
      type: object
    dto.ResponseMessage:
      properties:
        message:
          type: string
      type: object
    dto.ResponsePodsInWorkload:
      properties:
        pods:
          items:
            type: string
          type: array
        workload_id:
          type: integer
      type: object
    dto.SearchQueryEntityRequest:
      properties:
        from_time:
          items:
            type: string
          type: array
        search_query:
          type: string
        to_time:
          items:
            type: string
          type: array
      type: object
    dto.SelectorLabel:
      properties:
        name:
          type: string
        value:
          type: string
      type: object
    dto.Service:
      properties:
        id:
          type: integer
        labels:
          items:
            $ref: '#/components/schemas/dto.SelectorLabel'
          type: array
        last_updated_time:
          type: string
        mappings:
          items:
            $ref: '#/components/schemas/dto.PortMaps'
          type: array
        namespace:
          type: string
        selector:
          items:
            $ref: '#/components/schemas/dto.SelectorLabel'
          type: array
        service_name:
          type: string
        status:
          type: string
        types:
          type: string
      type: object
    dto.StorePosture:
      properties:
        kubearmor_file_posture:
          type: string
        kubearmor_network_posture:
          type: string
        namespace_id:
          type: integer
      required:
        - namespace_id
      type: object
    dto.V2Filter:
      properties:
        cluster:
          $ref: '#/components/schemas/dto.V2StringOps'
        namespace:
          $ref: '#/components/schemas/dto.V2StringOps'
        pod:
          $ref: '#/components/schemas/dto.V2StringOps'
      type: object
    dto.V2StringOps:
      properties:
        regex:
          items:
            type: string
          type: array
      type: object
    dto.VmInstanceGroupDTORequest:
      properties:
        from_time:
          items:
            type: string
          type: array
        query:
          type: string
        to_time:
          items:
            type: string
          type: array
      type: object
    dto.VmInstanceGroupDTOResponse:
      properties:
        list_of_instance_group:
          items:
            $ref: '#/components/schemas/dto.ListOfInstanceGroup'
          type: array
        total_record:
          type: integer
      type: object
    models.Cluster:
      properties:
        CAData:
          type: string
        bearerToken:
          type: string
        cloudProvider:
          type: string
        clusterName:
          type: string
        default_posture:
          type: string
        host:
          type: string
        id:
          type: integer
        last_updated_time:
          type: string
        location:
          type: string
        projectID:
          type: string
        status:
          type: string
        workspaceID:
          type: integer
      type: object
    dto.AllPendingPolicies:
      properties:
        name:
          type: string
        policy_id:
          type: integer
        policy_version_id:
          type: integer
        updated_at:
          type: string
        version:
          type: integer
      type: object
    dto.Apply:
      properties:
        label_id:
          items:
            type: integer
          minItems: 1
          type: array
        recommended_id:
          items:
            type: integer
          minItems: 1
          type: array
        workspace_id:
          type: integer
      required:
        - workspace_id
      type: object
    dto.Content:
      properties:
        yaml:
          description: 'Json CiliumKubeArmor `json:"json,omitempty"` ()'
          type: string
      type: object
    dto.Details:
      properties:
        id:
          type: integer
        name:
          type: string
      type: object
    dto.Discover:
      properties:
        ignore:
          type: boolean
        used:
          type: boolean
      type: object
    dto.DiscoveredAndCustomPolicyCount:
      properties:
        Custom:
          type: integer
        Discover:
          type: integer
        Hardening:
          type: integer
      type: object
    dto.Filter1:
      properties:
        cluster_id:
          description: >-
            Status          []string `json:"status" validate:"required,oneof=
            Active Pending Ignored Inactive Changed"`
          items:
            type: integer
          type: array
        discover:
          $ref: '#/components/schemas/dto.Discover'
        infra:
          type: string
        instance_group_id:
          items:
            type: integer
          type: array
        instance_id:
          items:
            type: integer
          type: array
        kind:
          items:
            type: string
          type: array
        label_id:
          items:
            type: integer
          type: array
        label_type:
          type: string
        name:
          $ref: '#/components/schemas/dto.StringOps'
        namespace_id:
          items:
            type: integer
          type: array
        pod_id:
          items:
            type: integer
          type: array
        status:
          items:
            type: string
          type: array
        tag_id:
          items:
            type: integer
          type: array
        tags:
          items:
            type: string
          type: array
        tldr:
          $ref: '#/components/schemas/dto.StringOps'
        type:
          items:
            type: string
          type: array
        workload_id:
          items:
            type: integer
          type: array
      type: object
    dto.FilterList:
      properties:
        id:
          type: integer
        name:
          type: string
      type: object
    dto.GetAllGroup:
      properties:
        group_id:
          type: integer
        labels:
          items:
            $ref: '#/components/schemas/dto.Label'
          type: array
        name:
          type: string
        owner_id:
          type: string
        status:
          type: string
        tags:
          items:
            $ref: '#/components/schemas/dto.Tags'
          type: array
        updated_at:
          type: string
      type: object
    dto.Label:
      properties:
        color:
          type: string
        id:
          type: integer
        name:
          type: string
        value:
          type: string
      type: object
    dto.ListOfPolicies:
      properties:
        applied_at:
          type: string
        category:
          type: string
        changes_available:
          type: boolean
        cluster_id:
          type: integer
        cluster_name:
          type: string
        created_at:
          type: string
        description:
          type: string
        instance_group_id:
          type: integer
        instance_group_name:
          type: string
        instance_id:
          type: integer
        instance_name:
          type: string
        label_type:
          type: string
        labels:
          items:
            $ref: '#/components/schemas/dto.Label'
          type: array
        name:
          type: string
        namespace_id:
          type: integer
        namespace_name:
          type: string
        pending_available:
          type: boolean
        policy_id:
          type: integer
        policy_kind:
          type: string
        policy_version_id:
          type: integer
        review_msg:
          type: string
        status:
          type: string
        tags:
          items:
            $ref: '#/components/schemas/dto.Tags'
          type: array
        tldr:
          type: string
        type:
          type: string
        updated_at:
          type: string
        version:
          type: integer
      type: object
    dto.PolicySettings:
      properties:
        policy_review:
          type: boolean
      type: object
    dto.PolicyUpdates:
      properties:
        approved_at:
          type: string
        approved_msg:
          type: string
        commit_msg:
          type: string
        pending_available:
          type: boolean
        policy_version_id:
          type: integer
        reject_msg:
          type: string
        rejected_at:
          type: string
        rejected_by:
          type: string
        status:
          type: string
        total_changes:
          type: integer
        updated_at:
          type: string
      type: object
    dto.RecommendedList:
      properties:
        id:
          type: integer
        name:
          type: string
        no_of_rules:
          type: integer
        status:
          type: string
        tags:
          items:
            $ref: '#/components/schemas/dto.Details'
          type: array
        type:
          type: string
      type: object
    dto.RecommendedPolicy:
      properties:
        total_record:
          type: integer
        workload_list:
          items:
            $ref: '#/components/schemas/dto.WorkloadList'
          type: array
      type: object
    dto.RequestAddAutoDiscoverPoliciesDTO:
      properties:
        policy_id:
          items:
            type: integer
          type: array
      required:
        - policy_id
      type: object
    dto.RequestAddAutoDiscoverPoliciesIgnoreFlagDTO:
      properties:
        policy_id:
          items:
            type: integer
          type: array
      required:
        - policy_id
      type: object
    dto.RequestAddRecommendedPolicyDTO:
      properties:
        compliance_type:
          type: string
        compliance_vendor:
          type: string
        description:
          type: string
        name:
          type: string
        type:
          enum:
            - Network
            - System
          type: string
        workload_id:
          minimum: 1
          type: integer
        yaml:
          type: string
      required:
        - compliance_type
        - compliance_vendor
        - name
        - type
        - yaml
      type: object
    dto.RequestApplyRecommendedDTO:
      properties:
        apply:
          $ref: '#/components/schemas/dto.Apply'
      type: object
    dto.RequestApprovePolicyDTO:
      properties:
        policy_id:
          type: integer
        pr_body:
          type: string
        pr_event:
          enum:
            - APPROVE
            - REQUEST_CHANGES
            - COMMENT
          type: string
      required:
        - policy_id
        - pr_event
      type: object
    dto.RequestBulkApprovePolicyDTO:
      properties:
        policy_id:
          items:
            type: integer
          type: array
        pr_body:
          type: string
        pr_event:
          enum:
            - APPROVE
            - REQUEST_CHANGES
            - COMMENT
          type: string
      required:
        - policy_id
        - pr_event
      type: object
    dto.RequestChangeStatusPolicyDTO:
      properties:
        policy_id:
          type: integer
        status:
          type: string
      required:
        - policy_id
        - status
      type: object
    dto.RequestChangeStatusPolicyInBulkDTO:
      properties:
        id:
          items:
            type: integer
          type: array
        status:
          type: string
      required:
        - id
        - status
      type: object
    dto.RequestChangeStatusRulesDTO:
      properties:
        id:
          type: integer
        status:
          type: string
      required:
        - id
        - status
      type: object
    dto.RequestCheckUniqueNameDTO:
      properties:
        category:
          type: string
        name:
          type: string
      required:
        - category
        - name
      type: object
    dto.RequestCreatePolicyDTO:
      properties:
        cluster_id:
          type: integer
        description:
          description: 'EntityID          int    `json:"entity_id"`'
          type: string
        instance_group_id:
          type: integer
        instance_id:
          type: integer
        label_id:
          items:
            type: integer
          type: array
        label_type:
          enum:
            - Default
            - Node
          type: string
        message:
          type: string
        name:
          type: string
        namespace_id:
          type: integer
        policy_yaml:
          type: string
        type:
          type: string
      required:
        - label_type
        - name
      type: object
    dto.RequestDashboardPolicyCount:
      properties:
        cluster_id:
          items:
            type: integer
          type: array
        from_time:
          type: integer
        to_time:
          type: integer
      type: object
    dto.RequestDeletePoliciesDTO:
      properties:
        policy_id:
          items:
            type: integer
          type: array
      required:
        - policy_id
      type: object
    dto.RequestDeletePolicyDTO:
      properties:
        policy_id:
          type: integer
      required:
        - policy_id
      type: object
    dto.RequestDeleteTagWithPolicyDTO:
      properties:
        policy_id:
          minimum: 1
          type: integer
        tag_id:
          items:
            type: integer
          minItems: 1
          type: array
      type: object
    dto.RequestDenyPolicyDTO:
      properties:
        policy_id:
          type: integer
        workspace_id:
          type: integer
      required:
        - policy_id
        - workspace_id
      type: object
    dto.RequestDiscoverdUpdatePolicyDTO:
      properties:
        id:
          type: integer
      type: object
    dto.RequestEditPolicyDTO:
      properties:
        comment:
          description: |-
            ClusterID   int   `json:"cluster_id"`
            NamespaceID int   `json:"namespace_id"`
          type: string
        description:
          description: 'Name      string `json:"name"`'
          type: string
        label_id:
          items:
            type: integer
          type: array
        label_type:
          description: 'Type        string `json:"type"`'
          enum:
            - Default
            - Node
          type: string
        policy_id:
          type: integer
        policy_yaml:
          type: string
      required:
        - label_type
        - policy_id
      type: object
    dto.RequestGetAllPendingPoliciesDTO:
      properties:
        page_next:
          minimum: 1
          type: integer
        page_previous:
          minimum: 0
          type: integer
      type: object
    dto.RequestGetAllPoliciesV1DTO:
      properties:
        filter:
          $ref: '#/components/schemas/dto.Filter1'
        page_next:
          minimum: 1
          type: integer
        page_previous:
          minimum: 0
          type: integer
      type: object
    dto.RequestGetAllPoliciesVersionDTO:
      properties:
        filter:
          $ref: '#/components/schemas/dto.Filter1'
        page_next:
          minimum: 1
          type: integer
        page_previous:
          minimum: 0
          type: integer
      type: object
    dto.RequestGetAutoDiscoverPolicyDTO:
      properties:
        filter:
          $ref: '#/components/schemas/dto.Filter1'
        page_next:
          minimum: 1
          type: integer
        page_previous:
          minimum: 0
          type: integer
      type: object
    dto.RequestGetCompareOfTwoPolicyDTO:
      properties:
        policy_id:
          minimum: 1
          type: integer
        policy_version_id:
          minimum: 1
          type: integer
      type: object
    dto.RequestGetListOfPolicyChangesDTO:
      properties:
        policy_id:
          type: integer
      required:
        - policy_id
      type: object
    dto.RequestGetPolicyJSONorYAMLStrutureDTO:
      properties:
        policy_id:
          type: integer
      required:
        - policy_id
      type: object
    dto.RequestGetRecommendedPolicyDTO:
      properties:
        filter:
          $ref: '#/components/schemas/dto.Filter1'
        page_number:
          minimum: 0
          type: integer
        page_size:
          minimum: 1
          type: integer
      type: object
    dto.RequestGetRuleDTO:
      properties:
        policy_id:
          minimum: 1
          type: integer
      type: object
    dto.RequestGetRuleMasterDTO:
      properties:
        infra:
          enum:
            - VM
            - GKE
          type: string
        type:
          type: string
      required:
        - infra
        - type
      type: object
    dto.RequestGetRuleMasterDetailsDTO:
      properties:
        cluster_id:
          type: integer
        id:
          type: integer
        instance_group_id:
          type: integer
        instance_id:
          type: integer
        namespace_id:
          type: integer
      required:
        - id
      type: object
    dto.RequestGetWorkloadListForFilter:
      properties:
        filter:
          $ref: '#/components/schemas/dto.Filter1'
        page_number:
          minimum: 0
          type: integer
        page_size:
          minimum: 1
          type: integer
      type: object
    dto.RequestGetYAMLDTO:
      properties:
        id:
          minimum: 1
          type: integer
      type: object
    dto.RequestListAllPoliciesDTO:
      properties:
        filter:
          $ref: '#/components/schemas/dto.Filter1'
        page_next:
          minimum: 1
          type: integer
        page_previous:
          minimum: 0
          type: integer
      type: object
    dto.RequestPolicyCountDTO:
      properties:
        cluster_id:
          items:
            type: integer
          type: array
        kind:
          items:
            type: string
          type: array
        name:
          $ref: '#/components/schemas/dto.StringOps'
        namespace_id:
          items:
            type: integer
          type: array
        status:
          items:
            type: string
          type: array
        tags:
          items:
            type: string
          type: array
        tldr:
          $ref: '#/components/schemas/dto.StringOps'
        type:
          items:
            type: string
          type: array
        workload_id:
          items:
            type: integer
          type: array
      type: object
    dto.RequestReviewDTO:
      properties:
        action:
          enum:
            - APPROVE
            - REQUEST_CHANGES
            - REJECT
          type: string
        policy_id:
          items:
            type: integer
          type: array
        review_msg:
          type: string
      required:
        - action
        - policy_id
      type: object
    dto.RequestReviewPolicyDTO:
      properties:
        policy_id:
          type: integer
        pr_body:
          type: string
        pr_event:
          enum:
            - APPROVE
            - REQUEST_CHANGES
            - COMMENT
          type: string
      required:
        - policy_id
        - pr_event
      type: object
    dto.ResponseCreatePolicyDTO:
      properties:
        policy_id:
          type: integer
      type: object
    dto.ResponseDashboardPolicyCount:
      properties:
        active:
          $ref: '#/components/schemas/dto.DiscoveredAndCustomPolicyCount'
        changed:
          $ref: '#/components/schemas/dto.DiscoveredAndCustomPolicyCount'
        ignored:
          $ref: '#/components/schemas/dto.DiscoveredAndCustomPolicyCount'
        inActive:
          $ref: '#/components/schemas/dto.DiscoveredAndCustomPolicyCount'
        pending:
          $ref: '#/components/schemas/dto.DiscoveredAndCustomPolicyCount'
        totalPoliciesCount:
          type: integer
      type: object
    dto.ResponseDiffPolicyDTO:
      properties:
        approved_yaml:
          type: string
        staged_yaml:
          type: string
        timestamp:
          type: string
      type: object
    dto.ResponseGetAllGroupsVersionDTO:
      properties:
        get_all_group:
          items:
            $ref: '#/components/schemas/dto.GetAllGroup'
          type: array
        total_record:
          type: integer
      type: object
    dto.ResponseGetAllPendingPoliciesDTO:
      properties:
        all_pending_policies:
          items:
            $ref: '#/components/schemas/dto.AllPendingPolicies'
          type: array
        total_record:
          type: integer
      type: object
    dto.ResponseGetAllPoliciesDTO:
      properties:
        active_record:
          type: integer
        inactive_record:
          type: integer
        list_of_policies:
          items:
            $ref: '#/components/schemas/dto.ListOfPolicies'
          type: array
        pending_record:
          type: integer
        total_record:
          type: integer
      type: object
    dto.ResponseGetAllPoliciesVersionDTO:
      properties:
        list_of_policies:
          items:
            $ref: '#/components/schemas/dto.ListOfPolicies'
          type: array
        total_record:
          type: integer
      type: object
    dto.ResponseGetAutoDiscoverPolicyDTO:
      properties:
        list_of_policies:
          items:
            $ref: '#/components/schemas/dto.ListOfPolicies'
          type: array
        total_record:
          type: integer
      type: object
    dto.ResponseGetCompareOfTwoPolicyDTO:
      properties:
        approved_yaml:
          type: string
        version_yaml:
          type: string
      type: object
    dto.ResponseGetListOfPolicyChangesDTO:
      properties:
        list_of_updates:
          items:
            $ref: '#/components/schemas/dto.PolicyUpdates'
          type: array
        version:
          type: integer
      type: object
    dto.ResponseGetPoliciesCountDTO:
      properties:
        active_count:
          type: integer
        changed_count:
          type: integer
        custom_count:
          type: integer
        discovered_count:
          type: integer
        hardening_count:
          type: integer
        ignored_count:
          type: integer
        inactive_count:
          type: integer
        pending_count:
          type: integer
        total_count:
          type: integer
      type: object
    dto.ResponseGetPolicyInfo:
      properties:
        cluster:
          type: string
        description:
          type: string
        label_type:
          type: string
        labels:
          items:
            $ref: '#/components/schemas/dto.Label'
          type: array
        namespace:
          type: string
        policy_id:
          type: integer
        policy_name:
          type: string
        policy_type:
          type: string
        policy_version:
          type: integer
        policy_yaml:
          type: string
        status:
          type: string
        timestamp:
          type: string
      type: object
    dto.ResponseGetPolicyJSONorYAMLStrutureDTO:
      properties:
        content:
          $ref: '#/components/schemas/dto.Content'
      type: object
    dto.ResponseGetPolicyYaml:
      properties:
        policyVerionId:
          type: integer
        policyYaml:
          type: string
        version_number:
          type: integer
      type: object
    dto.ResponseGetRecommendedPolicyDTO:
      properties:
        recommended_policy:
          $ref: '#/components/schemas/dto.RecommendedPolicy'
      type: object
    dto.ResponseGetRuleMasterDTO:
      properties:
        id:
          type: integer
        rule_master_name:
          type: string
      type: object
    dto.ResponseGetRuleMasterDetailsDTO:
      properties:
        details:
          items:
            $ref: '#/components/schemas/dto.RuleMasterDetails'
          type: array
        to_ports_id:
          type: integer
        type:
          type: string
      type: object
    dto.ResponseGetWorkloadListForFilter:
      properties:
        total_record:
          type: integer
        workload_list:
          items:
            $ref: '#/components/schemas/dto.FilterList'
          type: array
      type: object
    dto.ResponseGetYAMLDTO:
      properties:
        content:
          properties:
            yaml:
              type: string
          type: object
      type: object
    dto.ResponseListAllPoliciesDTO:
      properties:
        active_record:
          type: integer
        inactive_record:
          type: integer
        list_of_policies:
          items:
            $ref: '#/components/schemas/dto.ListOfPolicies'
          type: array
        pending_record:
          type: integer
        total_record:
          type: integer
      type: object
    dto.ResponsePendingPolicyDTO:
      properties:
        kind:
          type: string
        name:
          type: string
        pending_yaml:
          type: string
        policy_version_id:
          type: integer
      type: object
    dto.ResponsePolicy:
      properties:
        applied_at:
          type: string
        category:
          type: string
        changes_available:
          type: boolean
        cluster_id:
          type: integer
        cluster_name:
          type: string
        created_at:
          type: string
        description:
          type: string
        id:
          type: integer
        label_type:
          type: string
        labels:
          items:
            $ref: '#/components/schemas/dto.Label'
          type: array
        name:
          type: string
        namespace_id:
          type: integer
        namespace_name:
          type: string
        pending_available:
          type: boolean
        policy_kind:
          type: string
        status:
          type: string
        tags:
          items:
            $ref: '#/components/schemas/dto.Tags'
          type: array
        tldr:
          type: string
        type:
          type: string
        updated_at:
          type: string
        version:
          type: integer
        yaml:
          type: string
      type: object
    dto.ResponsePolicySettingDTO:
      properties:
        settings:
          $ref: '#/components/schemas/dto.PolicySettings'
      type: object
    dto.RuleMasterDetails:
      properties:
        key:
          type: string
        value:
          items:
            type: string
          type: array
      type: object
    dto.StringOps:
      properties:
        regex:
          items:
            type: string
          type: array
      type: object
    dto.SuccessDTO:
      properties:
        message:
          type: string
      type: object
    dto.Tags:
      properties:
        id:
          type: integer
        name:
          type: string
      type: object
    dto.WorkloadList:
      properties:
        description:
          type: string
        id:
          type: integer
        labels:
          items:
            $ref: '#/components/schemas/dto.Label'
          type: array
        name:
          type: string
        recommended_list:
          items:
            $ref: '#/components/schemas/dto.RecommendedList'
          type: array
      type: object
    dto.AdHocRepo:
      properties:
        image_name:
          type: string
        image_url:
          type: string
        repo_id:
          minimum: 1
          type: integer
        tag:
          type: string
      type: object
    dto.Filter2:
      properties:
        code_execution:
          type: boolean
        exploitable:
          type: boolean
        network_attack:
          type: boolean
        severity:
          type: boolean
        wormable:
          type: boolean
      type: object
    dto.ListOfImage:
      properties:
        created_at:
          type: string
        id:
          type: integer
        name:
          type: string
        registry_name:
          type: string
        scan_err:
          type: string
        tags:
          type: string
        updated_at:
          type: string
      type: object
    dto.ListOfIssue:
      properties:
        malware:
          type: integer
        sensitive:
          type: integer
      type: object
    dto.ListOfRegion:
      properties:
        id:
          type: integer
        name:
          type: string
      type: object
    dto.ListOfRegistry:
      properties:
        id:
          type: integer
        name:
          type: string
        registry_id:
          type: integer
        registry_name:
          type: string
        status:
          type: string
        url:
          type: string
      type: object
    dto.ListOfRisk:
      properties:
        critical:
          type: integer
        high:
          type: integer
        low:
          type: integer
        medium:
          type: integer
        negligible:
          type: integer
        no_issue:
          type: integer
      type: object
    dto.ListOfVulnerability:
      properties:
        exploitable:
          type: boolean
        id:
          type: integer
        image_name:
          type: string
        name:
          type: string
        resouces:
          type: string
        severity:
          type: string
        vendor_fix:
          type: boolean
      type: object
    dto.RequestAddRegistryDTO:
      properties:
        api_key:
          type: string
        description:
          type: string
        domain_id:
          type: integer
        name:
          type: string
        password:
          type: string
        registry_id:
          type: integer
        url:
          type: string
        user_name:
          type: string
      required:
        - domain_id
        - name
        - registry_id
        - url
      type: object
    dto.RequestChangeStatusRegistryDTO:
      properties:
        id:
          minimum: 1
          type: integer
        status:
          type: string
      required:
        - status
      type: object
    dto.RequestDeleteRegistryDTO:
      properties:
        id:
          minimum: 1
          type: integer
      type: object
    dto.RequestEditRegistryDTO:
      properties:
        api_key:
          type: string
        description:
          type: string
        id:
          minimum: 1
          type: integer
        name:
          type: string
        password:
          type: string
        registry_id:
          minimum: 1
          type: integer
        url:
          type: string
        user_name:
          type: string
      required:
        - url
      type: object
    dto.RequestGetAllVulnerabilityDTO:
      properties:
        filter:
          $ref: '#/components/schemas/dto.Filter2'
        page_next:
          minimum: 1
          type: integer
        page_previous:
          minimum: 0
          type: integer
      type: object
    dto.RequestGetDashboardDTO:
      type: object
    dto.RequestGetListOfImageDTO:
      properties:
        page_next:
          type: integer
        page_previous:
          type: integer
        search:
          type: string
        status:
          type: string
      required:
        - status
      type: object
    dto.RequestGetListOfRegionsDTO:
      properties:
        page_next:
          minimum: 1
          type: integer
        page_previous:
          minimum: 0
          type: integer
        registry_id:
          minimum: 1
          type: integer
      type: object
    dto.RequestGetListOfRegistryDTO:
      properties:
        page_next:
          minimum: 1
          type: integer
        page_previous:
          minimum: 0
          type: integer
      type: object
    dto.RequestGetRegistryDTO:
      properties:
        id:
          minimum: 1
          type: integer
      type: object
    dto.RequestGetRegistryTypeDTO:
      properties:
        page_next:
          minimum: 1
          type: integer
        page_previous:
          minimum: 0
          type: integer
      type: object
    dto.RequestSaveAdhocImages:
      properties:
        domain_id:
          minimum: 0
          type: integer
        repos:
          items:
            $ref: '#/components/schemas/dto.AdHocRepo'
          type: array
      required:
        - repos
      type: object
    dto.RequestValidateRegistryCredDTO:
      properties:
        apikey:
          type: string
        id:
          type: integer
        password:
          type: string
        registry_name:
          type: string
        registry_type:
          type: integer
        url:
          type: string
        username:
          type: string
      required:
        - registry_name
        - registry_type
        - url
      type: object
    dto.ResponseGetAllVulnerabilityDTO:
      properties:
        list_of_vulnerability:
          items:
            $ref: '#/components/schemas/dto.ListOfVulnerability'
          type: array
        total_record:
          type: integer
      type: object
    dto.ResponseGetDashboardDTO:
      properties:
        failed_images:
          type: integer
        in_progress_images:
          type: integer
        pending_images:
          type: integer
        success_images:
          type: integer
        updated_at:
          type: string
      type: object
    dto.ResponseGetImageRiskCountDTO:
      properties:
        list_of_risk:
          $ref: '#/components/schemas/dto.ListOfRisk'
        total_image:
          type: integer
        updated_at:
          type: integer
      type: object
    dto.ResponseGetListOfImageDTO:
      properties:
        list_of_image:
          items:
            $ref: '#/components/schemas/dto.ListOfImage'
          type: array
        total_record:
          type: integer
      type: object
    dto.ResponseGetListOfRegionsDTO:
      properties:
        list_of_region:
          items:
            $ref: '#/components/schemas/dto.ListOfRegion'
          type: array
        total_record:
          type: integer
      type: object
    dto.ResponseGetListOfRegistryDTO:
      properties:
        list_of_registry:
          items:
            $ref: '#/components/schemas/dto.ListOfRegistry'
          type: array
        total_record:
          type: integer
      type: object
    dto.ResponseGetRegistryDTO:
      properties:
        created_at:
          type: string
        created_by:
          type: string
        description:
          type: string
        name:
          type: string
        registry_id:
          type: integer
        status:
          type: string
        updated_at:
          type: string
        updated_by:
          type: string
        url:
          type: string
        user_name:
          type: string
      type: object
    dto.ResponseGetRegistryTypeDTO:
      properties:
        list_of_registry_type:
          items:
            $ref: '#/components/schemas/dto.ListOfRegistry'
          type: array
        total_record:
          type: integer
      type: object
    dto.ResponseGetSecurityIssuesDTO:
      properties:
        list_of_issue:
          $ref: '#/components/schemas/dto.ListOfIssue'
        list_of_risk:
          $ref: '#/components/schemas/dto.ListOfRisk'
        total_vulnerability:
          type: integer
        updated_at:
          type: integer
      type: object
    dto.ResponseListOfFilterDTO:
      properties:
        code_execution:
          type: integer
        exploitable:
          type: integer
        network_attack:
          type: integer
        severity:
          type: integer
        wormable:
          type: integer
      type: object
    dto.RequestAnnotationDTO:
      properties:
        cluster_id:
          type: integer
        workspace_id:
          type: integer
      required:
        - cluster_id
        - workspace_id
      type: object
    dto.RequestChangeAnnotationStatusDTO:
      properties:
        annotation_status:
          type: string
        cluster_id:
          type: integer
        namespace:
          type: string
        workspace_id:
          type: integer
      type: object
    dto.RequestData:
      properties:
        data:
          type: string
      required:
        - data
      type: object
    dto.RequestFetchLabelDTO:
      properties:
        cluster_id:
          type: integer
        workspace_id:
          type: integer
      required:
        - cluster_id
        - workspace_id
      type: object
    dto.RequestFetchPolicyDTO:
      properties:
        cluster_id:
          type: integer
        workspace_id:
          type: integer
      required:
        - cluster_id
        - workspace_id
      type: object
    dto.RequestStatusLabelDto:
      properties:
        labelInfo:
          type: string
      required:
        - labelInfo
      type: object
    dto.ResponseFetchAnnotationDTO:
      properties:
        kubearmor_file_posture:
          type: string
        kubearmor_network_posture:
          type: string
        namespace:
          type: string
      type: object
    dto.ResponseFetchLabelDTO:
      properties:
        action:
          type: string
        entity_name:
          type: string
        entity_type:
          type: string
        instance_group_id:
          type: integer
        name:
          type: string
        namespace:
          type: string
        status:
          type: string
        value:
          type: string
      type: object
    dto.ResponseFetchPolicyDTO:
      properties:
        Action:
          type: string
        namespace:
          type: string
        policy_id:
          type: integer
        timestamp:
          type: integer
        yaml_content:
          type: string
      type: object
    dto.Actions:
      properties:
        Audit (Block):
          type: integer
        audit:
          type: integer
        blocked:
          type: integer
      type: object
    dto.CiliumAlerts:
      properties:
        clusterID:
          items:
            type: string
          type: array
        filters:
          items:
            $ref: >-
              #/components/schemas/github_com_accuknox_data-pipeline-api_src_controllers_dto.FilterField
          type: array
        fromTime:
          type: integer
        namespace:
          items:
            type: string
          type: array
        pageID:
          minimum: 1
          type: integer
        pageSize:
          minimum: 5
          type: integer
        tenantId:
          type: string
        toTime:
          type: integer
      required:
        - clusterID
        - fromTime
        - pageID
        - pageSize
        - toTime
      type: object
    dto.CiliumCount:
      properties:
        clusterID:
          items:
            type: string
          type: array
        filters:
          items:
            $ref: >-
              #/components/schemas/github_com_accuknox_data-pipeline-api_src_controllers_dto.FilterField
          type: array
        fromTime:
          type: integer
        namespace:
          items:
            type: string
          type: array
        tenantId:
          type: string
        toTime:
          type: integer
      required:
        - clusterID
        - fromTime
        - toTime
      type: object
    dto.DslFilter:
      properties:
        clusterID:
          items:
            type: string
          type: array
        component:
          maxLength: 20
          type: string
        fromTime:
          type: integer
        namespace:
          items:
            type: string
          type: array
        query:
          items:
            type: string
          type: array
        tenantId:
          type: string
        toTime:
          type: integer
        type:
          type: string
      required:
        - clusterID
        - component
        - fromTime
        - toTime
      type: object
    dto.Filters1:
      properties:
        Policies:
          $ref: '#/components/schemas/dto.StringFilter'
        Tags:
          $ref: '#/components/schemas/dto.StringFilter'
      type: object
    dto.KubeArmorAlertCountReq:
      properties:
        ClusterID:
          items:
            type: string
          type: array
        Filters:
          $ref: '#/components/schemas/dto.Filters1'
        FromTime:
          type: integer
        Namespace:
          items:
            type: string
          type: array
        ToTime:
          type: integer
      type: object
    dto.KubeArmorAlertCountResponse:
      properties:
        alerts:
          $ref: '#/components/schemas/dto.KubearmorActions'
        clusterid:
          type: string
        namespace:
          type: string
        policy:
          type: string
        tag:
          type: string
      type: object
    dto.KubearmorActions:
      properties:
        actions:
          $ref: '#/components/schemas/dto.Actions'
      type: object
    dto.KubearmorAlerts:
      properties:
        Namespace:
          items:
            type: string
          type: array
        OrderBy:
          type: string
        View:
          type: string
        WorkloadName:
          items:
            type: string
          type: array
        WorkloadType:
          items:
            type: string
          type: array
        clusterID:
          items:
            type: string
          type: array
        filters:
          items:
            $ref: >-
              #/components/schemas/github_com_accuknox_data-pipeline-api_src_controllers_dto.FilterField
          type: array
        fromTime:
          type: integer
        pageID:
          minimum: 1
          type: integer
        pageSize:
          minimum: 5
          type: integer
        toTime:
          type: integer
      required:
        - clusterID
        - fromTime
        - pageID
        - pageSize
        - toTime
      type: object
    dto.KubearmorCount:
      properties:
        Namespace:
          items:
            type: string
          type: array
        View:
          type: string
        WorkloadName:
          items:
            type: string
          type: array
        WorkloadType:
          items:
            type: string
          type: array
        clusterID:
          items:
            type: string
          type: array
        filters:
          items:
            $ref: >-
              #/components/schemas/github_com_accuknox_data-pipeline-api_src_controllers_dto.FilterField
          type: array
        fromTime:
          type: integer
        toTime:
          type: integer
      required:
        - clusterID
        - fromTime
        - toTime
      type: object
    dto.KubearmorCountReq:
      properties:
        ClusterID:
          items:
            type: string
          type: array
        Filters:
          items:
            $ref: >-
              #/components/schemas/github_com_accuknox_data-pipeline-api_src_controllers_dto.FilterField
          type: array
        FromTime:
          type: integer
        Namespace:
          items:
            type: string
          type: array
        ToTime:
          type: integer
        WorkloadName:
          items:
            type: string
          type: array
        WorkloadType:
          items:
            type: string
          type: array
      type: object
    dto.StringFilter:
      properties:
        eq:
          items:
            type: string
          type: array
      type: object
    github_com_accuknox_data-pipeline-api_src_controllers_dto.FilterField:
      properties:
        field:
          type: string
        op:
          type: string
        value:
          type: string
      type: object
    dto.Cluster1:
      properties:
        id:
          type: integer
        name:
          type: string
      type: object
    dto.Filter3:
      properties:
        entity_id:
          items:
            type: integer
          type: array
        entity_type:
          type: string
      type: object
    dto.Filters2:
      properties:
        with:
          items:
            $ref: '#/components/schemas/dto.Filter3'
          type: array
        without:
          $ref: '#/components/schemas/dto.Filter3'
      type: object
    dto.GetTag:
      properties:
        id:
          type: integer
        name:
          type: string
      type: object
    dto.Label1:
      properties:
        id:
          type: integer
        name:
          type: string
        value:
          type: string
      type: object
    dto.Namespace1:
      properties:
        id:
          type: integer
        name:
          type: string
      type: object
    dto.NewLabel:
      properties:
        name:
          type: string
        value:
          type: string
      type: object
    dto.NewNamespace:
      properties:
        name:
          type: string
      type: object
    dto.NewTag:
      properties:
        name:
          type: string
      type: object
    dto.Policy:
      properties:
        cluster:
          $ref: '#/components/schemas/dto.Cluster1'
        date_created:
          type: string
        date_modified:
          type: string
        id:
          type: integer
        kind:
          type: string
        label:
          items:
            $ref: '#/components/schemas/dto.Label1'
          type: array
        name:
          type: string
        namespace:
          $ref: '#/components/schemas/dto.Namespace1'
        policy_content:
          type: string
        tag:
          items:
            $ref: '#/components/schemas/dto.GetTag'
          type: array
        type:
          type: string
        version:
          type: integer
        vm_instance:
          $ref: '#/components/schemas/dto.VMInstance'
        vm_instance_group:
          $ref: '#/components/schemas/dto.VMInstanceGroup'
        workspace:
          $ref: '#/components/schemas/dto.Workspace'
      type: object
    dto.PolicyLabel:
      properties:
        ids:
          items:
            type: integer
          type: array
        new:
          items:
            $ref: '#/components/schemas/dto.NewLabel'
          type: array
      type: object
    dto.PolicyNamespace:
      properties:
        id:
          type: integer
        new:
          $ref: '#/components/schemas/dto.NewNamespace'
      type: object
    dto.PolicyTag:
      properties:
        ids:
          items:
            type: integer
          type: array
        new:
          items:
            $ref: '#/components/schemas/dto.NewTag'
          type: array
      type: object
    dto.RequestApplyPolicyDTO:
      properties:
        commit_message:
          type: string
        policy_id:
          type: integer
      type: object
    dto.RequestCreatePoliciesDTO:
      properties:
        cluster_id:
          type: integer
        domain_id:
          type: integer
        kind:
          type: string
        label:
          items:
            $ref: '#/components/schemas/dto.PolicyLabel'
          type: array
        label_type:
          enum:
            - Default
            - Node
          type: string
        name:
          type: string
        namespace:
          $ref: '#/components/schemas/dto.PolicyNamespace'
        policy_content:
          type: string
        tag:
          items:
            $ref: '#/components/schemas/dto.PolicyTag'
          type: array
        type:
          type: string
        user_id:
          type: string
        vm_instance:
          $ref: '#/components/schemas/dto.VMInstancePolicy'
        vm_instance_group:
          $ref: '#/components/schemas/dto.VMInstanceGroupPolicy'
      required:
        - domain_id
        - kind
        - label
        - label_type
        - name
        - policy_content
        - user_id
      type: object
    dto.RequestGetLabelsDTO1:
      properties:
        filter:
          $ref: '#/components/schemas/dto.Filters2'
        limit:
          minimum: 1
          type: integer
        page:
          minimum: 0
          type: integer
        search:
          type: string
      type: object
    dto.RequestGetPoliciesDTO:
      properties:
        policy_id:
          items:
            type: integer
          type: array
      required:
        - policy_id
      type: object
    dto.RequestGetVMInstanceDTO:
      properties:
        instance_group_id:
          type: integer
        limit:
          minimum: 1
          type: integer
        page:
          minimum: 0
          type: integer
      required:
        - instance_group_id
      type: object
    dto.RequestGetVMInstanceGroupDTO:
      properties:
        limit:
          minimum: 1
          type: integer
        page:
          minimum: 0
          type: integer
      type: object
    dto.RequestListPolicies:
      properties:
        kind:
          items:
            type: string
          type: array
        limit:
          minimum: 1
          type: integer
        page:
          minimum: 0
          type: integer
        type:
          type: string
      type: object
    dto.RequestNamespaceDTO:
      properties:
        cluster_id:
          type: integer
        search:
          type: string
      required:
        - cluster_id
      type: object
    dto.RequestStoreTagsDTO:
      properties:
        name:
          items:
            type: string
          type: array
      required:
        - name
      type: object
    dto.RequestUpdatePoliciesDTO:
      properties:
        cluster_id:
          type: integer
        domain_id:
          type: integer
        id:
          type: integer
        kind:
          type: string
        label:
          items:
            $ref: '#/components/schemas/dto.PolicyLabel'
          type: array
        label_type:
          type: string
        name:
          type: string
        namespace:
          $ref: '#/components/schemas/dto.PolicyNamespace'
        policy_content:
          type: string
        tag:
          items:
            $ref: '#/components/schemas/dto.PolicyTag'
          type: array
        type:
          type: string
        user_id:
          type: string
        vm_instance:
          $ref: '#/components/schemas/dto.VMInstancePolicy'
        vm_instance_group:
          $ref: '#/components/schemas/dto.VMInstanceGroupPolicy'
      required:
        - id
        - kind
        - name
        - policy_content
        - user_id
      type: object
    dto.ResponseApplyPolicyDTO:
      properties:
        policy_id:
          type: integer
      type: object
    dto.ResponseDTO:
      properties:
        code:
          type: string
        message:
          type: string
      type: object
    dto.ResponseGetClusters:
      properties:
        clusters:
          items:
            $ref: '#/components/schemas/dto.Cluster1'
          type: array
      type: object
    dto.ResponseGetLabels:
      properties:
        labels:
          items:
            $ref: '#/components/schemas/dto.Label1'
          type: array
        total:
          type: integer
      type: object
    dto.ResponseGetNamespacesDTO:
      properties:
        namespaces:
          items:
            $ref: '#/components/schemas/dto.Namespace1'
          type: array
      type: object
    dto.ResponseGetTagsDTO1:
      properties:
        tags:
          items:
            $ref: '#/components/schemas/dto.GetTag'
          type: array
      type: object
    dto.ResponseGetVMInstanceDTO:
      properties:
        instance:
          items:
            $ref: '#/components/schemas/dto.VMInstanceDTO'
          type: array
        total:
          type: integer
      type: object
    dto.ResponseGetVMInstanceGroupDTO:
      properties:
        instance_group:
          items:
            $ref: '#/components/schemas/dto.VMInstanceGroupDTO'
          type: array
        total:
          type: integer
      type: object
    dto.ResponseListPolicies:
      properties:
        policies:
          items:
            $ref: '#/components/schemas/dto.Policy'
          type: array
        total_count:
          type: integer
      type: object
    dto.ResponsePolicyDTO:
      properties:
        code:
          type: string
        message:
          type: string
        policy:
          $ref: '#/components/schemas/dto.Policy'
      type: object
    dto.ResponseStoreTagsDTO:
      properties:
        code:
          type: string
        message:
          type: string
        tag:
          items:
            $ref: '#/components/schemas/dto.GetTag'
          type: array
      type: object
    dto.VMInstance:
      properties:
        id:
          type: integer
        name:
          type: string
      type: object
    dto.VMInstanceDTO:
      properties:
        id:
          type: integer
        name:
          type: string
      type: object
    dto.VMInstanceGroup:
      properties:
        id:
          type: integer
        name:
          type: string
      type: object
    dto.VMInstanceGroupDTO:
      properties:
        id:
          type: integer
        name:
          type: string
      type: object
    dto.VMInstanceGroupPolicy:
      properties:
        id:
          type: integer
        new:
          type: string
      type: object
    dto.VMInstancePolicy:
      properties:
        id:
          type: integer
        new:
          type: string
      type: object
    dto.Workspace:
      properties:
        id:
          type: integer
        name:
          type: string
      type: object
    model.Connections:
      properties:
        bind:
          type: boolean
        in_cluster:
          type: boolean
        localhost:
          type: boolean
        private_ip:
          type: boolean
        public_ip:
          type: boolean
      type: object
    model.CountResponse:
      properties:
        blocked_egress_events:
          type: integer
        blocked_file_events:
          type: integer
        blocked_ingress_events:
          type: integer
        blocked_process_events:
          type: integer
        total_egress_events:
          type: integer
        total_file_events:
          type: integer
        total_ingress_events:
          type: integer
        total_process_events:
          type: integer
      type: object
    model.Data:
      properties:
        action:
          type: string
        container_id:
          type: string
        container_name:
          type: string
        count:
          type: integer
        deploymentName:
          type: string
        destination:
          type: string
        destination_label:
          type: string
        destination_namespace:
          type: string
        id:
          type: string
        ip:
          type: string
        labels:
          type: string
        namespace:
          type: string
        nw_type:
          type: string
        pod_name:
          type: string
        port:
          type: integer
        protocol:
          type: string
        source:
          type: string
        updated_time:
          type: integer
      type: object
    model.Edge:
      properties:
        data:
          $ref: '#/components/schemas/model.EdgeData'
        id:
          type: string
        label:
          type: string
        source:
          type: integer
        target:
          type: integer
      type: object
    model.EdgeData:
      properties:
        action:
          type: string
        destination:
          type: string
        destination_label:
          type: string
        destination_namespace:
          type: string
        ip:
          type: string
        namespace:
          type: string
        port:
          type: integer
        protocol:
          type: string
        updated_time:
          type: integer
      type: object
    model.FiltersV2:
      properties:
        action:
          $ref: '#/components/schemas/model.StringOperators'
        command:
          $ref: '#/components/schemas/model.StringOperators'
        container:
          $ref: '#/components/schemas/model.StringOperators'
        count:
          $ref: '#/components/schemas/model.IntOperators'
        destination:
          $ref: '#/components/schemas/model.StringOperators'
        ip:
          $ref: '#/components/schemas/model.StringOperators'
        labels:
          $ref: '#/components/schemas/model.StringOperators'
        network_flow:
          $ref: '#/components/schemas/model.StringOperators'
        pod_name:
          $ref: '#/components/schemas/model.StringOperators'
        port:
          $ref: '#/components/schemas/model.IntOperators'
        protocol:
          $ref: '#/components/schemas/model.StringOperators'
      type: object
    model.GraphResponse:
      properties:
        edges:
          items:
            $ref: '#/components/schemas/model.Edge'
          type: array
        nodes:
          items:
            $ref: '#/components/schemas/model.Node'
          type: array
      type: object
    model.IntOperators:
      properties:
        eq:
          items:
            type: integer
          type: array
        gt:
          type: integer
        gte:
          type: integer
        lt:
          type: integer
        lte:
          type: integer
        neq:
          items:
            type: integer
          type: array
      type: object
    model.KeyTypeResponse:
      properties:
        key:
          type: string
        type:
          type: string
      type: object
    model.KeyValueResponse:
      properties:
        result:
          items:
            type: string
          type: array
      type: object
    model.Node:
      properties:
        data:
          $ref: '#/components/schemas/model.NodeData'
        id:
          type: integer
        pod_name:
          type: string
        type:
          type: string
      type: object
    model.NodeData:
      properties:
        action:
          type: string
        allowed_connections:
          type: integer
        blocked_connections:
          type: integer
        container_name:
          type: string
        count:
          type: integer
        ip:
          type: string
        labels:
          type: string
        namespace:
          type: string
        nw_type:
          type: string
        pod_name:
          type: string
        port:
          type: integer
        protocol:
          type: string
        source:
          type: string
        updated_time:
          type: integer
      type: object
    model.RequestV2:
      properties:
        aggregated:
          type: boolean
        archived:
          type: boolean
        cluster_id:
          type: integer
        connections:
          $ref: '#/components/schemas/model.Connections'
        filters:
          $ref: '#/components/schemas/model.FiltersV2'
        from_time:
          type: integer
        page_next:
          type: integer
        page_previous:
          type: integer
        pod_name:
          type: string
        to_time:
          type: integer
        workload:
          $ref: '#/components/schemas/model.Workload'
      type: object
    model.Response:
      properties:
        response:
          items:
            $ref: '#/components/schemas/model.Data'
          type: array
        total_records:
          type: integer
      type: object
    model.StringOperators:
      properties:
        eq:
          items:
            type: string
          type: array
        neq:
          items:
            type: string
          type: array
        regex:
          items:
            type: string
          type: array
      type: object
    model.TopConnRequest:
      properties:
        cluster_id:
          items:
            type: integer
          type: array
        fromTime:
          type: integer
        limit:
          type: integer
        metrics:
          $ref: '#/components/schemas/model.metrics'
        resource:
          type: string
        toTime:
          type: integer
      type: object
    model.TopConnResponse:
      properties:
        result:
          items:
            $ref: '#/components/schemas/model.TopN'
          type: array
        total_egress_count:
          type: integer
        total_ingress_count:
          type: integer
      type: object
    model.TopN:
      properties:
        egress:
          type: integer
        ingress:
          type: integer
        name:
          type: string
        namespace_name:
          type: string
        workload_type:
          type: string
      type: object
    model.ValuesRequest:
      properties:
        archived:
          type: boolean
        cluster_id:
          type: integer
        from_time:
          type: integer
        key:
          type: string
        operation:
          type: string
        pod_name:
          type: string
        to_time:
          type: integer
        workload:
          $ref: '#/components/schemas/model.Workload'
      type: object
    model.Workload:
      properties:
        name:
          type: string
        type:
          type: string
      type: object
    model.metrics:
      properties:
        egress:
          type: boolean
        ingress:
          type: boolean
      type: object
    CustomAssetMPTT:
      required:
        - name
      type: object
      properties:
        id:
          title: Id
          type: string
          format: uuid
          readOnly: true
        name:
          title: Name
          maxLength: 255
          minLength: 1
          type: string
        type:
          required:
            - name
          type: object
          properties:
            id:
              title: Id
              type: string
              format: uuid
              readOnly: true
            name:
              title: Name
              maxLength: 255
              minLength: 1
              type: string
            category:
              title: Category
              type: string
              nullable: true
              enum:
                - Host
                - Container
                - Domain
                - device
                - web_app
                - aws_account
                - gcp_project
                - software
                - azure_subscription
                - CloudsploitAudit
                - SecurityHubAudit
                - ClusterRole
                - RDSInstance
            alias:
              type: array
              items:
                title: Alias
                maxLength: 255
                minLength: 1
                type: string
          readOnly: true
        region:
          required:
            - cloud_provider
            - name
          type: object
          properties:
            id:
              title: Id
              type: string
              format: uuid
              readOnly: true
            name:
              title: Name
              maxLength: 50
              minLength: 1
              type: string
            cloud_provider:
              title: Cloud provider
              maxLength: 50
              minLength: 1
              type: string
          readOnly: true
        children:
          title: Children
          type: string
          readOnly: true
    AssetType:
      required:
        - name
      type: object
      properties:
        id:
          title: Id
          type: string
          format: uuid
          readOnly: true
        name:
          title: Name
          maxLength: 255
          minLength: 1
          type: string
        category:
          title: Category
          type: string
          nullable: true
          enum:
            - Host
            - Container
            - Domain
            - device
            - web_app
            - aws_account
            - gcp_project
            - software
            - azure_subscription
            - CloudsploitAudit
            - SecurityHubAudit
            - ClusterRole
            - RDSInstance
        alias:
          type: array
          items:
            title: Alias
            maxLength: 255
            minLength: 1
            type: string
    LabelMini:
      required:
        - name
      type: object
      properties:
        id:
          title: Id
          type: string
          format: uuid
          readOnly: true
        name:
          title: Name
          maxLength: 255
          minLength: 1
          pattern: '^[a-zA-Z0-9]+$'
          type: string
    GroupMini:
      required:
        - id
      type: object
      properties:
        id:
          title: Id
          type: string
          format: uuid
        name:
          title: Name
          minLength: 1
          type: string
          readOnly: true
    Region:
      required:
        - cloud_provider
        - name
      type: object
      properties:
        name:
          title: Name
          maxLength: 50
          minLength: 1
          type: string
        cloud_provider:
          title: Cloud provider
          maxLength: 50
          minLength: 1
          type: string
    Asset:
      required:
        - groups
        - label
        - monitors
        - name
        - region
        - type
      type: object
      properties:
        id:
          title: Id
          type: string
          format: uuid
          readOnly: true
        type:
          $ref: '#/components/schemas/AssetType'
        label:
          $ref: '#/components/schemas/LabelMini'
        vulnerabilities:
          title: Vulnerabilities
          type: string
          readOnly: true
        compliances:
          title: Compliances
          type: string
          readOnly: true
        hosts:
          title: Hosts
          type: string
          readOnly: true
        last_scan:
          title: Last scan
          type: string
          readOnly: true
        tickets:
          title: Tickets
          type: string
          readOnly: true
        parent:
          title: Parent
          type: string
          format: uuid
          nullable: true
        groups:
          type: array
          items:
            $ref: '#/components/schemas/GroupMini'
        targets:
          title: Targets
          type: string
          readOnly: true
        name:
          title: Name
          maxLength: 255
          minLength: 1
          type: string
        tags:
          title: Tags
          type: string
          readOnly: true
        baselines:
          title: Baselines
          type: string
          readOnly: true
        monitors:
          uniqueItems: true
          type: array
          items:
            type: string
            format: uuid
        audit_files:
          title: Audit files
          type: string
          readOnly: true
        data_types:
          title: Data types
          type: string
          readOnly: true
        data:
          title: Data
          type: object
          properties: {}
          nullable: true
        region:
          $ref: '#/components/schemas/Region'
    AssetMini:
      required:
        - name
        - type
      type: object
      properties:
        id:
          title: Id
          type: string
          format: uuid
          readOnly: true
        name:
          title: Name
          maxLength: 255
          minLength: 1
          type: string
        type:
          $ref: '#/components/schemas/AssetType'
    RelatedModelAssetGroup:
      type: object
      properties:
        id:
          title: Id
          minLength: 1
          type: string
        name:
          title: Name
          minLength: 1
          type: string
        ids:
          type: array
          items:
            type: string
            nullable: true
    Group:
      required:
        - assets
        - name
      type: object
      properties:
        id:
          title: Id
          type: string
          format: uuid
          readOnly: true
        tickets_count:
          title: Tickets count
          type: string
          readOnly: true
        compliances:
          title: Compliances
          type: string
          readOnly: true
        last_scan:
          title: Last scan
          type: string
          readOnly: true
        findings:
          title: Findings
          type: string
          readOnly: true
        tags:
          title: Tags
          type: string
          readOnly: true
        assets:
          uniqueItems: true
          type: array
          items:
            type: string
            format: uuid
        name:
          title: Name
          maxLength: 255
          minLength: 1
          type: string
        monitors:
          uniqueItems: true
          type: array
          readOnly: true
          items:
            type: string
            format: uuid
    TagList:
      required:
        - ids
      type: object
      properties:
        ids:
          type: array
          items:
            type: string
            nullable: true
    TokenRefreshSliding:
      required:
        - token
      type: object
      properties:
        token:
          title: Token
          minLength: 1
          type: string
    AWSCloudAccessKey:
      required:
        - access_key_id
        - label
        - region
        - secret_access_key
      type: object
      properties:
        id:
          title: Id
          type: string
          format: uuid
          readOnly: true
        enabled:
          title: Enabled
          type: boolean
          readOnly: true
        connected:
          title: Connected
          type: boolean
          readOnly: true
        schedule:
          title: Schedule
          required:
            - date
            - frequency
            - repeatEvery
            - start
            - timezone
          type: object
          properties:
            frequency:
              type: object
              properties:
                value:
                  title: Repeating range
                  type: string
                  description: The frequency of the repeating
                  enum:
                    - daily
                    - weekly
                    - monthly
            repeatEvery:
              type: object
              properties:
                value:
                  title: Repeating range
                  type: string
                  description: >-
                    The value to set the repeat time if
                    |frequency_value=monthly|repeatEvery=2| is selected,

                    then it repeats itself every 2 months
                  enum:
                    - '1'
                    - '2'
                    - '3'
                    - '4'
                    - '5'
            repeatOn:
              type: object
              properties:
                title:
                  type: object
                description:
                  type: object
                type:
                  type: object
                enum:
                  type: object
            start:
              type: object
              properties:
                title:
                  type: object
                description:
                  type: object
                type:
                  type: object
            timezone:
              type: object
              properties:
                value:
                  title: Timezone
                  type: string
                  description: The user's timezone
                  enum:
                    - Africa/Abidjan
                    - Africa/Accra
                    - Africa/Addis_Ababa
                    - Africa/Algiers
                    - Africa/Asmara
                    - Africa/Asmera
                    - Africa/Bamako
                    - Africa/Bangui
                    - Africa/Banjul
                    - Africa/Bissau
                    - Africa/Blantyre
                    - Africa/Brazzaville
                    - Africa/Bujumbura
                    - Africa/Cairo
                    - Africa/Casablanca
                    - Africa/Ceuta
                    - Africa/Conakry
                    - Africa/Dakar
                    - Africa/Dar_es_Salaam
                    - Africa/Djibouti
                    - Africa/Douala
                    - Africa/El_Aaiun
                    - Africa/Freetown
                    - Africa/Gaborone
                    - Africa/Harare
                    - Africa/Johannesburg
                    - Africa/Juba
                    - Africa/Kampala
                    - Africa/Khartoum
                    - Africa/Kigali
                    - Africa/Kinshasa
                    - Africa/Lagos
                    - Africa/Libreville
                    - Africa/Lome
                    - Africa/Luanda
                    - Africa/Lubumbashi
                    - Africa/Lusaka
                    - Africa/Malabo
                    - Africa/Maputo
                    - Africa/Maseru
                    - Africa/Mbabane
                    - Africa/Mogadishu
                    - Africa/Monrovia
                    - Africa/Nairobi
                    - Africa/Ndjamena
                    - Africa/Niamey
                    - Africa/Nouakchott
                    - Africa/Ouagadougou
                    - Africa/Porto-Novo
                    - Africa/Sao_Tome
                    - Africa/Timbuktu
                    - Africa/Tripoli
                    - Africa/Tunis
                    - Africa/Windhoek
                    - America/Adak
                    - America/Anchorage
                    - America/Anguilla
                    - America/Antigua
                    - America/Araguaina
                    - America/Argentina/Buenos_Aires
                    - America/Argentina/Catamarca
                    - America/Argentina/ComodRivadavia
                    - America/Argentina/Cordoba
                    - America/Argentina/Jujuy
                    - America/Argentina/La_Rioja
                    - America/Argentina/Mendoza
                    - America/Argentina/Rio_Gallegos
                    - America/Argentina/Salta
                    - America/Argentina/San_Juan
                    - America/Argentina/San_Luis
                    - America/Argentina/Tucuman
                    - America/Argentina/Ushuaia
                    - America/Aruba
                    - America/Asuncion
                    - America/Atikokan
                    - America/Atka
                    - America/Bahia
                    - America/Bahia_Banderas
                    - America/Barbados
                    - America/Belem
                    - America/Belize
                    - America/Blanc-Sablon
                    - America/Boa_Vista
                    - America/Bogota
                    - America/Boise
                    - America/Buenos_Aires
                    - America/Cambridge_Bay
                    - America/Campo_Grande
                    - America/Cancun
                    - America/Caracas
                    - America/Catamarca
                    - America/Cayenne
                    - America/Cayman
                    - America/Chicago
                    - America/Chihuahua
                    - America/Coral_Harbour
                    - America/Cordoba
                    - America/Costa_Rica
                    - America/Creston
                    - America/Cuiaba
                    - America/Curacao
                    - America/Danmarkshavn
                    - America/Dawson
                    - America/Dawson_Creek
                    - America/Denver
                    - America/Detroit
                    - America/Dominica
                    - America/Edmonton
                    - America/Eirunepe
                    - America/El_Salvador
                    - America/Ensenada
                    - America/Fort_Nelson
                    - America/Fort_Wayne
                    - America/Fortaleza
                    - America/Glace_Bay
                    - America/Godthab
                    - America/Goose_Bay
                    - America/Grand_Turk
                    - America/Grenada
                    - America/Guadeloupe
                    - America/Guatemala
                    - America/Guayaquil
                    - America/Guyana
                    - America/Halifax
                    - America/Havana
                    - America/Hermosillo
                    - America/Indiana/Indianapolis
                    - America/Indiana/Knox
                    - America/Indiana/Marengo
                    - America/Indiana/Petersburg
                    - America/Indiana/Tell_City
                    - America/Indiana/Vevay
                    - America/Indiana/Vincennes
                    - America/Indiana/Winamac
                    - America/Indianapolis
                    - America/Inuvik
                    - America/Iqaluit
                    - America/Jamaica
                    - America/Jujuy
                    - America/Juneau
                    - America/Kentucky/Louisville
                    - America/Kentucky/Monticello
                    - America/Knox_IN
                    - America/Kralendijk
                    - America/La_Paz
                    - America/Lima
                    - America/Los_Angeles
                    - America/Louisville
                    - America/Lower_Princes
                    - America/Maceio
                    - America/Managua
                    - America/Manaus
                    - America/Marigot
                    - America/Martinique
                    - America/Matamoros
                    - America/Mazatlan
                    - America/Mendoza
                    - America/Menominee
                    - America/Merida
                    - America/Metlakatla
                    - America/Mexico_City
                    - America/Miquelon
                    - America/Moncton
                    - America/Monterrey
                    - America/Montevideo
                    - America/Montreal
                    - America/Montserrat
                    - America/Nassau
                    - America/New_York
                    - America/Nipigon
                    - America/Nome
                    - America/Noronha
                    - America/North_Dakota/Beulah
                    - America/North_Dakota/Center
                    - America/North_Dakota/New_Salem
                    - America/Nuuk
                    - America/Ojinaga
                    - America/Panama
                    - America/Pangnirtung
                    - America/Paramaribo
                    - America/Phoenix
                    - America/Port-au-Prince
                    - America/Port_of_Spain
                    - America/Porto_Acre
                    - America/Porto_Velho
                    - America/Puerto_Rico
                    - America/Punta_Arenas
                    - America/Rainy_River
                    - America/Rankin_Inlet
                    - America/Recife
                    - America/Regina
                    - America/Resolute
                    - America/Rio_Branco
                    - America/Rosario
                    - America/Santa_Isabel
                    - America/Santarem
                    - America/Santiago
                    - America/Santo_Domingo
                    - America/Sao_Paulo
                    - America/Scoresbysund
                    - America/Shiprock
                    - America/Sitka
                    - America/St_Barthelemy
                    - America/St_Johns
                    - America/St_Kitts
                    - America/St_Lucia
                    - America/St_Thomas
                    - America/St_Vincent
                    - America/Swift_Current
                    - America/Tegucigalpa
                    - America/Thule
                    - America/Thunder_Bay
                    - America/Tijuana
                    - America/Toronto
                    - America/Tortola
                    - America/Vancouver
                    - America/Virgin
                    - America/Whitehorse
                    - America/Winnipeg
                    - America/Yakutat
                    - America/Yellowknife
                    - Antarctica/Casey
                    - Antarctica/Davis
                    - Antarctica/DumontDUrville
                    - Antarctica/Macquarie
                    - Antarctica/Mawson
                    - Antarctica/McMurdo
                    - Antarctica/Palmer
                    - Antarctica/Rothera
                    - Antarctica/South_Pole
                    - Antarctica/Syowa
                    - Antarctica/Troll
                    - Antarctica/Vostok
                    - Arctic/Longyearbyen
                    - Asia/Aden
                    - Asia/Almaty
                    - Asia/Amman
                    - Asia/Anadyr
                    - Asia/Aqtau
                    - Asia/Aqtobe
                    - Asia/Ashgabat
                    - Asia/Ashkhabad
                    - Asia/Atyrau
                    - Asia/Baghdad
                    - Asia/Bahrain
                    - Asia/Baku
                    - Asia/Bangkok
                    - Asia/Barnaul
                    - Asia/Beirut
                    - Asia/Bishkek
                    - Asia/Brunei
                    - Asia/Calcutta
                    - Asia/Chita
                    - Asia/Choibalsan
                    - Asia/Chongqing
                    - Asia/Chungking
                    - Asia/Colombo
                    - Asia/Dacca
                    - Asia/Damascus
                    - Asia/Dhaka
                    - Asia/Dili
                    - Asia/Dubai
                    - Asia/Dushanbe
                    - Asia/Famagusta
                    - Asia/Gaza
                    - Asia/Harbin
                    - Asia/Hebron
                    - Asia/Ho_Chi_Minh
                    - Asia/Hong_Kong
                    - Asia/Hovd
                    - Asia/Irkutsk
                    - Asia/Istanbul
                    - Asia/Jakarta
                    - Asia/Jayapura
                    - Asia/Jerusalem
                    - Asia/Kabul
                    - Asia/Kamchatka
                    - Asia/Karachi
                    - Asia/Kashgar
                    - Asia/Kathmandu
                    - Asia/Katmandu
                    - Asia/Khandyga
                    - Asia/Kolkata
                    - Asia/Krasnoyarsk
                    - Asia/Kuala_Lumpur
                    - Asia/Kuching
                    - Asia/Kuwait
                    - Asia/Macao
                    - Asia/Macau
                    - Asia/Magadan
                    - Asia/Makassar
                    - Asia/Manila
                    - Asia/Muscat
                    - Asia/Nicosia
                    - Asia/Novokuznetsk
                    - Asia/Novosibirsk
                    - Asia/Omsk
                    - Asia/Oral
                    - Asia/Phnom_Penh
                    - Asia/Pontianak
                    - Asia/Pyongyang
                    - Asia/Qatar
                    - Asia/Qostanay
                    - Asia/Qyzylorda
                    - Asia/Rangoon
                    - Asia/Riyadh
                    - Asia/Saigon
                    - Asia/Sakhalin
                    - Asia/Samarkand
                    - Asia/Seoul
                    - Asia/Shanghai
                    - Asia/Singapore
                    - Asia/Srednekolymsk
                    - Asia/Taipei
                    - Asia/Tashkent
                    - Asia/Tbilisi
                    - Asia/Tehran
                    - Asia/Tel_Aviv
                    - Asia/Thimbu
                    - Asia/Thimphu
                    - Asia/Tokyo
                    - Asia/Tomsk
                    - Asia/Ujung_Pandang
                    - Asia/Ulaanbaatar
                    - Asia/Ulan_Bator
                    - Asia/Urumqi
                    - Asia/Ust-Nera
                    - Asia/Vientiane
                    - Asia/Vladivostok
                    - Asia/Yakutsk
                    - Asia/Yangon
                    - Asia/Yekaterinburg
                    - Asia/Yerevan
                    - Atlantic/Azores
                    - Atlantic/Bermuda
                    - Atlantic/Canary
                    - Atlantic/Cape_Verde
                    - Atlantic/Faeroe
                    - Atlantic/Faroe
                    - Atlantic/Jan_Mayen
                    - Atlantic/Madeira
                    - Atlantic/Reykjavik
                    - Atlantic/South_Georgia
                    - Atlantic/St_Helena
                    - Atlantic/Stanley
                    - Australia/ACT
                    - Australia/Adelaide
                    - Australia/Brisbane
                    - Australia/Broken_Hill
                    - Australia/Canberra
                    - Australia/Currie
                    - Australia/Darwin
                    - Australia/Eucla
                    - Australia/Hobart
                    - Australia/LHI
                    - Australia/Lindeman
                    - Australia/Lord_Howe
                    - Australia/Melbourne
                    - Australia/NSW
                    - Australia/North
                    - Australia/Perth
                    - Australia/Queensland
                    - Australia/South
                    - Australia/Sydney
                    - Australia/Tasmania
                    - Australia/Victoria
                    - Australia/West
                    - Australia/Yancowinna
                    - Brazil/Acre
                    - Brazil/DeNoronha
                    - Brazil/East
                    - Brazil/West
                    - CET
                    - CST6CDT
                    - Canada/Atlantic
                    - Canada/Central
                    - Canada/Eastern
                    - Canada/Mountain
                    - Canada/Newfoundland
                    - Canada/Pacific
                    - Canada/Saskatchewan
                    - Canada/Yukon
                    - Chile/Continental
                    - Chile/EasterIsland
                    - Cuba
                    - EET
                    - EST
                    - EST5EDT
                    - Egypt
                    - Eire
                    - Etc/GMT
                    - Etc/GMT+0
                    - Etc/GMT+1
                    - Etc/GMT+10
                    - Etc/GMT+11
                    - Etc/GMT+12
                    - Etc/GMT+2
                    - Etc/GMT+3
                    - Etc/GMT+4
                    - Etc/GMT+5
                    - Etc/GMT+6
                    - Etc/GMT+7
                    - Etc/GMT+8
                    - Etc/GMT+9
                    - Etc/GMT-0
                    - Etc/GMT-1
                    - Etc/GMT-10
                    - Etc/GMT-11
                    - Etc/GMT-12
                    - Etc/GMT-13
                    - Etc/GMT-14
                    - Etc/GMT-2
                    - Etc/GMT-3
                    - Etc/GMT-4
                    - Etc/GMT-5
                    - Etc/GMT-6
                    - Etc/GMT-7
                    - Etc/GMT-8
                    - Etc/GMT-9
                    - Etc/GMT0
                    - Etc/Greenwich
                    - Etc/UCT
                    - Etc/UTC
                    - Etc/Universal
                    - Etc/Zulu
                    - Europe/Amsterdam
                    - Europe/Andorra
                    - Europe/Astrakhan
                    - Europe/Athens
                    - Europe/Belfast
                    - Europe/Belgrade
                    - Europe/Berlin
                    - Europe/Bratislava
                    - Europe/Brussels
                    - Europe/Bucharest
                    - Europe/Budapest
                    - Europe/Busingen
                    - Europe/Chisinau
                    - Europe/Copenhagen
                    - Europe/Dublin
                    - Europe/Gibraltar
                    - Europe/Guernsey
                    - Europe/Helsinki
                    - Europe/Isle_of_Man
                    - Europe/Istanbul
                    - Europe/Jersey
                    - Europe/Kaliningrad
                    - Europe/Kiev
                    - Europe/Kirov
                    - Europe/Kyiv
                    - Europe/Lisbon
                    - Europe/Ljubljana
                    - Europe/London
                    - Europe/Luxembourg
                    - Europe/Madrid
                    - Europe/Malta
                    - Europe/Mariehamn
                    - Europe/Minsk
                    - Europe/Monaco
                    - Europe/Moscow
                    - Europe/Nicosia
                    - Europe/Oslo
                    - Europe/Paris
                    - Europe/Podgorica
                    - Europe/Prague
                    - Europe/Riga
                    - Europe/Rome
                    - Europe/Samara
                    - Europe/San_Marino
                    - Europe/Sarajevo
                    - Europe/Saratov
                    - Europe/Simferopol
                    - Europe/Skopje
                    - Europe/Sofia
                    - Europe/Stockholm
                    - Europe/Tallinn
                    - Europe/Tirane
                    - Europe/Tiraspol
                    - Europe/Ulyanovsk
                    - Europe/Uzhgorod
                    - Europe/Vaduz
                    - Europe/Vatican
                    - Europe/Vienna
                    - Europe/Vilnius
                    - Europe/Volgograd
                    - Europe/Warsaw
                    - Europe/Zagreb
                    - Europe/Zaporozhye
                    - Europe/Zurich
                    - GB
                    - GB-Eire
                    - GMT
                    - GMT+0
                    - GMT-0
                    - GMT0
                    - Greenwich
                    - HST
                    - Hongkong
                    - Iceland
                    - Indian/Antananarivo
                    - Indian/Chagos
                    - Indian/Christmas
                    - Indian/Cocos
                    - Indian/Comoro
                    - Indian/Kerguelen
                    - Indian/Mahe
                    - Indian/Maldives
                    - Indian/Mauritius
                    - Indian/Mayotte
                    - Indian/Reunion
                    - Iran
                    - Israel
                    - Jamaica
                    - Japan
                    - Kwajalein
                    - Libya
                    - MET
                    - MST
                    - MST7MDT
                    - Mexico/BajaNorte
                    - Mexico/BajaSur
                    - Mexico/General
                    - NZ
                    - NZ-CHAT
                    - Navajo
                    - PRC
                    - PST8PDT
                    - Pacific/Apia
                    - Pacific/Auckland
                    - Pacific/Bougainville
                    - Pacific/Chatham
                    - Pacific/Chuuk
                    - Pacific/Easter
                    - Pacific/Efate
                    - Pacific/Enderbury
                    - Pacific/Fakaofo
                    - Pacific/Fiji
                    - Pacific/Funafuti
                    - Pacific/Galapagos
                    - Pacific/Gambier
                    - Pacific/Guadalcanal
                    - Pacific/Guam
                    - Pacific/Honolulu
                    - Pacific/Johnston
                    - Pacific/Kanton
                    - Pacific/Kiritimati
                    - Pacific/Kosrae
                    - Pacific/Kwajalein
                    - Pacific/Majuro
                    - Pacific/Marquesas
                    - Pacific/Midway
                    - Pacific/Nauru
                    - Pacific/Niue
                    - Pacific/Norfolk
                    - Pacific/Noumea
                    - Pacific/Pago_Pago
                    - Pacific/Palau
                    - Pacific/Pitcairn
                    - Pacific/Pohnpei
                    - Pacific/Ponape
                    - Pacific/Port_Moresby
                    - Pacific/Rarotonga
                    - Pacific/Saipan
                    - Pacific/Samoa
                    - Pacific/Tahiti
                    - Pacific/Tarawa
                    - Pacific/Tongatapu
                    - Pacific/Truk
                    - Pacific/Wake
                    - Pacific/Wallis
                    - Pacific/Yap
                    - Poland
                    - Portugal
                    - ROC
                    - ROK
                    - Singapore
                    - Turkey
                    - UCT
                    - US/Alaska
                    - US/Aleutian
                    - US/Arizona
                    - US/Central
                    - US/East-Indiana
                    - US/Eastern
                    - US/Hawaii
                    - US/Indiana-Starke
                    - US/Michigan
                    - US/Mountain
                    - US/Pacific
                    - US/Samoa
                    - UTC
                    - Universal
                    - W-SU
                    - WET
                    - Zulu
            date:
              type: object
              properties:
                title:
                  type: object
                description:
                  type: object
                type:
                  type: object
        secret_access_key:
          title: Secret access key
          minLength: 1
          type: string
        access_key_id:
          title: Access key id
          minLength: 1
          type: string
        region:
          type: array
          items:
            maxLength: 15
            minLength: 1
            type: string
        connect_date:
          title: Connect date
          type: string
          format: date-time
          readOnly: true
        enabled_date:
          title: Enabled date
          type: string
          format: date-time
          readOnly: true
        label:
          title: Label
          type: string
          format: uuid
        tag:
          title: Tag
          type: string
          format: uuid
          nullable: true
    AWSCloudManualSetup:
      required:
        - access_key_id
        - external_id
        - label
        - region
        - role_arn
        - secret_access_key
      type: object
      properties:
        id:
          title: Id
          type: string
          format: uuid
          readOnly: true
        enabled:
          title: Enabled
          type: boolean
          readOnly: true
        connected:
          title: Connected
          type: boolean
          readOnly: true
        schedule:
          title: Schedule
          required:
            - date
            - frequency
            - repeatEvery
            - start
            - timezone
          type: object
          properties:
            frequency:
              type: object
              properties:
                value:
                  title: Repeating range
                  type: string
                  description: The frequency of the repeating
                  enum:
                    - daily
                    - weekly
                    - monthly
            repeatEvery:
              type: object
              properties:
                value:
                  title: Repeating range
                  type: string
                  description: >-
                    The value to set the repeat time if
                    |frequency_value=monthly|repeatEvery=2| is selected,

                    then it repeats itself every 2 months
                  enum:
                    - '1'
                    - '2'
                    - '3'
                    - '4'
                    - '5'
            repeatOn:
              type: object
              properties:
                title:
                  type: object
                description:
                  type: object
                type:
                  type: object
                enum:
                  type: object
            start:
              type: object
              properties:
                title:
                  type: object
                description:
                  type: object
                type:
                  type: object
            timezone:
              type: object
              properties:
                value:
                  title: Timezone
                  type: string
                  description: The user's timezone
                  enum:
                    - Africa/Abidjan
                    - Africa/Accra
                    - Africa/Addis_Ababa
                    - Africa/Algiers
                    - Africa/Asmara
                    - Africa/Asmera
                    - Africa/Bamako
                    - Africa/Bangui
                    - Africa/Banjul
                    - Africa/Bissau
                    - Africa/Blantyre
                    - Africa/Brazzaville
                    - Africa/Bujumbura
                    - Africa/Cairo
                    - Africa/Casablanca
                    - Africa/Ceuta
                    - Africa/Conakry
                    - Africa/Dakar
                    - Africa/Dar_es_Salaam
                    - Africa/Djibouti
                    - Africa/Douala
                    - Africa/El_Aaiun
                    - Africa/Freetown
                    - Africa/Gaborone
                    - Africa/Harare
                    - Africa/Johannesburg
                    - Africa/Juba
                    - Africa/Kampala
                    - Africa/Khartoum
                    - Africa/Kigali
                    - Africa/Kinshasa
                    - Africa/Lagos
                    - Africa/Libreville
                    - Africa/Lome
                    - Africa/Luanda
                    - Africa/Lubumbashi
                    - Africa/Lusaka
                    - Africa/Malabo
                    - Africa/Maputo
                    - Africa/Maseru
                    - Africa/Mbabane
                    - Africa/Mogadishu
                    - Africa/Monrovia
                    - Africa/Nairobi
                    - Africa/Ndjamena
                    - Africa/Niamey
                    - Africa/Nouakchott
                    - Africa/Ouagadougou
                    - Africa/Porto-Novo
                    - Africa/Sao_Tome
                    - Africa/Timbuktu
                    - Africa/Tripoli
                    - Africa/Tunis
                    - Africa/Windhoek
                    - America/Adak
                    - America/Anchorage
                    - America/Anguilla
                    - America/Antigua
                    - America/Araguaina
                    - America/Argentina/Buenos_Aires
                    - America/Argentina/Catamarca
                    - America/Argentina/ComodRivadavia
                    - America/Argentina/Cordoba
                    - America/Argentina/Jujuy
                    - America/Argentina/La_Rioja
                    - America/Argentina/Mendoza
                    - America/Argentina/Rio_Gallegos
                    - America/Argentina/Salta
                    - America/Argentina/San_Juan
                    - America/Argentina/San_Luis
                    - America/Argentina/Tucuman
                    - America/Argentina/Ushuaia
                    - America/Aruba
                    - America/Asuncion
                    - America/Atikokan
                    - America/Atka
                    - America/Bahia
                    - America/Bahia_Banderas
                    - America/Barbados
                    - America/Belem
                    - America/Belize
                    - America/Blanc-Sablon
                    - America/Boa_Vista
                    - America/Bogota
                    - America/Boise
                    - America/Buenos_Aires
                    - America/Cambridge_Bay
                    - America/Campo_Grande
                    - America/Cancun
                    - America/Caracas
                    - America/Catamarca
                    - America/Cayenne
                    - America/Cayman
                    - America/Chicago
                    - America/Chihuahua
                    - America/Coral_Harbour
                    - America/Cordoba
                    - America/Costa_Rica
                    - America/Creston
                    - America/Cuiaba
                    - America/Curacao
                    - America/Danmarkshavn
                    - America/Dawson
                    - America/Dawson_Creek
                    - America/Denver
                    - America/Detroit
                    - America/Dominica
                    - America/Edmonton
                    - America/Eirunepe
                    - America/El_Salvador
                    - America/Ensenada
                    - America/Fort_Nelson
                    - America/Fort_Wayne
                    - America/Fortaleza
                    - America/Glace_Bay
                    - America/Godthab
                    - America/Goose_Bay
                    - America/Grand_Turk
                    - America/Grenada
                    - America/Guadeloupe
                    - America/Guatemala
                    - America/Guayaquil
                    - America/Guyana
                    - America/Halifax
                    - America/Havana
                    - America/Hermosillo
                    - America/Indiana/Indianapolis
                    - America/Indiana/Knox
                    - America/Indiana/Marengo
                    - America/Indiana/Petersburg
                    - America/Indiana/Tell_City
                    - America/Indiana/Vevay
                    - America/Indiana/Vincennes
                    - America/Indiana/Winamac
                    - America/Indianapolis
                    - America/Inuvik
                    - America/Iqaluit
                    - America/Jamaica
                    - America/Jujuy
                    - America/Juneau
                    - America/Kentucky/Louisville
                    - America/Kentucky/Monticello
                    - America/Knox_IN
                    - America/Kralendijk
                    - America/La_Paz
                    - America/Lima
                    - America/Los_Angeles
                    - America/Louisville
                    - America/Lower_Princes
                    - America/Maceio
                    - America/Managua
                    - America/Manaus
                    - America/Marigot
                    - America/Martinique
                    - America/Matamoros
                    - America/Mazatlan
                    - America/Mendoza
                    - America/Menominee
                    - America/Merida
                    - America/Metlakatla
                    - America/Mexico_City
                    - America/Miquelon
                    - America/Moncton
                    - America/Monterrey
                    - America/Montevideo
                    - America/Montreal
                    - America/Montserrat
                    - America/Nassau
                    - America/New_York
                    - America/Nipigon
                    - America/Nome
                    - America/Noronha
                    - America/North_Dakota/Beulah
                    - America/North_Dakota/Center
                    - America/North_Dakota/New_Salem
                    - America/Nuuk
                    - America/Ojinaga
                    - America/Panama
                    - America/Pangnirtung
                    - America/Paramaribo
                    - America/Phoenix
                    - America/Port-au-Prince
                    - America/Port_of_Spain
                    - America/Porto_Acre
                    - America/Porto_Velho
                    - America/Puerto_Rico
                    - America/Punta_Arenas
                    - America/Rainy_River
                    - America/Rankin_Inlet
                    - America/Recife
                    - America/Regina
                    - America/Resolute
                    - America/Rio_Branco
                    - America/Rosario
                    - America/Santa_Isabel
                    - America/Santarem
                    - America/Santiago
                    - America/Santo_Domingo
                    - America/Sao_Paulo
                    - America/Scoresbysund
                    - America/Shiprock
                    - America/Sitka
                    - America/St_Barthelemy
                    - America/St_Johns
                    - America/St_Kitts
                    - America/St_Lucia
                    - America/St_Thomas
                    - America/St_Vincent
                    - America/Swift_Current
                    - America/Tegucigalpa
                    - America/Thule
                    - America/Thunder_Bay
                    - America/Tijuana
                    - America/Toronto
                    - America/Tortola
                    - America/Vancouver
                    - America/Virgin
                    - America/Whitehorse
                    - America/Winnipeg
                    - America/Yakutat
                    - America/Yellowknife
                    - Antarctica/Casey
                    - Antarctica/Davis
                    - Antarctica/DumontDUrville
                    - Antarctica/Macquarie
                    - Antarctica/Mawson
                    - Antarctica/McMurdo
                    - Antarctica/Palmer
                    - Antarctica/Rothera
                    - Antarctica/South_Pole
                    - Antarctica/Syowa
                    - Antarctica/Troll
                    - Antarctica/Vostok
                    - Arctic/Longyearbyen
                    - Asia/Aden
                    - Asia/Almaty
                    - Asia/Amman
                    - Asia/Anadyr
                    - Asia/Aqtau
                    - Asia/Aqtobe
                    - Asia/Ashgabat
                    - Asia/Ashkhabad
                    - Asia/Atyrau
                    - Asia/Baghdad
                    - Asia/Bahrain
                    - Asia/Baku
                    - Asia/Bangkok
                    - Asia/Barnaul
                    - Asia/Beirut
                    - Asia/Bishkek
                    - Asia/Brunei
                    - Asia/Calcutta
                    - Asia/Chita
                    - Asia/Choibalsan
                    - Asia/Chongqing
                    - Asia/Chungking
                    - Asia/Colombo
                    - Asia/Dacca
                    - Asia/Damascus
                    - Asia/Dhaka
                    - Asia/Dili
                    - Asia/Dubai
                    - Asia/Dushanbe
                    - Asia/Famagusta
                    - Asia/Gaza
                    - Asia/Harbin
                    - Asia/Hebron
                    - Asia/Ho_Chi_Minh
                    - Asia/Hong_Kong
                    - Asia/Hovd
                    - Asia/Irkutsk
                    - Asia/Istanbul
                    - Asia/Jakarta
                    - Asia/Jayapura
                    - Asia/Jerusalem
                    - Asia/Kabul
                    - Asia/Kamchatka
                    - Asia/Karachi
                    - Asia/Kashgar
                    - Asia/Kathmandu
                    - Asia/Katmandu
                    - Asia/Khandyga
                    - Asia/Kolkata
                    - Asia/Krasnoyarsk
                    - Asia/Kuala_Lumpur
                    - Asia/Kuching
                    - Asia/Kuwait
                    - Asia/Macao
                    - Asia/Macau
                    - Asia/Magadan
                    - Asia/Makassar
                    - Asia/Manila
                    - Asia/Muscat
                    - Asia/Nicosia
                    - Asia/Novokuznetsk
                    - Asia/Novosibirsk
                    - Asia/Omsk
                    - Asia/Oral
                    - Asia/Phnom_Penh
                    - Asia/Pontianak
                    - Asia/Pyongyang
                    - Asia/Qatar
                    - Asia/Qostanay
                    - Asia/Qyzylorda
                    - Asia/Rangoon
                    - Asia/Riyadh
                    - Asia/Saigon
                    - Asia/Sakhalin
                    - Asia/Samarkand
                    - Asia/Seoul
                    - Asia/Shanghai
                    - Asia/Singapore
                    - Asia/Srednekolymsk
                    - Asia/Taipei
                    - Asia/Tashkent
                    - Asia/Tbilisi
                    - Asia/Tehran
                    - Asia/Tel_Aviv
                    - Asia/Thimbu
                    - Asia/Thimphu
                    - Asia/Tokyo
                    - Asia/Tomsk
                    - Asia/Ujung_Pandang
                    - Asia/Ulaanbaatar
                    - Asia/Ulan_Bator
                    - Asia/Urumqi
                    - Asia/Ust-Nera
                    - Asia/Vientiane
                    - Asia/Vladivostok
                    - Asia/Yakutsk
                    - Asia/Yangon
                    - Asia/Yekaterinburg
                    - Asia/Yerevan
                    - Atlantic/Azores
                    - Atlantic/Bermuda
                    - Atlantic/Canary
                    - Atlantic/Cape_Verde
                    - Atlantic/Faeroe
                    - Atlantic/Faroe
                    - Atlantic/Jan_Mayen
                    - Atlantic/Madeira
                    - Atlantic/Reykjavik
                    - Atlantic/South_Georgia
                    - Atlantic/St_Helena
                    - Atlantic/Stanley
                    - Australia/ACT
                    - Australia/Adelaide
                    - Australia/Brisbane
                    - Australia/Broken_Hill
                    - Australia/Canberra
                    - Australia/Currie
                    - Australia/Darwin
                    - Australia/Eucla
                    - Australia/Hobart
                    - Australia/LHI
                    - Australia/Lindeman
                    - Australia/Lord_Howe
                    - Australia/Melbourne
                    - Australia/NSW
                    - Australia/North
                    - Australia/Perth
                    - Australia/Queensland
                    - Australia/South
                    - Australia/Sydney
                    - Australia/Tasmania
                    - Australia/Victoria
                    - Australia/West
                    - Australia/Yancowinna
                    - Brazil/Acre
                    - Brazil/DeNoronha
                    - Brazil/East
                    - Brazil/West
                    - CET
                    - CST6CDT
                    - Canada/Atlantic
                    - Canada/Central
                    - Canada/Eastern
                    - Canada/Mountain
                    - Canada/Newfoundland
                    - Canada/Pacific
                    - Canada/Saskatchewan
                    - Canada/Yukon
                    - Chile/Continental
                    - Chile/EasterIsland
                    - Cuba
                    - EET
                    - EST
                    - EST5EDT
                    - Egypt
                    - Eire
                    - Etc/GMT
                    - Etc/GMT+0
                    - Etc/GMT+1
                    - Etc/GMT+10
                    - Etc/GMT+11
                    - Etc/GMT+12
                    - Etc/GMT+2
                    - Etc/GMT+3
                    - Etc/GMT+4
                    - Etc/GMT+5
                    - Etc/GMT+6
                    - Etc/GMT+7
                    - Etc/GMT+8
                    - Etc/GMT+9
                    - Etc/GMT-0
                    - Etc/GMT-1
                    - Etc/GMT-10
                    - Etc/GMT-11
                    - Etc/GMT-12
                    - Etc/GMT-13
                    - Etc/GMT-14
                    - Etc/GMT-2
                    - Etc/GMT-3
                    - Etc/GMT-4
                    - Etc/GMT-5
                    - Etc/GMT-6
                    - Etc/GMT-7
                    - Etc/GMT-8
                    - Etc/GMT-9
                    - Etc/GMT0
                    - Etc/Greenwich
                    - Etc/UCT
                    - Etc/UTC
                    - Etc/Universal
                    - Etc/Zulu
                    - Europe/Amsterdam
                    - Europe/Andorra
                    - Europe/Astrakhan
                    - Europe/Athens
                    - Europe/Belfast
                    - Europe/Belgrade
                    - Europe/Berlin
                    - Europe/Bratislava
                    - Europe/Brussels
                    - Europe/Bucharest
                    - Europe/Budapest
                    - Europe/Busingen
                    - Europe/Chisinau
                    - Europe/Copenhagen
                    - Europe/Dublin
                    - Europe/Gibraltar
                    - Europe/Guernsey
                    - Europe/Helsinki
                    - Europe/Isle_of_Man
                    - Europe/Istanbul
                    - Europe/Jersey
                    - Europe/Kaliningrad
                    - Europe/Kiev
                    - Europe/Kirov
                    - Europe/Kyiv
                    - Europe/Lisbon
                    - Europe/Ljubljana
                    - Europe/London
                    - Europe/Luxembourg
                    - Europe/Madrid
                    - Europe/Malta
                    - Europe/Mariehamn
                    - Europe/Minsk
                    - Europe/Monaco
                    - Europe/Moscow
                    - Europe/Nicosia
                    - Europe/Oslo
                    - Europe/Paris
                    - Europe/Podgorica
                    - Europe/Prague
                    - Europe/Riga
                    - Europe/Rome
                    - Europe/Samara
                    - Europe/San_Marino
                    - Europe/Sarajevo
                    - Europe/Saratov
                    - Europe/Simferopol
                    - Europe/Skopje
                    - Europe/Sofia
                    - Europe/Stockholm
                    - Europe/Tallinn
                    - Europe/Tirane
                    - Europe/Tiraspol
                    - Europe/Ulyanovsk
                    - Europe/Uzhgorod
                    - Europe/Vaduz
                    - Europe/Vatican
                    - Europe/Vienna
                    - Europe/Vilnius
                    - Europe/Volgograd
                    - Europe/Warsaw
                    - Europe/Zagreb
                    - Europe/Zaporozhye
                    - Europe/Zurich
                    - GB
                    - GB-Eire
                    - GMT
                    - GMT+0
                    - GMT-0
                    - GMT0
                    - Greenwich
                    - HST
                    - Hongkong
                    - Iceland
                    - Indian/Antananarivo
                    - Indian/Chagos
                    - Indian/Christmas
                    - Indian/Cocos
                    - Indian/Comoro
                    - Indian/Kerguelen
                    - Indian/Mahe
                    - Indian/Maldives
                    - Indian/Mauritius
                    - Indian/Mayotte
                    - Indian/Reunion
                    - Iran
                    - Israel
                    - Jamaica
                    - Japan
                    - Kwajalein
                    - Libya
                    - MET
                    - MST
                    - MST7MDT
                    - Mexico/BajaNorte
                    - Mexico/BajaSur
                    - Mexico/General
                    - NZ
                    - NZ-CHAT
                    - Navajo
                    - PRC
                    - PST8PDT
                    - Pacific/Apia
                    - Pacific/Auckland
                    - Pacific/Bougainville
                    - Pacific/Chatham
                    - Pacific/Chuuk
                    - Pacific/Easter
                    - Pacific/Efate
                    - Pacific/Enderbury
                    - Pacific/Fakaofo
                    - Pacific/Fiji
                    - Pacific/Funafuti
                    - Pacific/Galapagos
                    - Pacific/Gambier
                    - Pacific/Guadalcanal
                    - Pacific/Guam
                    - Pacific/Honolulu
                    - Pacific/Johnston
                    - Pacific/Kanton
                    - Pacific/Kiritimati
                    - Pacific/Kosrae
                    - Pacific/Kwajalein
                    - Pacific/Majuro
                    - Pacific/Marquesas
                    - Pacific/Midway
                    - Pacific/Nauru
                    - Pacific/Niue
                    - Pacific/Norfolk
                    - Pacific/Noumea
                    - Pacific/Pago_Pago
                    - Pacific/Palau
                    - Pacific/Pitcairn
                    - Pacific/Pohnpei
                    - Pacific/Ponape
                    - Pacific/Port_Moresby
                    - Pacific/Rarotonga
                    - Pacific/Saipan
                    - Pacific/Samoa
                    - Pacific/Tahiti
                    - Pacific/Tarawa
                    - Pacific/Tongatapu
                    - Pacific/Truk
                    - Pacific/Wake
                    - Pacific/Wallis
                    - Pacific/Yap
                    - Poland
                    - Portugal
                    - ROC
                    - ROK
                    - Singapore
                    - Turkey
                    - UCT
                    - US/Alaska
                    - US/Aleutian
                    - US/Arizona
                    - US/Central
                    - US/East-Indiana
                    - US/Eastern
                    - US/Hawaii
                    - US/Indiana-Starke
                    - US/Michigan
                    - US/Mountain
                    - US/Pacific
                    - US/Samoa
                    - UTC
                    - Universal
                    - W-SU
                    - WET
                    - Zulu
            date:
              type: object
              properties:
                title:
                  type: object
                description:
                  type: object
                type:
                  type: object
        secret_access_key:
          title: Secret access key
          minLength: 1
          type: string
        access_key_id:
          title: Access key id
          minLength: 1
          type: string
        external_id:
          title: External id
          minLength: 1
          type: string
        role_arn:
          title: Role arn
          minLength: 1
          type: string
        region:
          type: array
          items:
            type: string
            nullable: true
        connect_date:
          title: Connect date
          type: string
          format: date-time
          readOnly: true
        enabled_date:
          title: Enabled date
          type: string
          format: date-time
          readOnly: true
        label:
          title: Label
          type: string
          format: uuid
        tag:
          title: Tag
          type: string
          format: uuid
          nullable: true
    AzureCloud:
      required:
        - application_id
        - directory_id
        - key_value
        - label
        - subscription_id
      type: object
      properties:
        id:
          title: Id
          type: string
          format: uuid
          readOnly: true
        enabled:
          title: Enabled
          type: boolean
          readOnly: true
        connected:
          title: Connected
          type: boolean
          readOnly: true
        schedule:
          title: Schedule
          required:
            - date
            - frequency
            - repeatEvery
            - start
            - timezone
          type: object
          properties:
            frequency:
              type: object
              properties:
                value:
                  title: Repeating range
                  type: string
                  description: The frequency of the repeating
                  enum:
                    - daily
                    - weekly
                    - monthly
            repeatEvery:
              type: object
              properties:
                value:
                  title: Repeating range
                  type: string
                  description: >-
                    The value to set the repeat time if
                    |frequency_value=monthly|repeatEvery=2| is selected,

                    then it repeats itself every 2 months
                  enum:
                    - '1'
                    - '2'
                    - '3'
                    - '4'
                    - '5'
            repeatOn:
              type: object
              properties:
                title:
                  type: object
                description:
                  type: object
                type:
                  type: object
                enum:
                  type: object
            start:
              type: object
              properties:
                title:
                  type: object
                description:
                  type: object
                type:
                  type: object
            timezone:
              type: object
              properties:
                value:
                  title: Timezone
                  type: string
                  description: The user's timezone
                  enum:
                    - Africa/Abidjan
                    - Africa/Accra
                    - Africa/Addis_Ababa
                    - Africa/Algiers
                    - Africa/Asmara
                    - Africa/Asmera
                    - Africa/Bamako
                    - Africa/Bangui
                    - Africa/Banjul
                    - Africa/Bissau
                    - Africa/Blantyre
                    - Africa/Brazzaville
                    - Africa/Bujumbura
                    - Africa/Cairo
                    - Africa/Casablanca
                    - Africa/Ceuta
                    - Africa/Conakry
                    - Africa/Dakar
                    - Africa/Dar_es_Salaam
                    - Africa/Djibouti
                    - Africa/Douala
                    - Africa/El_Aaiun
                    - Africa/Freetown
                    - Africa/Gaborone
                    - Africa/Harare
                    - Africa/Johannesburg
                    - Africa/Juba
                    - Africa/Kampala
                    - Africa/Khartoum
                    - Africa/Kigali
                    - Africa/Kinshasa
                    - Africa/Lagos
                    - Africa/Libreville
                    - Africa/Lome
                    - Africa/Luanda
                    - Africa/Lubumbashi
                    - Africa/Lusaka
                    - Africa/Malabo
                    - Africa/Maputo
                    - Africa/Maseru
                    - Africa/Mbabane
                    - Africa/Mogadishu
                    - Africa/Monrovia
                    - Africa/Nairobi
                    - Africa/Ndjamena
                    - Africa/Niamey
                    - Africa/Nouakchott
                    - Africa/Ouagadougou
                    - Africa/Porto-Novo
                    - Africa/Sao_Tome
                    - Africa/Timbuktu
                    - Africa/Tripoli
                    - Africa/Tunis
                    - Africa/Windhoek
                    - America/Adak
                    - America/Anchorage
                    - America/Anguilla
                    - America/Antigua
                    - America/Araguaina
                    - America/Argentina/Buenos_Aires
                    - America/Argentina/Catamarca
                    - America/Argentina/ComodRivadavia
                    - America/Argentina/Cordoba
                    - America/Argentina/Jujuy
                    - America/Argentina/La_Rioja
                    - America/Argentina/Mendoza
                    - America/Argentina/Rio_Gallegos
                    - America/Argentina/Salta
                    - America/Argentina/San_Juan
                    - America/Argentina/San_Luis
                    - America/Argentina/Tucuman
                    - America/Argentina/Ushuaia
                    - America/Aruba
                    - America/Asuncion
                    - America/Atikokan
                    - America/Atka
                    - America/Bahia
                    - America/Bahia_Banderas
                    - America/Barbados
                    - America/Belem
                    - America/Belize
                    - America/Blanc-Sablon
                    - America/Boa_Vista
                    - America/Bogota
                    - America/Boise
                    - America/Buenos_Aires
                    - America/Cambridge_Bay
                    - America/Campo_Grande
                    - America/Cancun
                    - America/Caracas
                    - America/Catamarca
                    - America/Cayenne
                    - America/Cayman
                    - America/Chicago
                    - America/Chihuahua
                    - America/Coral_Harbour
                    - America/Cordoba
                    - America/Costa_Rica
                    - America/Creston
                    - America/Cuiaba
                    - America/Curacao
                    - America/Danmarkshavn
                    - America/Dawson
                    - America/Dawson_Creek
                    - America/Denver
                    - America/Detroit
                    - America/Dominica
                    - America/Edmonton
                    - America/Eirunepe
                    - America/El_Salvador
                    - America/Ensenada
                    - America/Fort_Nelson
                    - America/Fort_Wayne
                    - America/Fortaleza
                    - America/Glace_Bay
                    - America/Godthab
                    - America/Goose_Bay
                    - America/Grand_Turk
                    - America/Grenada
                    - America/Guadeloupe
                    - America/Guatemala
                    - America/Guayaquil
                    - America/Guyana
                    - America/Halifax
                    - America/Havana
                    - America/Hermosillo
                    - America/Indiana/Indianapolis
                    - America/Indiana/Knox
                    - America/Indiana/Marengo
                    - America/Indiana/Petersburg
                    - America/Indiana/Tell_City
                    - America/Indiana/Vevay
                    - America/Indiana/Vincennes
                    - America/Indiana/Winamac
                    - America/Indianapolis
                    - America/Inuvik
                    - America/Iqaluit
                    - America/Jamaica
                    - America/Jujuy
                    - America/Juneau
                    - America/Kentucky/Louisville
                    - America/Kentucky/Monticello
                    - America/Knox_IN
                    - America/Kralendijk
                    - America/La_Paz
                    - America/Lima
                    - America/Los_Angeles
                    - America/Louisville
                    - America/Lower_Princes
                    - America/Maceio
                    - America/Managua
                    - America/Manaus
                    - America/Marigot
                    - America/Martinique
                    - America/Matamoros
                    - America/Mazatlan
                    - America/Mendoza
                    - America/Menominee
                    - America/Merida
                    - America/Metlakatla
                    - America/Mexico_City
                    - America/Miquelon
                    - America/Moncton
                    - America/Monterrey
                    - America/Montevideo
                    - America/Montreal
                    - America/Montserrat
                    - America/Nassau
                    - America/New_York
                    - America/Nipigon
                    - America/Nome
                    - America/Noronha
                    - America/North_Dakota/Beulah
                    - America/North_Dakota/Center
                    - America/North_Dakota/New_Salem
                    - America/Nuuk
                    - America/Ojinaga
                    - America/Panama
                    - America/Pangnirtung
                    - America/Paramaribo
                    - America/Phoenix
                    - America/Port-au-Prince
                    - America/Port_of_Spain
                    - America/Porto_Acre
                    - America/Porto_Velho
                    - America/Puerto_Rico
                    - America/Punta_Arenas
                    - America/Rainy_River
                    - America/Rankin_Inlet
                    - America/Recife
                    - America/Regina
                    - America/Resolute
                    - America/Rio_Branco
                    - America/Rosario
                    - America/Santa_Isabel
                    - America/Santarem
                    - America/Santiago
                    - America/Santo_Domingo
                    - America/Sao_Paulo
                    - America/Scoresbysund
                    - America/Shiprock
                    - America/Sitka
                    - America/St_Barthelemy
                    - America/St_Johns
                    - America/St_Kitts
                    - America/St_Lucia
                    - America/St_Thomas
                    - America/St_Vincent
                    - America/Swift_Current
                    - America/Tegucigalpa
                    - America/Thule
                    - America/Thunder_Bay
                    - America/Tijuana
                    - America/Toronto
                    - America/Tortola
                    - America/Vancouver
                    - America/Virgin
                    - America/Whitehorse
                    - America/Winnipeg
                    - America/Yakutat
                    - America/Yellowknife
                    - Antarctica/Casey
                    - Antarctica/Davis
                    - Antarctica/DumontDUrville
                    - Antarctica/Macquarie
                    - Antarctica/Mawson
                    - Antarctica/McMurdo
                    - Antarctica/Palmer
                    - Antarctica/Rothera
                    - Antarctica/South_Pole
                    - Antarctica/Syowa
                    - Antarctica/Troll
                    - Antarctica/Vostok
                    - Arctic/Longyearbyen
                    - Asia/Aden
                    - Asia/Almaty
                    - Asia/Amman
                    - Asia/Anadyr
                    - Asia/Aqtau
                    - Asia/Aqtobe
                    - Asia/Ashgabat
                    - Asia/Ashkhabad
                    - Asia/Atyrau
                    - Asia/Baghdad
                    - Asia/Bahrain
                    - Asia/Baku
                    - Asia/Bangkok
                    - Asia/Barnaul
                    - Asia/Beirut
                    - Asia/Bishkek
                    - Asia/Brunei
                    - Asia/Calcutta
                    - Asia/Chita
                    - Asia/Choibalsan
                    - Asia/Chongqing
                    - Asia/Chungking
                    - Asia/Colombo
                    - Asia/Dacca
                    - Asia/Damascus
                    - Asia/Dhaka
                    - Asia/Dili
                    - Asia/Dubai
                    - Asia/Dushanbe
                    - Asia/Famagusta
                    - Asia/Gaza
                    - Asia/Harbin
                    - Asia/Hebron
                    - Asia/Ho_Chi_Minh
                    - Asia/Hong_Kong
                    - Asia/Hovd
                    - Asia/Irkutsk
                    - Asia/Istanbul
                    - Asia/Jakarta
                    - Asia/Jayapura
                    - Asia/Jerusalem
                    - Asia/Kabul
                    - Asia/Kamchatka
                    - Asia/Karachi
                    - Asia/Kashgar
                    - Asia/Kathmandu
                    - Asia/Katmandu
                    - Asia/Khandyga
                    - Asia/Kolkata
                    - Asia/Krasnoyarsk
                    - Asia/Kuala_Lumpur
                    - Asia/Kuching
                    - Asia/Kuwait
                    - Asia/Macao
                    - Asia/Macau
                    - Asia/Magadan
                    - Asia/Makassar
                    - Asia/Manila
                    - Asia/Muscat
                    - Asia/Nicosia
                    - Asia/Novokuznetsk
                    - Asia/Novosibirsk
                    - Asia/Omsk
                    - Asia/Oral
                    - Asia/Phnom_Penh
                    - Asia/Pontianak
                    - Asia/Pyongyang
                    - Asia/Qatar
                    - Asia/Qostanay
                    - Asia/Qyzylorda
                    - Asia/Rangoon
                    - Asia/Riyadh
                    - Asia/Saigon
                    - Asia/Sakhalin
                    - Asia/Samarkand
                    - Asia/Seoul
                    - Asia/Shanghai
                    - Asia/Singapore
                    - Asia/Srednekolymsk
                    - Asia/Taipei
                    - Asia/Tashkent
                    - Asia/Tbilisi
                    - Asia/Tehran
                    - Asia/Tel_Aviv
                    - Asia/Thimbu
                    - Asia/Thimphu
                    - Asia/Tokyo
                    - Asia/Tomsk
                    - Asia/Ujung_Pandang
                    - Asia/Ulaanbaatar
                    - Asia/Ulan_Bator
                    - Asia/Urumqi
                    - Asia/Ust-Nera
                    - Asia/Vientiane
                    - Asia/Vladivostok
                    - Asia/Yakutsk
                    - Asia/Yangon
                    - Asia/Yekaterinburg
                    - Asia/Yerevan
                    - Atlantic/Azores
                    - Atlantic/Bermuda
                    - Atlantic/Canary
                    - Atlantic/Cape_Verde
                    - Atlantic/Faeroe
                    - Atlantic/Faroe
                    - Atlantic/Jan_Mayen
                    - Atlantic/Madeira
                    - Atlantic/Reykjavik
                    - Atlantic/South_Georgia
                    - Atlantic/St_Helena
                    - Atlantic/Stanley
                    - Australia/ACT
                    - Australia/Adelaide
                    - Australia/Brisbane
                    - Australia/Broken_Hill
                    - Australia/Canberra
                    - Australia/Currie
                    - Australia/Darwin
                    - Australia/Eucla
                    - Australia/Hobart
                    - Australia/LHI
                    - Australia/Lindeman
                    - Australia/Lord_Howe
                    - Australia/Melbourne
                    - Australia/NSW
                    - Australia/North
                    - Australia/Perth
                    - Australia/Queensland
                    - Australia/South
                    - Australia/Sydney
                    - Australia/Tasmania
                    - Australia/Victoria
                    - Australia/West
                    - Australia/Yancowinna
                    - Brazil/Acre
                    - Brazil/DeNoronha
                    - Brazil/East
                    - Brazil/West
                    - CET
                    - CST6CDT
                    - Canada/Atlantic
                    - Canada/Central
                    - Canada/Eastern
                    - Canada/Mountain
                    - Canada/Newfoundland
                    - Canada/Pacific
                    - Canada/Saskatchewan
                    - Canada/Yukon
                    - Chile/Continental
                    - Chile/EasterIsland
                    - Cuba
                    - EET
                    - EST
                    - EST5EDT
                    - Egypt
                    - Eire
                    - Etc/GMT
                    - Etc/GMT+0
                    - Etc/GMT+1
                    - Etc/GMT+10
                    - Etc/GMT+11
                    - Etc/GMT+12
                    - Etc/GMT+2
                    - Etc/GMT+3
                    - Etc/GMT+4
                    - Etc/GMT+5
                    - Etc/GMT+6
                    - Etc/GMT+7
                    - Etc/GMT+8
                    - Etc/GMT+9
                    - Etc/GMT-0
                    - Etc/GMT-1
                    - Etc/GMT-10
                    - Etc/GMT-11
                    - Etc/GMT-12
                    - Etc/GMT-13
                    - Etc/GMT-14
                    - Etc/GMT-2
                    - Etc/GMT-3
                    - Etc/GMT-4
                    - Etc/GMT-5
                    - Etc/GMT-6
                    - Etc/GMT-7
                    - Etc/GMT-8
                    - Etc/GMT-9
                    - Etc/GMT0
                    - Etc/Greenwich
                    - Etc/UCT
                    - Etc/UTC
                    - Etc/Universal
                    - Etc/Zulu
                    - Europe/Amsterdam
                    - Europe/Andorra
                    - Europe/Astrakhan
                    - Europe/Athens
                    - Europe/Belfast
                    - Europe/Belgrade
                    - Europe/Berlin
                    - Europe/Bratislava
                    - Europe/Brussels
                    - Europe/Bucharest
                    - Europe/Budapest
                    - Europe/Busingen
                    - Europe/Chisinau
                    - Europe/Copenhagen
                    - Europe/Dublin
                    - Europe/Gibraltar
                    - Europe/Guernsey
                    - Europe/Helsinki
                    - Europe/Isle_of_Man
                    - Europe/Istanbul
                    - Europe/Jersey
                    - Europe/Kaliningrad
                    - Europe/Kiev
                    - Europe/Kirov
                    - Europe/Kyiv
                    - Europe/Lisbon
                    - Europe/Ljubljana
                    - Europe/London
                    - Europe/Luxembourg
                    - Europe/Madrid
                    - Europe/Malta
                    - Europe/Mariehamn
                    - Europe/Minsk
                    - Europe/Monaco
                    - Europe/Moscow
                    - Europe/Nicosia
                    - Europe/Oslo
                    - Europe/Paris
                    - Europe/Podgorica
                    - Europe/Prague
                    - Europe/Riga
                    - Europe/Rome
                    - Europe/Samara
                    - Europe/San_Marino
                    - Europe/Sarajevo
                    - Europe/Saratov
                    - Europe/Simferopol
                    - Europe/Skopje
                    - Europe/Sofia
                    - Europe/Stockholm
                    - Europe/Tallinn
                    - Europe/Tirane
                    - Europe/Tiraspol
                    - Europe/Ulyanovsk
                    - Europe/Uzhgorod
                    - Europe/Vaduz
                    - Europe/Vatican
                    - Europe/Vienna
                    - Europe/Vilnius
                    - Europe/Volgograd
                    - Europe/Warsaw
                    - Europe/Zagreb
                    - Europe/Zaporozhye
                    - Europe/Zurich
                    - GB
                    - GB-Eire
                    - GMT
                    - GMT+0
                    - GMT-0
                    - GMT0
                    - Greenwich
                    - HST
                    - Hongkong
                    - Iceland
                    - Indian/Antananarivo
                    - Indian/Chagos
                    - Indian/Christmas
                    - Indian/Cocos
                    - Indian/Comoro
                    - Indian/Kerguelen
                    - Indian/Mahe
                    - Indian/Maldives
                    - Indian/Mauritius
                    - Indian/Mayotte
                    - Indian/Reunion
                    - Iran
                    - Israel
                    - Jamaica
                    - Japan
                    - Kwajalein
                    - Libya
                    - MET
                    - MST
                    - MST7MDT
                    - Mexico/BajaNorte
                    - Mexico/BajaSur
                    - Mexico/General
                    - NZ
                    - NZ-CHAT
                    - Navajo
                    - PRC
                    - PST8PDT
                    - Pacific/Apia
                    - Pacific/Auckland
                    - Pacific/Bougainville
                    - Pacific/Chatham
                    - Pacific/Chuuk
                    - Pacific/Easter
                    - Pacific/Efate
                    - Pacific/Enderbury
                    - Pacific/Fakaofo
                    - Pacific/Fiji
                    - Pacific/Funafuti
                    - Pacific/Galapagos
                    - Pacific/Gambier
                    - Pacific/Guadalcanal
                    - Pacific/Guam
                    - Pacific/Honolulu
                    - Pacific/Johnston
                    - Pacific/Kanton
                    - Pacific/Kiritimati
                    - Pacific/Kosrae
                    - Pacific/Kwajalein
                    - Pacific/Majuro
                    - Pacific/Marquesas
                    - Pacific/Midway
                    - Pacific/Nauru
                    - Pacific/Niue
                    - Pacific/Norfolk
                    - Pacific/Noumea
                    - Pacific/Pago_Pago
                    - Pacific/Palau
                    - Pacific/Pitcairn
                    - Pacific/Pohnpei
                    - Pacific/Ponape
                    - Pacific/Port_Moresby
                    - Pacific/Rarotonga
                    - Pacific/Saipan
                    - Pacific/Samoa
                    - Pacific/Tahiti
                    - Pacific/Tarawa
                    - Pacific/Tongatapu
                    - Pacific/Truk
                    - Pacific/Wake
                    - Pacific/Wallis
                    - Pacific/Yap
                    - Poland
                    - Portugal
                    - ROC
                    - ROK
                    - Singapore
                    - Turkey
                    - UCT
                    - US/Alaska
                    - US/Aleutian
                    - US/Arizona
                    - US/Central
                    - US/East-Indiana
                    - US/Eastern
                    - US/Hawaii
                    - US/Indiana-Starke
                    - US/Michigan
                    - US/Mountain
                    - US/Pacific
                    - US/Samoa
                    - UTC
                    - Universal
                    - W-SU
                    - WET
                    - Zulu
            date:
              type: object
              properties:
                title:
                  type: object
                description:
                  type: object
                type:
                  type: object
        application_id:
          title: Application id
          minLength: 1
          type: string
        key_value:
          title: Key value
          minLength: 1
          type: string
        subscription_id:
          title: Subscription id
          minLength: 1
          type: string
        directory_id:
          title: Directory id
          minLength: 1
          type: string
        connect_date:
          title: Connect date
          type: string
          format: date-time
          readOnly: true
        enabled_date:
          title: Enabled date
          type: string
          format: date-time
          readOnly: true
        label:
          title: Label
          type: string
          format: uuid
        tag:
          title: Tag
          type: string
          format: uuid
          nullable: true
    BaselineAnalysis:
      required:
        - baseline
        - failed_assets
        - missing_data_assets
        - passed_assets
        - result
        - scan
      type: object
      properties:
        id:
          title: Id
          type: string
          format: uuid
          readOnly: true
        date:
          title: Date
          type: string
          format: date-time
          readOnly: true
        result:
          title: Result
          type: object
          properties: {}
        baseline:
          title: Baseline
          type: string
          format: uuid
        scan:
          title: Scan
          type: string
          format: uuid
        passed_assets:
          uniqueItems: true
          type: array
          items:
            type: string
            format: uuid
        failed_assets:
          uniqueItems: true
          type: array
          items:
            type: string
            format: uuid
        missing_data_assets:
          uniqueItems: true
          type: array
          items:
            type: string
            format: uuid
    BaselineAnalysisMini:
      required:
        - failed_assets
        - missing_data_assets
        - passed_assets
      type: object
      properties:
        id:
          title: Id
          type: string
          format: uuid
          readOnly: true
        date:
          title: Date
          type: string
          format: date-time
          readOnly: true
        passed_assets:
          uniqueItems: true
          type: array
          items:
            type: string
            format: uuid
        failed_assets:
          uniqueItems: true
          type: array
          items:
            type: string
            format: uuid
        missing_data_assets:
          uniqueItems: true
          type: array
          items:
            type: string
            format: uuid
    TagLite:
      required:
        - value
      type: object
      properties:
        id:
          title: Id
          type: string
          format: uuid
          readOnly: true
        value:
          title: Value
          maxLength: 255
          minLength: 1
          type: string
        data_type:
          title: Data type
          type: string
          default: Divy
          enum:
            - Sensor
            - Divy
    BaselineTag:
      required:
        - baseline
        - control
      type: object
      properties:
        id:
          title: Id
          type: string
          format: uuid
          readOnly: true
        expected_result:
          title: Expected result
          type: string
          enum:
            - PASSED
            - FAILED
            - WARNING
            - ERROR
            - ''
        expected_value:
          type: array
          items:
            title: Expected value
            minLength: 1
            type: string
        tags:
          title: Tags
          type: object
          properties: {}
          nullable: true
        control:
          title: Control
          type: string
          format: uuid
        baseline:
          title: Baseline
          type: string
          format: uuid
        tag:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/TagLite'
    Baseline:
      required:
        - audit_files
        - name
      type: object
      properties:
        id:
          title: Id
          type: string
          format: uuid
          readOnly: true
        name:
          title: Name
          maxLength: 255
          minLength: 1
          type: string
        creation_date:
          title: Creation date
          type: string
          format: date
          readOnly: true
        source:
          title: Source
          type: string
          default: Nessus
          enum:
            - Nessus
            - Nipper CIS
            - Nipper STIG
            - Prowler
            - Security Hub
            - Stig
            - KubeBench
            - CloudSploit
        assets:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/AssetMini'
        assets_passed:
          title: Assets passed
          type: string
          readOnly: true
        missing_data_assets:
          uniqueItems: true
          type: array
          items:
            type: string
            format: uuid
        failed_assets:
          uniqueItems: true
          type: array
          items:
            type: string
            format: uuid
        last_comment:
          title: Last comment
          type: string
          readOnly: true
        tickets:
          title: Tickets
          type: string
          readOnly: true
        audit_files:
          type: array
          items:
            title: Audit files
            maxLength: 255
            minLength: 1
            type: string
        failed_groups:
          uniqueItems: true
          type: array
          items:
            type: string
            format: uuid
        groups:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/Group'
        tags:
          title: Tags
          type: string
          readOnly: true
        filter_fields:
          type: array
          nullable: true
          items:
            title: Filter fields
            maxLength: 64
            minLength: 1
            type: string
        display_fields:
          type: array
          nullable: true
          items:
            title: Display fields
            maxLength: 64
            minLength: 1
            type: string
        table_properties:
          title: Table properties
          type: object
          properties: {}
        filter_fields_options:
          title: Filter fields options
          type: string
          readOnly: true
        display_fields_options:
          title: Display fields options
          type: string
          readOnly: true
        group_by_fields:
          title: Group by fields
          type: string
          readOnly: true
        result_value:
          title: Result value
          type: boolean
        label:
          title: Label
          type: string
          format: uuid
          nullable: true
    AssetID:
      required:
        - group
      type: object
      properties:
        group:
          title: Group
          type: string
          format: uuid
    GroupID:
      required:
        - group
      type: object
      properties:
        group:
          title: Group
          type: string
          format: uuid
    CommentMini:
      required:
        - comment
      type: object
      properties:
        id:
          title: Id
          type: string
          format: uuid
          readOnly: true
        comment:
          title: Comment
          minLength: 1
          type: string
        user:
          title: User
          type: string
          readOnly: true
        created:
          title: Created
          type: string
          format: date-time
          readOnly: true
    TicketFinding:
      required:
        - comments
        - title
      type: object
      properties:
        id:
          title: Id
          type: string
          format: uuid
          readOnly: true
        title:
          title: Title
          minLength: 1
          type: string
        comments:
          type: array
          items:
            $ref: '#/components/schemas/CommentMini'
    Control:
      required:
        - audit_file
        - control
        - control_id
        - description
        - hash
        - origin_scored
        - scored
        - sub_control
      type: object
      properties:
        id:
          title: Id
          type: string
          format: uuid
          readOnly: true
        tickets:
          title: Tickets
          type: string
          readOnly: true
        active:
          title: Active
          type: string
          readOnly: true
        tags:
          title: Tags
          type: string
          readOnly: true
        result:
          title: Result
          type: string
          readOnly: true
        actual_value:
          title: Actual value
          type: string
          readOnly: true
        group_ids:
          title: Group ids
          type: string
          readOnly: true
        check:
          title: Check
          type: string
          readOnly: true
        compliance:
          title: Compliance
          type: string
          readOnly: true
        cloud_provider:
          title: Cloud provider
          type: string
          readOnly: true
        account_id:
          title: Account id
          type: string
          readOnly: true
        region:
          title: Region
          type: string
          readOnly: true
        resource:
          title: Resource
          type: string
          readOnly: true
        source:
          title: Source
          type: string
          enum:
            - Nessus
            - Nipper CIS
            - Nipper STIG
            - Prowler
            - Security Hub
            - Stig
            - KubeBench
            - CloudSploit
        control_id:
          title: Control id
          maxLength: 128
          minLength: 1
          type: string
        control:
          title: Control
          minLength: 1
          type: string
        sub_control:
          title: Sub control
          type: string
          nullable: true
        audit_file:
          title: Audit file
          maxLength: 255
          minLength: 1
          type: string
        description:
          title: Description
          minLength: 1
          type: string
        info:
          title: Info
          type: string
          nullable: true
        scored:
          title: Scored
          type: boolean
        origin_scored:
          title: Origin scored
          minLength: 1
          type: string
        solution:
          title: Solution
          type: string
          nullable: true
        check_value:
          title: Check value
          type: string
          nullable: true
        misc:
          title: Misc
          type: object
          properties: {}
          nullable: true
        hash:
          title: Hash
          maxLength: 64
          minLength: 1
          type: string
        assets:
          uniqueItems: true
          type: array
          items:
            type: string
            format: uuid
    BaselineTagBatch:
      required:
        - baseline_id
        - control_ids
      type: object
      properties:
        id:
          title: Id
          type: string
          format: uuid
          readOnly: true
        expected_result:
          title: Expected result
          type: string
          enum:
            - PASSED
            - FAILED
            - WARNING
            - ERROR
            - ''
        expected_value:
          type: array
          items:
            title: Expected value
            minLength: 1
            type: string
        tags:
          title: Tags
          type: object
          properties: {}
          nullable: true
        control_ids:
          type: array
          items:
            type: string
            nullable: true
        baseline_id:
          title: Baseline id
          type: string
          format: uuid
        control:
          $ref: '#/components/schemas/Control'
        baseline:
          $ref: '#/components/schemas/Baseline'
    CategoryPermissions:
      required:
        - name
      type: object
      properties:
        id:
          title: Id
          type: string
          format: uuid
          readOnly: true
        name:
          title: Name
          maxLength: 100
          minLength: 1
          type: string
    ScanDate:
      required:
        - scan_date
      type: object
      properties:
        id:
          title: Id
          type: string
          format: uuid
          readOnly: true
        scan_date:
          title: Scan date
          type: string
          format: date-time
    Check:
      required:
        - actual_value
        - result
      type: object
      properties:
        id:
          title: Id
          type: string
          format: uuid
          readOnly: true
        asset:
          $ref: '#/components/schemas/Asset'
        control:
          $ref: '#/components/schemas/Control'
        scan:
          $ref: '#/components/schemas/ScanDate'
        actual_value:
          title: Actual value
          minLength: 1
          type: string
        result:
          title: Result
          maxLength: 64
          minLength: 1
          type: string
        misc:
          title: Misc
          type: object
          properties: {}
    ComplianceType:
      required:
        - compliance_type
      type: object
      properties:
        compliance_type:
          title: Compliance type
          maxLength: 100
          minLength: 1
          type: string
    ControlCompliance:
      required:
        - compliance
        - control_id
        - description
      type: object
      properties:
        id:
          title: Id
          type: string
          format: uuid
          readOnly: true
        control_id:
          title: Control id
          maxLength: 128
          minLength: 1
          type: string
        compliance:
          type: array
          items:
            $ref: '#/components/schemas/ComplianceType'
        description:
          title: Description
          minLength: 1
          type: string
        solution:
          title: Solution
          type: string
          nullable: true
        info:
          title: Info
          type: string
          nullable: true
        misc:
          title: Misc
          type: object
          properties: {}
          nullable: true
        sub_control:
          title: Sub control
          type: string
          nullable: true
    ComplianceSummary:
      required:
        - asset
        - asset_resource_id
        - control
        - control_id
        - region
        - result
      type: object
      properties:
        result:
          title: Result
          minLength: 1
          type: string
        region:
          title: Region
          minLength: 1
          type: string
        asset_resource_id:
          title: Asset resource id
          minLength: 1
          type: string
        control:
          $ref: '#/components/schemas/ControlCompliance'
        asset:
          title: Asset
          minLength: 1
          type: string
        control_id:
          title: Control id
          type: integer
    Client:
      required:
        - name
      type: object
      properties:
        id:
          title: ID
          type: integer
          readOnly: true
        name:
          title: Name
          maxLength: 100
          minLength: 1
          type: string
    Cloud:
      required:
        - cloud_name
        - cloud_type
        - hvac_path
        - label
        - name
      type: object
      properties:
        id:
          title: Id
          type: string
          format: uuid
          readOnly: true
        last_execution_date:
          title: Last execution date
          type: string
          readOnly: true
        last_scan_date:
          title: Last scan date
          type: string
          readOnly: true
        name:
          title: Name
          maxLength: 255
          minLength: 1
          type: string
        hvac_path:
          title: Hvac path
          maxLength: 255
          minLength: 1
          pattern: '^[-a-zA-Z0-9_]+$'
          type: string
          format: slug
        enabled:
          title: Enabled
          type: boolean
        connected:
          title: Connected
          type: boolean
        connect_date:
          title: Connect date
          type: string
          format: date-time
          readOnly: true
        enabled_date:
          title: Enabled date
          type: string
          format: date-time
          readOnly: true
        cloud_type:
          title: Cloud type
          type: string
          enum:
            - azure
            - gcp
            - aws
            - aws_assume
        cloud_name:
          title: Cloud name
          maxLength: 50
          minLength: 1
          type: string
        schedule:
          title: Schedule
          type: object
          properties: {}
        label:
          title: Label
          type: string
          format: uuid
        tag:
          title: Tag
          type: string
          format: uuid
          nullable: true
    CommentAnalysis:
      required:
        - regex
      type: object
      properties:
        id:
          title: Id
          type: string
          format: uuid
          readOnly: true
        regex:
          title: Regex
          maxLength: 200
          minLength: 1
          type: string
        status:
          title: Status
          type: string
          enum:
            - Active
            - Exception Requested
            - Fixed
            - In Progress
            - Potential
            - Waiting for 3rd Party
            - Waiting for Verification
            - Accepted Risk
            - Duplicate
            - Exception Granted
            - False Positive
            - Mitigated
        description:
          title: Description
          type: string
          nullable: true
        ticket_configuration:
          title: Ticket configuration
          type: string
          format: uuid
          nullable: true
    ConditionMappingsInline:
      required:
        - function_variable
      type: object
      properties:
        id:
          title: Id
          type: string
          format: uuid
          readOnly: true
        function_variable:
          title: Function variable
          type: string
          format: uuid
        function_variable_name:
          title: Function variable name
          type: string
          readOnly: true
        variable:
          title: Variable
          type: string
          format: uuid
          nullable: true
        variable_name:
          title: Variable name
          type: string
          readOnly: true
        redis_variable_value:
          title: Redis variable value
          type: boolean
    Condition:
      required:
        - condition
        - name
        - variables
      type: object
      properties:
        id:
          title: Id
          type: string
          format: uuid
          readOnly: true
        variables:
          type: array
          items:
            $ref: '#/components/schemas/ConditionMappingsInline'
        name:
          title: Name
          maxLength: 254
          minLength: 1
          type: string
        condition:
          title: Condition
          maxLength: 254
          minLength: 1
          type: string
    ConnectWiseProfile:
      required:
        - client_id
        - company_id
        - name
        - private_key
        - public_key
        - url
      type: object
      properties:
        id:
          title: Id
          type: string
          format: uuid
          readOnly: true
        client_id:
          title: Client id
          minLength: 1
          type: string
        private_key:
          title: Private key
          minLength: 1
          type: string
        name:
          title: Name
          minLength: 1
          type: string
        last_sync:
          title: Last sync
          type: string
          format: date-time
          readOnly: true
        connected:
          title: Connected
          type: boolean
          readOnly: true
        url:
          title: Connect Wise Domain
          maxLength: 200
          minLength: 1
          type: string
          format: uri
        company_id:
          title: Company id
          maxLength: 100
          minLength: 1
          type: string
        public_key:
          title: Public key
          maxLength: 100
          minLength: 1
          type: string
    Datalist:
      required:
        - asset
        - data
        - hash
        - last_seen
        - scans
      type: object
      properties:
        id:
          title: Id
          type: string
          format: uuid
          readOnly: true
        scan:
          $ref: '#/components/schemas/ScanDate'
        asset:
          $ref: '#/components/schemas/AssetMini'
        target:
          title: Target
          type: string
          readOnly: true
        tickets_count:
          title: Tickets count
          type: integer
          readOnly: true
        monitors:
          title: Monitors
          type: integer
          readOnly: true
        data_type:
          title: Data type
          type: string
          enum:
            - nessus_port
            - masscan_port
            - vendor
            - bios
            - dce
            - feature
            - groups
            - mac
            - os
            - services
            - smb
            - software
            - ssl
            - wireless
            - bitlocker
            - users
            - admins
            - nipper_config
            - languages
            - drooopescan_themes
            - drooopescan_plugins
            - droopescan_versions
            - droopescan_urls
            - lambdas
            - http_options
            - trivy
            - sonatype
            - objects
            - permissions
            - tags
            - replication
            - jobs
            - shodan
            - domains
            - hostnames
            - ssl_tls_verions
            - http_components
            - elastic_ip
            - private_ip
            - workspace_ip
            - metadata
            - sensitive_data
            - malware_data
            - history_metadata
            - ips
            - security_rule
            - password_policies
            - resource_group
            - ingress_rule
            - egress_rule
            - workspace_data
            - iam_user_data
            - inline_policy_stmt
            - attached_policy_stmt
            - env_vars
            - code
            - aws_tag
            - region
        data:
          title: Data
          type: object
          properties: {}
        hash:
          title: Hash
          maxLength: 64
          minLength: 1
          type: string
        history:
          type: array
          nullable: true
          items:
            title: History
            type: object
            properties: {}
        date_discovered:
          title: Date discovered
          type: string
          format: date-time
          readOnly: true
        last_seen:
          title: Last seen
          type: string
          format: date-time
        scans:
          uniqueItems: true
          type: array
          items:
            type: string
            format: uuid
    DataListConfig:
      required:
        - name
      type: object
      properties:
        id:
          title: Id
          type: string
          format: uuid
          readOnly: true
        asset:
          $ref: '#/components/schemas/AssetMini'
        asset_id:
          title: Asset id
          type: string
          format: uuid
          nullable: true
        target:
          title: Target
          type: string
          readOnly: true
        target_id:
          title: Target id
          type: string
          format: uuid
          nullable: true
        name:
          title: Name
          maxLength: 256
          minLength: 1
          type: string
        data_type:
          title: Data type
          type: string
          nullable: true
          enum:
            - nessus_port
            - masscan_port
            - vendor
            - bios
            - dce
            - feature
            - groups
            - mac
            - os
            - services
            - smb
            - software
            - ssl
            - wireless
            - bitlocker
            - users
            - admins
            - nipper_config
            - languages
            - drooopescan_themes
            - drooopescan_plugins
            - droopescan_versions
            - droopescan_urls
            - lambdas
            - http_options
            - trivy
            - sonatype
            - objects
            - permissions
            - tags
            - replication
            - jobs
            - shodan
            - domains
            - hostnames
            - ssl_tls_verions
            - http_components
            - elastic_ip
            - private_ip
            - workspace_ip
            - metadata
            - sensitive_data
            - malware_data
            - history_metadata
            - ips
            - security_rule
            - password_policies
            - resource_group
            - ingress_rule
            - egress_rule
            - workspace_data
            - iam_user_data
            - inline_policy_stmt
            - attached_policy_stmt
            - env_vars
            - code
            - aws_tag
            - region
        filter_fields:
          type: array
          nullable: true
          items:
            title: Filter fields
            maxLength: 64
            minLength: 1
            type: string
        display_fields:
          type: array
          nullable: true
          items:
            title: Display fields
            maxLength: 64
            minLength: 1
            type: string
        table_properties:
          title: Table properties
          type: object
          properties: {}
    DatalistMini:
      required:
        - name
      type: object
      properties:
        id:
          title: Id
          type: string
          format: uuid
          readOnly: true
        name:
          title: Name
          minLength: 1
          type: string
    RelatedModelAssetTarget:
      required:
        - ids
        - mapping
      type: object
      properties:
        id:
          title: Id
          minLength: 1
          type: string
        name:
          title: Name
          minLength: 1
          type: string
        target_type:
          title: Target type
          type: string
          format: uuid
        ids:
          type: array
          items:
            type: string
            nullable: true
        mapping:
          type: array
          items:
            type: string
            nullable: true
    Target:
      required:
        - name
      type: object
      properties:
        id:
          title: Id
          type: string
          format: uuid
          readOnly: true
        name:
          title: Name
          maxLength: 255
          minLength: 1
          type: string
        note:
          title: Note
          maxLength: 255
          type: string
          nullable: true
        data_list:
          title: Data list
          type: object
          properties: {}
          nullable: true
        misc:
          title: Misc
          type: object
          properties: {}
          nullable: true
        label:
          title: Label
          type: string
          format: uuid
          nullable: true
        target_type:
          title: Target type
          type: string
          format: uuid
          nullable: true
        groups:
          uniqueItems: true
          type: array
          items:
            type: string
            format: uuid
        assets:
          uniqueItems: true
          type: array
          items:
            type: string
            format: uuid
    EmailProfile:
      required:
        - from_email
        - host
        - name
        - port
        - secret
        - username
      type: object
      properties:
        id:
          title: Id
          type: string
          format: uuid
          readOnly: true
        name:
          title: Name
          minLength: 1
          type: string
        host:
          title: Host
          maxLength: 128
          minLength: 1
          type: string
        port:
          title: Port
          maximum: 2147483647
          minimum: 0
          type: integer
        username:
          title: Username
          maxLength: 128
          minLength: 1
          type: string
        use_tls:
          title: Use tls
          type: boolean
          default: false
        use_ssl:
          title: Use ssl
          type: boolean
          default: false
        from_email:
          title: From email
          maxLength: 128
          minLength: 1
          type: string
          format: email
        secret:
          title: Secret
          minLength: 1
          type: string
        last_sync:
          title: Last sync
          type: string
          format: date-time
          readOnly: true
    ExpectedVariable:
      required:
        - function
        - name
      type: object
      properties:
        id:
          title: Id
          type: string
          format: uuid
          readOnly: true
        full_name:
          title: Full name
          type: string
          readOnly: true
        name:
          title: Name
          maxLength: 256
          minLength: 1
          type: string
        function:
          title: Function
          type: string
          format: uuid
    FindingComment:
      required:
        - finding
      type: object
      properties:
        id:
          title: Id
          type: string
          format: uuid
          readOnly: true
        display_name:
          title: Display name
          type: string
          readOnly: true
        external_key:
          title: External key
          maxLength: 30
          type: string
          nullable: true
        username:
          title: Username
          maxLength: 256
          type: string
          nullable: true
        html_text:
          title: Html text
          minLength: 1
          type: string
        markdown_text:
          title: Markdown text
          minLength: 1
          type: string
        created_at:
          title: Created at
          type: string
          format: date-time
          readOnly: true
        user:
          title: User
          type: integer
          nullable: true
        finding:
          title: Finding
          type: string
          format: uuid
    VulnerabilityRetrieve:
      required:
        - description
        - name
        - solution
      type: object
      properties:
        id:
          title: Id
          type: string
          format: uuid
          readOnly: true
        tags:
          title: Tags
          type: string
          readOnly: true
        data_type:
          title: Data type
          type: string
          enum:
            - nessus
            - nipper
            - nipper_cis
            - nipper_stig
            - nipper_security
            - vulners
            - vulndb
            - fortify
            - sonarqube
            - burp
            - zap
            - package
            - cloc
            - clair
            - droopescan
            - veracode
            - securityhub
            - lambdaguard
            - trivy
            - sonatype
            - shodan
            - kubehunter
            - kube rbac
            - kubebench
            - snyk
            - cloudsploit
        name:
          title: Name
          minLength: 1
          type: string
        description:
          title: Description
          minLength: 1
          type: string
        risk_factor:
          title: Risk factor
          type: string
          enum:
            - Unknown
            - Informational
            - Low
            - Medium
            - High
            - Critical
        origin_risk_factor:
          title: Origin risk factor
          minLength: 1
          type: string
          readOnly: true
        solution:
          title: Solution
          minLength: 1
          type: string
        identification_numbers:
          type: array
          nullable: true
          items:
            title: Identification numbers
            maxLength: 20
            minLength: 1
            type: string
        references:
          type: array
          nullable: true
          items:
            title: References
            minLength: 1
            type: string
        cvss_score:
          title: Cvss score
          type: string
          format: decimal
          nullable: true
        exploit_available:
          title: Exploit available
          type: boolean
        misc:
          title: Misc
          type: object
          properties: {}
          nullable: true
    FindingList:
      required:
        - last_seen
        - location
      type: object
      properties:
        id:
          title: Id
          type: string
          format: uuid
          readOnly: true
        date_discovered:
          title: Date discovered
          type: string
          format: date-time
          readOnly: true
        last_seen:
          title: Last seen
          type: string
          format: date-time
        vulnerability:
          $ref: '#/components/schemas/VulnerabilityRetrieve'
        tool_output:
          title: Tool output
          type: string
          nullable: true
        location:
          title: Location
          maxLength: 255
          minLength: 1
          type: string
        status:
          title: Status
          type: string
          enum:
            - Active
            - Exception Requested
            - Fixed
            - In Progress
            - Potential
            - Waiting for 3rd Party
            - Waiting for Verification
            - Accepted Risk
            - Duplicate
            - Exception Granted
            - False Positive
            - Mitigated
        tickets:
          title: Tickets
          type: string
          description: Returns a list of tickets ids
          readOnly: true
        asset:
          $ref: '#/components/schemas/AssetMini'
        ignored:
          title: Ignored
          type: boolean
        tags:
          title: Tags
          type: string
          readOnly: true
        misc:
          title: Misc
          type: object
          properties: {}
          nullable: true
        group_ids:
          title: Group ids
          type: string
          readOnly: true
        last_comment:
          title: Last comment
          type: string
          readOnly: true
        last_ticket_age:
          title: Last ticket age
          type: string
          readOnly: true
        is_new:
          title: Is new
          type: string
          readOnly: true
        closed_tickets_count:
          title: Closed tickets count
          type: string
          readOnly: true
    FindingLite:
      required:
        - asset
      type: object
      properties:
        id:
          title: Id
          type: string
          format: uuid
          readOnly: true
        name:
          title: Name
          type: string
          readOnly: true
        asset:
          $ref: '#/components/schemas/AssetMini'
        ignored:
          title: Ignored
          type: boolean
        status:
          title: Status
          type: string
          enum:
            - Active
            - Exception Requested
            - Fixed
            - In Progress
            - Potential
            - Waiting for 3rd Party
            - Waiting for Verification
            - Accepted Risk
            - Duplicate
            - Exception Granted
            - False Positive
            - Mitigated
    FindingTag:
      required:
        - ids
      type: object
      properties:
        id:
          title: Id
          minLength: 1
          type: string
        name:
          title: Name
          minLength: 1
          type: string
        ids:
          type: array
          items:
            type: string
            nullable: true
    FindingAssetsResponseDocs:
      type: object
      properties:
        hosts:
          title: Hosts
          type: integer
          readOnly: true
        devices:
          title: Devices
          type: integer
          readOnly: true
        containers:
          title: Containers
          type: integer
          readOnly: true
        web_apps:
          title: Web apps
          type: integer
          readOnly: true
        aws_accounts:
          title: Aws accounts
          type: integer
          readOnly: true
        software:
          title: Software
          type: integer
          readOnly: true
    FindingIgnore:
      required:
        - finding_ids
      type: object
      properties:
        finding_ids:
          type: array
          items:
            type: string
            nullable: true
    FindingSeverityResponseDocs:
      type: object
      properties:
        medium:
          title: Medium
          type: integer
          readOnly: true
        low:
          title: Low
          type: integer
          readOnly: true
        high:
          title: High
          type: integer
          readOnly: true
        critical:
          title: Critical
          type: integer
          readOnly: true
    FindingTicketsResponseDocs:
      type: object
      properties:
        opened:
          title: Opened
          type: integer
          readOnly: true
        ongoing:
          title: Ongoing
          type: integer
          readOnly: true
        closed:
          title: Closed
          type: integer
          readOnly: true
    FindingStatus:
      required:
        - finding_ids
        - status
      type: object
      properties:
        finding_ids:
          type: array
          items:
            type: string
            nullable: true
        status:
          title: Status
          type: string
          enum:
            - Active
            - Exception Requested
            - Fixed
            - In Progress
            - Potential
            - Waiting for 3rd Party
            - Waiting for Verification
            - Accepted Risk
            - Duplicate
            - Exception Granted
            - False Positive
            - Mitigated
    FindingRetrieve:
      required:
        - last_seen
        - location
      type: object
      properties:
        id:
          title: Id
          type: string
          format: uuid
          readOnly: true
        date_discovered:
          title: Date discovered
          type: string
          format: date-time
          readOnly: true
        last_seen:
          title: Last seen
          type: string
          format: date-time
        vulnerability:
          $ref: '#/components/schemas/VulnerabilityRetrieve'
        tool_output:
          title: Tool output
          type: string
          nullable: true
        location:
          title: Location
          maxLength: 255
          minLength: 1
          type: string
        status:
          title: Status
          type: string
          enum:
            - Active
            - Exception Requested
            - Fixed
            - In Progress
            - Potential
            - Waiting for 3rd Party
            - Waiting for Verification
            - Accepted Risk
            - Duplicate
            - Exception Granted
            - False Positive
            - Mitigated
        tickets:
          title: Tickets
          type: string
          description: Returns a list of tickets ids
          readOnly: true
        asset:
          $ref: '#/components/schemas/AssetMini'
        ignored:
          title: Ignored
          type: boolean
        tags:
          title: Tags
          type: string
          readOnly: true
        misc:
          title: Misc
          type: object
          properties: {}
          nullable: true
    FindingUpdate:
      type: object
      properties:
        status:
          title: Status
          type: string
          enum:
            - Active
            - Exception Requested
            - Fixed
            - In Progress
            - Potential
            - Waiting for 3rd Party
            - Waiting for Verification
            - Accepted Risk
            - Duplicate
            - Exception Granted
            - False Positive
            - Mitigated
        ignored:
          title: Ignored
          type: boolean
    FindingHistory:
      required:
        - status
      type: object
      properties:
        id:
          title: Id
          type: string
          format: uuid
          readOnly: true
        status:
          title: Status
          type: string
          enum:
            - Active
            - Exception Requested
            - Fixed
            - In Progress
            - Potential
            - Waiting for 3rd Party
            - Waiting for Verification
            - Accepted Risk
            - Duplicate
            - Exception Granted
            - False Positive
            - Mitigated
        date:
          title: Date
          type: string
          format: date-time
          readOnly: true
    FreshServiceProfile:
      required:
        - name
        - secret
      type: object
      properties:
        id:
          title: Id
          type: string
          format: uuid
          readOnly: true
        secret:
          title: Secret
          minLength: 1
          type: string
        name:
          title: Name
          minLength: 1
          type: string
        last_sync:
          title: Last sync
          type: string
          format: date-time
          readOnly: true
        connected:
          title: Connected
          type: boolean
          readOnly: true
        company_domain:
          title: Company domain
          maxLength: 60
          type: string
        email:
          title: Email
          maxLength: 254
          type: string
          format: email
    Function:
      required:
        - module
        - name
      type: object
      properties:
        id:
          title: Id
          type: string
          format: uuid
          readOnly: true
        name_pretty:
          title: Name pretty
          type: string
          readOnly: true
        name:
          title: Name
          maxLength: 256
          minLength: 1
          type: string
        state_apply:
          title: State apply
          type: boolean
          description: 'will add ''fun'': ''state.apply'' to salt call'
        private_function:
          title: Private function
          type: boolean
        doc_string:
          title: Doc string
          type: string
          nullable: true
        from_master:
          title: From master
          type: boolean
        module:
          title: Module
          type: string
          format: uuid
          nullable: true
    GCPCloud:
      required:
        - client_email
        - label
        - private_key
        - project_id
      type: object
      properties:
        id:
          title: Id
          type: string
          format: uuid
          readOnly: true
        enabled:
          title: Enabled
          type: boolean
          readOnly: true
        connected:
          title: Connected
          type: boolean
          readOnly: true
        schedule:
          title: Schedule
          required:
            - date
            - frequency
            - repeatEvery
            - start
            - timezone
          type: object
          properties:
            frequency:
              type: object
              properties:
                value:
                  title: Repeating range
                  type: string
                  description: The frequency of the repeating
                  enum:
                    - daily
                    - weekly
                    - monthly
            repeatEvery:
              type: object
              properties:
                value:
                  title: Repeating range
                  type: string
                  description: >-
                    The value to set the repeat time if
                    |frequency_value=monthly|repeatEvery=2| is selected,

                    then it repeats itself every 2 months
                  enum:
                    - '1'
                    - '2'
                    - '3'
                    - '4'
                    - '5'
            repeatOn:
              type: object
              properties:
                title:
                  type: object
                description:
                  type: object
                type:
                  type: object
                enum:
                  type: object
            start:
              type: object
              properties:
                title:
                  type: object
                description:
                  type: object
                type:
                  type: object
            timezone:
              type: object
              properties:
                value:
                  title: Timezone
                  type: string
                  description: The user's timezone
                  enum:
                    - Africa/Abidjan
                    - Africa/Accra
                    - Africa/Addis_Ababa
                    - Africa/Algiers
                    - Africa/Asmara
                    - Africa/Asmera
                    - Africa/Bamako
                    - Africa/Bangui
                    - Africa/Banjul
                    - Africa/Bissau
                    - Africa/Blantyre
                    - Africa/Brazzaville
                    - Africa/Bujumbura
                    - Africa/Cairo
                    - Africa/Casablanca
                    - Africa/Ceuta
                    - Africa/Conakry
                    - Africa/Dakar
                    - Africa/Dar_es_Salaam
                    - Africa/Djibouti
                    - Africa/Douala
                    - Africa/El_Aaiun
                    - Africa/Freetown
                    - Africa/Gaborone
                    - Africa/Harare
                    - Africa/Johannesburg
                    - Africa/Juba
                    - Africa/Kampala
                    - Africa/Khartoum
                    - Africa/Kigali
                    - Africa/Kinshasa
                    - Africa/Lagos
                    - Africa/Libreville
                    - Africa/Lome
                    - Africa/Luanda
                    - Africa/Lubumbashi
                    - Africa/Lusaka
                    - Africa/Malabo
                    - Africa/Maputo
                    - Africa/Maseru
                    - Africa/Mbabane
                    - Africa/Mogadishu
                    - Africa/Monrovia
                    - Africa/Nairobi
                    - Africa/Ndjamena
                    - Africa/Niamey
                    - Africa/Nouakchott
                    - Africa/Ouagadougou
                    - Africa/Porto-Novo
                    - Africa/Sao_Tome
                    - Africa/Timbuktu
                    - Africa/Tripoli
                    - Africa/Tunis
                    - Africa/Windhoek
                    - America/Adak
                    - America/Anchorage
                    - America/Anguilla
                    - America/Antigua
                    - America/Araguaina
                    - America/Argentina/Buenos_Aires
                    - America/Argentina/Catamarca
                    - America/Argentina/ComodRivadavia
                    - America/Argentina/Cordoba
                    - America/Argentina/Jujuy
                    - America/Argentina/La_Rioja
                    - America/Argentina/Mendoza
                    - America/Argentina/Rio_Gallegos
                    - America/Argentina/Salta
                    - America/Argentina/San_Juan
                    - America/Argentina/San_Luis
                    - America/Argentina/Tucuman
                    - America/Argentina/Ushuaia
                    - America/Aruba
                    - America/Asuncion
                    - America/Atikokan
                    - America/Atka
                    - America/Bahia
                    - America/Bahia_Banderas
                    - America/Barbados
                    - America/Belem
                    - America/Belize
                    - America/Blanc-Sablon
                    - America/Boa_Vista
                    - America/Bogota
                    - America/Boise
                    - America/Buenos_Aires
                    - America/Cambridge_Bay
                    - America/Campo_Grande
                    - America/Cancun
                    - America/Caracas
                    - America/Catamarca
                    - America/Cayenne
                    - America/Cayman
                    - America/Chicago
                    - America/Chihuahua
                    - America/Coral_Harbour
                    - America/Cordoba
                    - America/Costa_Rica
                    - America/Creston
                    - America/Cuiaba
                    - America/Curacao
                    - America/Danmarkshavn
                    - America/Dawson
                    - America/Dawson_Creek
                    - America/Denver
                    - America/Detroit
                    - America/Dominica
                    - America/Edmonton
                    - America/Eirunepe
                    - America/El_Salvador
                    - America/Ensenada
                    - America/Fort_Nelson
                    - America/Fort_Wayne
                    - America/Fortaleza
                    - America/Glace_Bay
                    - America/Godthab
                    - America/Goose_Bay
                    - America/Grand_Turk
                    - America/Grenada
                    - America/Guadeloupe
                    - America/Guatemala
                    - America/Guayaquil
                    - America/Guyana
                    - America/Halifax
                    - America/Havana
                    - America/Hermosillo
                    - America/Indiana/Indianapolis
                    - America/Indiana/Knox
                    - America/Indiana/Marengo
                    - America/Indiana/Petersburg
                    - America/Indiana/Tell_City
                    - America/Indiana/Vevay
                    - America/Indiana/Vincennes
                    - America/Indiana/Winamac
                    - America/Indianapolis
                    - America/Inuvik
                    - America/Iqaluit
                    - America/Jamaica
                    - America/Jujuy
                    - America/Juneau
                    - America/Kentucky/Louisville
                    - America/Kentucky/Monticello
                    - America/Knox_IN
                    - America/Kralendijk
                    - America/La_Paz
                    - America/Lima
                    - America/Los_Angeles
                    - America/Louisville
                    - America/Lower_Princes
                    - America/Maceio
                    - America/Managua
                    - America/Manaus
                    - America/Marigot
                    - America/Martinique
                    - America/Matamoros
                    - America/Mazatlan
                    - America/Mendoza
                    - America/Menominee
                    - America/Merida
                    - America/Metlakatla
                    - America/Mexico_City
                    - America/Miquelon
                    - America/Moncton
                    - America/Monterrey
                    - America/Montevideo
                    - America/Montreal
                    - America/Montserrat
                    - America/Nassau
                    - America/New_York
                    - America/Nipigon
                    - America/Nome
                    - America/Noronha
                    - America/North_Dakota/Beulah
                    - America/North_Dakota/Center
                    - America/North_Dakota/New_Salem
                    - America/Nuuk
                    - America/Ojinaga
                    - America/Panama
                    - America/Pangnirtung
                    - America/Paramaribo
                    - America/Phoenix
                    - America/Port-au-Prince
                    - America/Port_of_Spain
                    - America/Porto_Acre
                    - America/Porto_Velho
                    - America/Puerto_Rico
                    - America/Punta_Arenas
                    - America/Rainy_River
                    - America/Rankin_Inlet
                    - America/Recife
                    - America/Regina
                    - America/Resolute
                    - America/Rio_Branco
                    - America/Rosario
                    - America/Santa_Isabel
                    - America/Santarem
                    - America/Santiago
                    - America/Santo_Domingo
                    - America/Sao_Paulo
                    - America/Scoresbysund
                    - America/Shiprock
                    - America/Sitka
                    - America/St_Barthelemy
                    - America/St_Johns
                    - America/St_Kitts
                    - America/St_Lucia
                    - America/St_Thomas
                    - America/St_Vincent
                    - America/Swift_Current
                    - America/Tegucigalpa
                    - America/Thule
                    - America/Thunder_Bay
                    - America/Tijuana
                    - America/Toronto
                    - America/Tortola
                    - America/Vancouver
                    - America/Virgin
                    - America/Whitehorse
                    - America/Winnipeg
                    - America/Yakutat
                    - America/Yellowknife
                    - Antarctica/Casey
                    - Antarctica/Davis
                    - Antarctica/DumontDUrville
                    - Antarctica/Macquarie
                    - Antarctica/Mawson
                    - Antarctica/McMurdo
                    - Antarctica/Palmer
                    - Antarctica/Rothera
                    - Antarctica/South_Pole
                    - Antarctica/Syowa
                    - Antarctica/Troll
                    - Antarctica/Vostok
                    - Arctic/Longyearbyen
                    - Asia/Aden
                    - Asia/Almaty
                    - Asia/Amman
                    - Asia/Anadyr
                    - Asia/Aqtau
                    - Asia/Aqtobe
                    - Asia/Ashgabat
                    - Asia/Ashkhabad
                    - Asia/Atyrau
                    - Asia/Baghdad
                    - Asia/Bahrain
                    - Asia/Baku
                    - Asia/Bangkok
                    - Asia/Barnaul
                    - Asia/Beirut
                    - Asia/Bishkek
                    - Asia/Brunei
                    - Asia/Calcutta
                    - Asia/Chita
                    - Asia/Choibalsan
                    - Asia/Chongqing
                    - Asia/Chungking
                    - Asia/Colombo
                    - Asia/Dacca
                    - Asia/Damascus
                    - Asia/Dhaka
                    - Asia/Dili
                    - Asia/Dubai
                    - Asia/Dushanbe
                    - Asia/Famagusta
                    - Asia/Gaza
                    - Asia/Harbin
                    - Asia/Hebron
                    - Asia/Ho_Chi_Minh
                    - Asia/Hong_Kong
                    - Asia/Hovd
                    - Asia/Irkutsk
                    - Asia/Istanbul
                    - Asia/Jakarta
                    - Asia/Jayapura
                    - Asia/Jerusalem
                    - Asia/Kabul
                    - Asia/Kamchatka
                    - Asia/Karachi
                    - Asia/Kashgar
                    - Asia/Kathmandu
                    - Asia/Katmandu
                    - Asia/Khandyga
                    - Asia/Kolkata
                    - Asia/Krasnoyarsk
                    - Asia/Kuala_Lumpur
                    - Asia/Kuching
                    - Asia/Kuwait
                    - Asia/Macao
                    - Asia/Macau
                    - Asia/Magadan
                    - Asia/Makassar
                    - Asia/Manila
                    - Asia/Muscat
                    - Asia/Nicosia
                    - Asia/Novokuznetsk
                    - Asia/Novosibirsk
                    - Asia/Omsk
                    - Asia/Oral
                    - Asia/Phnom_Penh
                    - Asia/Pontianak
                    - Asia/Pyongyang
                    - Asia/Qatar
                    - Asia/Qostanay
                    - Asia/Qyzylorda
                    - Asia/Rangoon
                    - Asia/Riyadh
                    - Asia/Saigon
                    - Asia/Sakhalin
                    - Asia/Samarkand
                    - Asia/Seoul
                    - Asia/Shanghai
                    - Asia/Singapore
                    - Asia/Srednekolymsk
                    - Asia/Taipei
                    - Asia/Tashkent
                    - Asia/Tbilisi
                    - Asia/Tehran
                    - Asia/Tel_Aviv
                    - Asia/Thimbu
                    - Asia/Thimphu
                    - Asia/Tokyo
                    - Asia/Tomsk
                    - Asia/Ujung_Pandang
                    - Asia/Ulaanbaatar
                    - Asia/Ulan_Bator
                    - Asia/Urumqi
                    - Asia/Ust-Nera
                    - Asia/Vientiane
                    - Asia/Vladivostok
                    - Asia/Yakutsk
                    - Asia/Yangon
                    - Asia/Yekaterinburg
                    - Asia/Yerevan
                    - Atlantic/Azores
                    - Atlantic/Bermuda
                    - Atlantic/Canary
                    - Atlantic/Cape_Verde
                    - Atlantic/Faeroe
                    - Atlantic/Faroe
                    - Atlantic/Jan_Mayen
                    - Atlantic/Madeira
                    - Atlantic/Reykjavik
                    - Atlantic/South_Georgia
                    - Atlantic/St_Helena
                    - Atlantic/Stanley
                    - Australia/ACT
                    - Australia/Adelaide
                    - Australia/Brisbane
                    - Australia/Broken_Hill
                    - Australia/Canberra
                    - Australia/Currie
                    - Australia/Darwin
                    - Australia/Eucla
                    - Australia/Hobart
                    - Australia/LHI
                    - Australia/Lindeman
                    - Australia/Lord_Howe
                    - Australia/Melbourne
                    - Australia/NSW
                    - Australia/North
                    - Australia/Perth
                    - Australia/Queensland
                    - Australia/South
                    - Australia/Sydney
                    - Australia/Tasmania
                    - Australia/Victoria
                    - Australia/West
                    - Australia/Yancowinna
                    - Brazil/Acre
                    - Brazil/DeNoronha
                    - Brazil/East
                    - Brazil/West
                    - CET
                    - CST6CDT
                    - Canada/Atlantic
                    - Canada/Central
                    - Canada/Eastern
                    - Canada/Mountain
                    - Canada/Newfoundland
                    - Canada/Pacific
                    - Canada/Saskatchewan
                    - Canada/Yukon
                    - Chile/Continental
                    - Chile/EasterIsland
                    - Cuba
                    - EET
                    - EST
                    - EST5EDT
                    - Egypt
                    - Eire
                    - Etc/GMT
                    - Etc/GMT+0
                    - Etc/GMT+1
                    - Etc/GMT+10
                    - Etc/GMT+11
                    - Etc/GMT+12
                    - Etc/GMT+2
                    - Etc/GMT+3
                    - Etc/GMT+4
                    - Etc/GMT+5
                    - Etc/GMT+6
                    - Etc/GMT+7
                    - Etc/GMT+8
                    - Etc/GMT+9
                    - Etc/GMT-0
                    - Etc/GMT-1
                    - Etc/GMT-10
                    - Etc/GMT-11
                    - Etc/GMT-12
                    - Etc/GMT-13
                    - Etc/GMT-14
                    - Etc/GMT-2
                    - Etc/GMT-3
                    - Etc/GMT-4
                    - Etc/GMT-5
                    - Etc/GMT-6
                    - Etc/GMT-7
                    - Etc/GMT-8
                    - Etc/GMT-9
                    - Etc/GMT0
                    - Etc/Greenwich
                    - Etc/UCT
                    - Etc/UTC
                    - Etc/Universal
                    - Etc/Zulu
                    - Europe/Amsterdam
                    - Europe/Andorra
                    - Europe/Astrakhan
                    - Europe/Athens
                    - Europe/Belfast
                    - Europe/Belgrade
                    - Europe/Berlin
                    - Europe/Bratislava
                    - Europe/Brussels
                    - Europe/Bucharest
                    - Europe/Budapest
                    - Europe/Busingen
                    - Europe/Chisinau
                    - Europe/Copenhagen
                    - Europe/Dublin
                    - Europe/Gibraltar
                    - Europe/Guernsey
                    - Europe/Helsinki
                    - Europe/Isle_of_Man
                    - Europe/Istanbul
                    - Europe/Jersey
                    - Europe/Kaliningrad
                    - Europe/Kiev
                    - Europe/Kirov
                    - Europe/Kyiv
                    - Europe/Lisbon
                    - Europe/Ljubljana
                    - Europe/London
                    - Europe/Luxembourg
                    - Europe/Madrid
                    - Europe/Malta
                    - Europe/Mariehamn
                    - Europe/Minsk
                    - Europe/Monaco
                    - Europe/Moscow
                    - Europe/Nicosia
                    - Europe/Oslo
                    - Europe/Paris
                    - Europe/Podgorica
                    - Europe/Prague
                    - Europe/Riga
                    - Europe/Rome
                    - Europe/Samara
                    - Europe/San_Marino
                    - Europe/Sarajevo
                    - Europe/Saratov
                    - Europe/Simferopol
                    - Europe/Skopje
                    - Europe/Sofia
                    - Europe/Stockholm
                    - Europe/Tallinn
                    - Europe/Tirane
                    - Europe/Tiraspol
                    - Europe/Ulyanovsk
                    - Europe/Uzhgorod
                    - Europe/Vaduz
                    - Europe/Vatican
                    - Europe/Vienna
                    - Europe/Vilnius
                    - Europe/Volgograd
                    - Europe/Warsaw
                    - Europe/Zagreb
                    - Europe/Zaporozhye
                    - Europe/Zurich
                    - GB
                    - GB-Eire
                    - GMT
                    - GMT+0
                    - GMT-0
                    - GMT0
                    - Greenwich
                    - HST
                    - Hongkong
                    - Iceland
                    - Indian/Antananarivo
                    - Indian/Chagos
                    - Indian/Christmas
                    - Indian/Cocos
                    - Indian/Comoro
                    - Indian/Kerguelen
                    - Indian/Mahe
                    - Indian/Maldives
                    - Indian/Mauritius
                    - Indian/Mayotte
                    - Indian/Reunion
                    - Iran
                    - Israel
                    - Jamaica
                    - Japan
                    - Kwajalein
                    - Libya
                    - MET
                    - MST
                    - MST7MDT
                    - Mexico/BajaNorte
                    - Mexico/BajaSur
                    - Mexico/General
                    - NZ
                    - NZ-CHAT
                    - Navajo
                    - PRC
                    - PST8PDT
                    - Pacific/Apia
                    - Pacific/Auckland
                    - Pacific/Bougainville
                    - Pacific/Chatham
                    - Pacific/Chuuk
                    - Pacific/Easter
                    - Pacific/Efate
                    - Pacific/Enderbury
                    - Pacific/Fakaofo
                    - Pacific/Fiji
                    - Pacific/Funafuti
                    - Pacific/Galapagos
                    - Pacific/Gambier
                    - Pacific/Guadalcanal
                    - Pacific/Guam
                    - Pacific/Honolulu
                    - Pacific/Johnston
                    - Pacific/Kanton
                    - Pacific/Kiritimati
                    - Pacific/Kosrae
                    - Pacific/Kwajalein
                    - Pacific/Majuro
                    - Pacific/Marquesas
                    - Pacific/Midway
                    - Pacific/Nauru
                    - Pacific/Niue
                    - Pacific/Norfolk
                    - Pacific/Noumea
                    - Pacific/Pago_Pago
                    - Pacific/Palau
                    - Pacific/Pitcairn
                    - Pacific/Pohnpei
                    - Pacific/Ponape
                    - Pacific/Port_Moresby
                    - Pacific/Rarotonga
                    - Pacific/Saipan
                    - Pacific/Samoa
                    - Pacific/Tahiti
                    - Pacific/Tarawa
                    - Pacific/Tongatapu
                    - Pacific/Truk
                    - Pacific/Wake
                    - Pacific/Wallis
                    - Pacific/Yap
                    - Poland
                    - Portugal
                    - ROC
                    - ROK
                    - Singapore
                    - Turkey
                    - UCT
                    - US/Alaska
                    - US/Aleutian
                    - US/Arizona
                    - US/Central
                    - US/East-Indiana
                    - US/Eastern
                    - US/Hawaii
                    - US/Indiana-Starke
                    - US/Michigan
                    - US/Mountain
                    - US/Pacific
                    - US/Samoa
                    - UTC
                    - Universal
                    - W-SU
                    - WET
                    - Zulu
            date:
              type: object
              properties:
                title:
                  type: object
                description:
                  type: object
                type:
                  type: object
        project_id:
          title: Project id
          minLength: 1
          type: string
        client_email:
          title: Client email
          minLength: 1
          type: string
          format: email
        private_key:
          title: Private key
          minLength: 1
          type: string
        connect_date:
          title: Connect date
          type: string
          format: date-time
          readOnly: true
        enabled_date:
          title: Enabled date
          type: string
          format: date-time
          readOnly: true
        label:
          title: Label
          type: string
          format: uuid
        tag:
          title: Tag
          type: string
          format: uuid
          nullable: true
    GroupList:
      required:
        - name
      type: object
      properties:
        id:
          title: Id
          type: string
          format: uuid
          readOnly: true
        tickets_count:
          title: Tickets count
          type: string
          readOnly: true
        compliances:
          title: Compliances
          type: string
          readOnly: true
        last_scan:
          title: Last scan
          type: string
          readOnly: true
        findings:
          title: Findings
          type: string
          readOnly: true
        tags:
          title: Tags
          type: string
          readOnly: true
        assets:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/AssetMini'
        name:
          title: Name
          maxLength: 255
          minLength: 1
          type: string
        monitors:
          uniqueItems: true
          type: array
          readOnly: true
          items:
            type: string
            format: uuid
    UploadJSON:
      required:
        - model_name
      type: object
      properties:
        model_name:
          title: Model name
          type: string
          enum:
            - minion
            - playbook
            - modulesrepo
            - role
            - tickettemplate
            - visiblepermissions
            - condition
            - miniongroup
            - targettype
            - targetfield
        file:
          title: File
          type: string
          format: uri
          readOnly: true
    JiraCloudProfile:
      required:
        - email
        - name
        - secret
        - url
      type: object
      properties:
        id:
          title: Id
          type: string
          format: uuid
          readOnly: true
        secret:
          title: Secret
          minLength: 1
          type: string
        name:
          title: Name
          minLength: 1
          type: string
        last_sync:
          title: Last sync
          type: string
          format: date-time
          readOnly: true
        connected:
          title: Connected
          type: boolean
          readOnly: true
        url:
          title: Service Desk URL
          maxLength: 200
          minLength: 1
          type: string
          format: uri
        email:
          title: Email
          maxLength: 254
          minLength: 1
          type: string
          format: email
        is_jira_admin:
          title: Is jira admin
          type: boolean
    JiraProfile:
      required:
        - name
        - secret
        - url
        - username
      type: object
      properties:
        id:
          title: Id
          type: string
          format: uuid
          readOnly: true
        secret:
          title: Secret
          minLength: 1
          type: string
        name:
          title: Name
          minLength: 1
          type: string
        last_sync:
          title: Last sync
          type: string
          format: date-time
          readOnly: true
        connected:
          title: Connected
          type: boolean
          readOnly: true
        url:
          title: Service Desk URL
          maxLength: 200
          minLength: 1
          type: string
          format: uri
        username:
          title: Service Desk Username
          maxLength: 50
          minLength: 1
          type: string
    BaseJiraDataResponseDocs:
      type: object
      properties:
        project_id:
          title: Project id
          minLength: 1
          type: string
          readOnly: true
        name:
          title: Name
          minLength: 1
          type: string
          readOnly: true
    JiraProjectsResponseDocs:
      type: object
      properties:
        project_id:
          title: Project id
          minLength: 1
          type: string
          readOnly: true
        name:
          title: Name
          minLength: 1
          type: string
          readOnly: true
        key:
          title: Key
          minLength: 1
          type: string
          readOnly: true
    Label:
      required:
        - aws_prefix
        - name
      type: object
      properties:
        id:
          title: Id
          type: string
          format: uuid
          readOnly: true
        name:
          title: Name
          maxLength: 255
          minLength: 1
          pattern: '^[a-zA-Z0-9]+$'
          type: string
        aws_prefix:
          title: Aws prefix
          maxLength: 64
          minLength: 1
          pattern: '^[a-zA-Z0-9]+$'
          type: string
        assets:
          title: Assets
          type: string
          readOnly: true
        findings:
          title: Findings
          type: string
          readOnly: true
        tickets:
          title: Tickets
          type: string
          readOnly: true
        baselines:
          title: Baselines
          type: string
          readOnly: true
    CustomTokenObtainSliding:
      required:
        - password
        - username
      type: object
      properties:
        username:
          title: Username
          minLength: 1
          type: string
        password:
          title: Password
          minLength: 1
          type: string
    TOPTAddMFAResponseDocs:
      type: object
      properties:
        url:
          title: Url
          minLength: 1
          type: string
          format: uri
          readOnly: true
    TOPTSubmitMFARequestDocs:
      required:
        - token
      type: object
      properties:
        token:
          title: Token
          maxLength: 6
          minLength: 1
          type: string
    TOPTVerifyMFARequestDocs:
      required:
        - mfa_uuid
        - token
      type: object
      properties:
        token:
          title: Token
          maxLength: 6
          minLength: 1
          type: string
        mfa_uuid:
          title: Mfa uuid
          minLength: 1
          type: string
    Minion:
      type: object
      properties:
        id:
          title: Id
          type: string
          format: uuid
          readOnly: true
        minion_id:
          title: Minion id
          maxLength: 8
          type: string
          default: ''
        name:
          title: Name
          maxLength: 255
          type: string
          nullable: true
        type:
          title: Type
          type: string
          enum:
            - system
            - custom
        status:
          title: Status
          type: integer
          nullable: true
        last_ping:
          title: Last ping
          type: boolean
        last_ping_date:
          title: Last ping date
          type: string
          format: date-time
          nullable: true
        group:
          title: Group
          type: string
          format: uuid
          nullable: true
    MinionGroupList:
      required:
        - name
      type: object
      properties:
        id:
          title: Id
          type: string
          format: uuid
          readOnly: true
        minions:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/Minion'
        name:
          title: Name
          maxLength: 255
          minLength: 1
          type: string
    MinionGroup:
      required:
        - name
      type: object
      properties:
        id:
          title: Id
          type: string
          format: uuid
          readOnly: true
        name:
          title: Name
          maxLength: 255
          minLength: 1
          type: string
    MinionSwaggerAPI:
      required:
        - ids
      type: object
      properties:
        ids:
          type: array
          items:
            type: string
            format: uuid
    Module:
      required:
        - name
      type: object
      properties:
        id:
          title: Id
          type: string
          format: uuid
          readOnly: true
        name_pretty:
          title: Name pretty
          type: string
          readOnly: true
        functions:
          title: Functions
          type: string
          readOnly: true
        name:
          title: Name
          maxLength: 256
          minLength: 1
          type: string
        is_parallelizable:
          title: Is parallelizable
          type: boolean
        doc_string:
          title: Doc string
          type: string
          nullable: true
    ScanFile:
      required:
        - scan_file
      type: object
      properties:
        id:
          title: Id
          type: string
          format: uuid
          readOnly: true
        scan_file:
          title: Scan file
          maxLength: 255
          minLength: 1
          type: string
    MonitorHistory:
      required:
        - asset
        - groups
        - scan
      type: object
      properties:
        id:
          title: Id
          type: string
          format: uuid
          readOnly: true
        scan:
          $ref: '#/components/schemas/ScanFile'
        asset:
          $ref: '#/components/schemas/AssetMini'
        groups:
          type: array
          items:
            $ref: '#/components/schemas/GroupMini'
    Monitor:
      required:
        - action
        - assign_to_data_type
        - condition
        - name
      type: object
      properties:
        id:
          title: Id
          type: string
          format: uuid
          readOnly: true
        data_type_display:
          title: Data type display
          minLength: 1
          type: string
          readOnly: true
        name:
          title: Name
          maxLength: 254
          minLength: 1
          type: string
        data_type:
          title: Data type
          type: string
          enum:
            - nessus_port
            - masscan_port
            - vendor
            - bios
            - dce
            - feature
            - groups
            - mac
            - os
            - services
            - smb
            - software
            - ssl
            - wireless
            - bitlocker
            - users
            - admins
            - nipper_config
            - languages
            - drooopescan_themes
            - drooopescan_plugins
            - droopescan_versions
            - droopescan_urls
            - lambdas
            - http_options
            - trivy
            - sonatype
            - objects
            - permissions
            - tags
            - replication
            - jobs
            - shodan
            - domains
            - hostnames
            - ssl_tls_verions
            - http_components
            - elastic_ip
            - private_ip
            - workspace_ip
            - metadata
            - sensitive_data
            - malware_data
            - history_metadata
            - ips
            - security_rule
            - password_policies
            - resource_group
            - ingress_rule
            - egress_rule
            - workspace_data
            - iam_user_data
            - inline_policy_stmt
            - attached_policy_stmt
            - env_vars
            - code
            - aws_tag
            - region
        display_fields:
          type: array
          nullable: true
          items:
            title: Display fields
            maxLength: 64
            minLength: 1
            type: string
        table_properties:
          title: Table properties
          type: object
          properties: {}
        condition:
          title: Condition
          type: integer
        action:
          title: Action
          type: integer
        assign_to_data_type:
          title: Assign to data type
          type: boolean
        assets:
          uniqueItems: true
          type: array
          items:
            type: string
            format: uuid
        groups:
          uniqueItems: true
          type: array
          items:
            type: string
            format: uuid
    CustomDatalist:
      type: object
      properties:
        id:
          title: Id
          type: string
          format: uuid
          readOnly: true
        data_type:
          title: Data type
          type: string
          enum:
            - nessus_port
            - masscan_port
            - vendor
            - bios
            - dce
            - feature
            - groups
            - mac
            - os
            - services
            - smb
            - software
            - ssl
            - wireless
            - bitlocker
            - users
            - admins
            - nipper_config
            - languages
            - drooopescan_themes
            - drooopescan_plugins
            - droopescan_versions
            - droopescan_urls
            - lambdas
            - http_options
            - trivy
            - sonatype
            - objects
            - permissions
            - tags
            - replication
            - jobs
            - shodan
            - domains
            - hostnames
            - ssl_tls_verions
            - http_components
            - elastic_ip
            - private_ip
            - workspace_ip
            - metadata
            - sensitive_data
            - malware_data
            - history_metadata
            - ips
            - security_rule
            - password_policies
            - resource_group
            - ingress_rule
            - egress_rule
            - workspace_data
            - iam_user_data
            - inline_policy_stmt
            - attached_policy_stmt
            - env_vars
            - code
            - aws_tag
            - region
        data:
          title: Data
          type: object
          properties: {}
          readOnly: true
    MonitorDetailed:
      required:
        - action
        - assign_to_data_type
        - condition
        - name
      type: object
      properties:
        id:
          title: Id
          type: string
          format: uuid
          readOnly: true
        assets:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/AssetMini'
        groups:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/GroupMini'
        name:
          title: Name
          maxLength: 254
          minLength: 1
          type: string
        data_type:
          title: Data type
          type: string
          enum:
            - nessus_port
            - masscan_port
            - vendor
            - bios
            - dce
            - feature
            - groups
            - mac
            - os
            - services
            - smb
            - software
            - ssl
            - wireless
            - bitlocker
            - users
            - admins
            - nipper_config
            - languages
            - drooopescan_themes
            - drooopescan_plugins
            - droopescan_versions
            - droopescan_urls
            - lambdas
            - http_options
            - trivy
            - sonatype
            - objects
            - permissions
            - tags
            - replication
            - jobs
            - shodan
            - domains
            - hostnames
            - ssl_tls_verions
            - http_components
            - elastic_ip
            - private_ip
            - workspace_ip
            - metadata
            - sensitive_data
            - malware_data
            - history_metadata
            - ips
            - security_rule
            - password_policies
            - resource_group
            - ingress_rule
            - egress_rule
            - workspace_data
            - iam_user_data
            - inline_policy_stmt
            - attached_policy_stmt
            - env_vars
            - code
            - aws_tag
            - region
        display_fields:
          type: array
          nullable: true
          items:
            title: Display fields
            maxLength: 64
            minLength: 1
            type: string
        table_properties:
          title: Table properties
          type: object
          properties: {}
        condition:
          title: Condition
          type: integer
        action:
          title: Action
          type: integer
        assign_to_data_type:
          title: Assign to data type
          type: boolean
    ControlListIdserializer:
      required:
        - ids
      type: object
      properties:
        ids:
          type: array
          items:
            type: string
            nullable: true
    Notification:
      required:
        - label
        - message
        - notification_type
        - related_type
        - subject
      type: object
      properties:
        id:
          title: Id
          type: string
          format: uuid
          readOnly: true
        notification_type:
          title: Notification type
          type: string
          enum:
            - New Findings
            - Baseline Failed
            - Baseline No Data
            - Baseline New Control
            - Scan No Data
            - Data Lists not matching
            - Monitor data present in Data list
            - Monitor data absent in Data list
            - Monitor data changed
            - Cloud scan initiated
        subject:
          title: Subject
          maxLength: 255
          minLength: 1
          type: string
        message:
          title: Message
          minLength: 1
          type: string
        date:
          title: Date
          type: string
          format: date-time
          readOnly: true
        read:
          title: Read
          type: boolean
        related_objects:
          type: array
          nullable: true
          items:
            title: Related objects
            maxLength: 64
            type: string
            nullable: true
        related_type:
          title: Related type
          type: string
          enum:
            - vulnerability
            - baseline
            - data-list
            - monitor
            - scan
            - playbook-config
        label:
          $ref: '#/components/schemas/LabelMini'
    NotificationUpdate:
      type: object
      properties:
        read:
          title: Read
          type: boolean
    Permission:
      type: object
      properties:
        id:
          title: Id
          type: string
          format: uuid
          readOnly: true
        name:
          title: Name
          type: string
          readOnly: true
    PersistentCache:
      required:
        - key
        - raw_value
      type: object
      properties:
        id:
          title: Id
          type: string
          format: uuid
          readOnly: true
        key:
          title: Key
          maxLength: 255
          minLength: 1
          type: string
        value:
          title: Value
          type: string
          readOnly: true
        encrypted:
          title: Encrypted
          type: boolean
        raw_value:
          title: Raw value
          minLength: 1
          type: string
    PersistentCacheSet:
      required:
        - name
        - playbook_id
      type: object
      properties:
        id:
          title: Id
          type: string
          format: uuid
          readOnly: true
        name:
          title: Name
          maxLength: 255
          minLength: 1
          type: string
        playbook_id:
          title: Playbook id
          type: string
          format: uuid
        caches:
          type: array
          items:
            $ref: '#/components/schemas/PersistentCache'
    PlaybookInlineItem:
      required:
        - function
      type: object
      properties:
        id:
          title: Id
          type: string
          format: uuid
          readOnly: true
        group:
          title: Group
          maximum: 2147483647
          minimum: 0
          type: integer
        schedule:
          title: Schedule
          maxLength: 64
          type: string
          description: cron formatting
          nullable: true
        timeout:
          title: Timeout
          maximum: 2147483647
          minimum: 0
          type: integer
        expect_write_variable:
          title: Expect write variable
          type: boolean
        expect_read_variable:
          title: Expect read variable
          type: boolean
        run_without_result:
          title: Run without result
          type: boolean
        close_condition_check:
          title: Close condition check
          maximum: 32767
          minimum: -32768
          type: integer
          nullable: true
        function:
          title: Function
          type: string
          format: uuid
        conditions:
          uniqueItems: true
          type: array
          items:
            type: string
            format: uuid
    Playbook:
      required:
        - name
        - playbook_items
      type: object
      properties:
        id:
          title: Id
          type: string
          format: uuid
          readOnly: true
        playbook_items:
          type: array
          items:
            $ref: '#/components/schemas/PlaybookInlineItem'
        name:
          title: Name
          maxLength: 255
          minLength: 1
          type: string
        type:
          title: Type
          type: string
          enum:
            - system
            - custom
        related_to:
          title: Related to
          type: string
          nullable: true
          enum:
            - azure
            - gcp
            - aws
            - aws_assume
        ready_for_auto_creation:
          title: Ready for auto creation
          type: boolean
          readOnly: true
    PlaybookConfigurationMappingInline:
      required:
        - function_variable
      type: object
      properties:
        id:
          title: Id
          type: string
          format: uuid
          readOnly: true
        function_variable:
          title: Function variable
          type: string
          format: uuid
        variable:
          title: Variable
          type: string
          format: uuid
          nullable: true
        variable_name:
          title: Variable name
          type: string
          readOnly: true
    PlaybookInline:
      required:
        - name
      type: object
      properties:
        id:
          title: Id
          type: string
          format: uuid
          readOnly: true
        name:
          title: Name
          maxLength: 255
          minLength: 1
          type: string
    MinionInline:
      type: object
      properties:
        id:
          title: Id
          type: string
          format: uuid
          readOnly: true
        name:
          title: Name
          maxLength: 255
          type: string
          nullable: true
    LabelInline:
      required:
        - name
      type: object
      properties:
        id:
          title: Id
          type: string
          format: uuid
          readOnly: true
        name:
          title: Name
          maxLength: 255
          minLength: 1
          pattern: '^[a-zA-Z0-9]+$'
          type: string
    TagInline:
      type: object
      properties:
        id:
          title: Id
          type: string
          format: uuid
          readOnly: true
        name:
          title: Name
          minLength: 1
          type: string
          readOnly: true
    TargetInline:
      required:
        - name
      type: object
      properties:
        id:
          title: Id
          type: string
          format: uuid
          readOnly: true
        name:
          title: Name
          maxLength: 255
          minLength: 1
          type: string
    PlaybookConfigurationList:
      required:
        - label
        - minion
        - playbook
        - schedule
        - tag
        - target
        - variables
      type: object
      properties:
        id:
          title: Id
          type: string
          format: uuid
          readOnly: true
        variables:
          type: array
          items:
            $ref: '#/components/schemas/PlaybookConfigurationMappingInline'
        playbook:
          $ref: '#/components/schemas/PlaybookInline'
        minion:
          $ref: '#/components/schemas/MinionInline'
        label:
          $ref: '#/components/schemas/LabelInline'
        tag:
          $ref: '#/components/schemas/TagInline'
        target:
          $ref: '#/components/schemas/TargetInline'
        schedule:
          title: Schedule
          type: object
          properties: {}
        task_id:
          title: Task id
          type: string
          format: uuid
          nullable: true
        cloud:
          title: Cloud
          type: string
          nullable: true
    PlaybookConfiguration:
      required:
        - label
        - playbook
        - schedule
        - variables
      type: object
      properties:
        id:
          title: Id
          type: string
          format: uuid
          readOnly: true
        variables:
          type: array
          items:
            $ref: '#/components/schemas/PlaybookConfigurationMappingInline'
        schedule:
          title: Schedule
          type: object
          properties: {}
        task_id:
          title: Task id
          type: string
          format: uuid
          nullable: true
        playbook:
          title: Playbook
          type: string
          format: uuid
        minion:
          title: Minion
          type: string
          format: uuid
          nullable: true
        label:
          title: Label
          type: string
          format: uuid
        tag:
          title: Tag
          type: string
          format: uuid
          nullable: true
        target:
          title: Target
          type: string
          format: uuid
          nullable: true
        cloud:
          title: Cloud
          type: string
          nullable: true
    ReportHistory:
      required:
        - email
      type: object
      properties:
        sent:
          title: Sent
          type: string
          format: date-time
          readOnly: true
        report:
          title: Report
          type: string
          format: uri
          readOnly: true
        email:
          title: Email
          maxLength: 254
          minLength: 1
          type: string
          format: email
    ReportConfiguration:
      required:
        - email
        - name
        - pages
        - period
      type: object
      properties:
        id:
          title: Id
          type: string
          format: uuid
          readOnly: true
        history:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/ReportHistory'
        last_report:
          title: Last report
          type: string
          readOnly: true
        name:
          title: Name
          maxLength: 255
          minLength: 1
          type: string
        email:
          title: Email
          maxLength: 510
          minLength: 1
          type: string
          description: you could enter several emails separated by comma
        day_of_the_month:
          type: array
          nullable: true
          items:
            title: Day of the month
            maximum: 32767
            minimum: -32768
            type: integer
        day_of_week:
          type: array
          nullable: true
          items:
            title: Day of week
            maximum: 32767
            minimum: -32768
            type: integer
        period:
          title: Period
          type: integer
        pages:
          type: array
          description: list of chosen reports
          items:
            title: Pages
            maximum: 32767
            minimum: -32768
            type: integer
        month:
          title: Month
          maxLength: 64
          type: string
          nullable: true
        risks:
          type: array
          nullable: true
          items:
            title: Risks
            type: string
            enum:
              - Unknown
              - Informational
              - Low
              - Medium
              - High
              - Critical
        labels:
          uniqueItems: true
          type: array
          items:
            type: string
            format: uuid
        baselines:
          uniqueItems: true
          type: array
          items:
            type: string
            format: uuid
        groups:
          uniqueItems: true
          type: array
          items:
            type: string
            format: uuid
    SecretsRequest:
      required:
        - email
      type: object
      properties:
        id:
          title: Id
          type: string
          format: uuid
          readOnly: true
        date_sent:
          title: Date sent
          type: string
          format: date-time
          readOnly: true
        date_set:
          title: Date set
          type: string
          format: date-time
          readOnly: true
        requested_by:
          title: Requested by
          type: integer
          readOnly: true
        email:
          title: Email
          maxLength: 254
          minLength: 1
          type: string
          format: email
        variables:
          uniqueItems: true
          type: array
          items:
            type: string
            format: uuid
    NewPasswordRequestDocs:
      required:
        - password
        - token
        - uid
      type: object
      properties:
        uid:
          title: Uid
          minLength: 1
          type: string
        token:
          title: Token
          minLength: 1
          type: string
        password:
          title: Password
          minLength: 1
          type: string
    ResetPasswordRequestDocs:
      required:
        - username
      type: object
      properties:
        username:
          title: Username
          minLength: 1
          type: string
    UserProfileList:
      required:
        - first_name
        - last_name
      type: object
      properties:
        id:
          title: Id
          type: string
          format: uuid
          readOnly: true
        first_name:
          title: First name
          minLength: 1
          type: string
        last_name:
          title: Last name
          minLength: 1
          type: string
        username:
          title: Username
          minLength: 1
          type: string
          readOnly: true
        email:
          title: Email
          minLength: 1
          type: string
          readOnly: true
        is_tenant_admin:
          title: Is tenant admin
          type: boolean
        role:
          title: Role
          minLength: 1
          type: string
          readOnly: true
        status:
          title: Status
          type: integer
        recent_login:
          title: Recent login
          type: string
          readOnly: true
        labels:
          uniqueItems: true
          type: array
          items:
            type: string
            format: uuid
        groups:
          uniqueItems: true
          type: array
          items:
            type: string
            format: uuid
    RoleRead:
      required:
        - name
      type: object
      properties:
        id:
          title: Id
          type: string
          format: uuid
          readOnly: true
        name:
          title: Name
          maxLength: 50
          minLength: 1
          type: string
        users_count:
          title: Users count
          type: integer
          readOnly: true
        permissions_count:
          title: Permissions count
          type: string
          readOnly: true
        visible_permissions:
          uniqueItems: true
          type: array
          items:
            type: string
            format: uuid
        user_profile:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/UserProfileList'
        is_default:
          title: Is default
          type: string
          readOnly: true
    RoleWrite:
      required:
        - name
      type: object
      properties:
        id:
          title: Id
          type: string
          format: uuid
          readOnly: true
        name:
          title: Name
          maxLength: 50
          minLength: 1
          type: string
        visible_permissions:
          uniqueItems: true
          type: array
          items:
            type: string
            format: uuid
        user_profile:
          type: array
          items:
            type: string
            nullable: true
    S3Profile:
      required:
        - secret
      type: object
      properties:
        id:
          title: Id
          type: string
          format: uuid
          readOnly: true
        secret:
          title: Secret
          minLength: 1
          type: string
        name:
          title: Name
          minLength: 1
          type: string
        last_sync:
          title: Last sync
          type: string
          format: date-time
          readOnly: true
        connected:
          title: Connected
          type: boolean
          readOnly: true
        aws_s3_bucket_name:
          title: Aws s3 bucket name
          maxLength: 63
          type: string
        aws_s3_access_key:
          title: Aws s3 access key
          maxLength: 128
          type: string
        region:
          title: Region
          maxLength: 30
          type: string
    ScanErrors:
      required:
        - message
        - scan
      type: object
      properties:
        id:
          title: Id
          type: string
          format: uuid
          readOnly: true
        message:
          title: Message
          minLength: 1
          type: string
        scan:
          title: Scan
          type: string
          format: uuid
    Scan:
      required:
        - audit_files
        - data_type
        - errors
        - scan_date
        - scan_file
      type: object
      properties:
        id:
          title: Id
          type: string
          format: uuid
          readOnly: true
        data_type:
          title: Data type
          minLength: 1
          type: string
        audit_files:
          title: Audit files
          type: object
          properties: {}
        scan_file:
          title: Scan file
          maxLength: 255
          minLength: 1
          type: string
        scan_date:
          title: Scan date
          type: string
          format: date-time
        tags:
          title: Tags
          type: string
          readOnly: true
        errors:
          uniqueItems: true
          type: array
          items:
            type: string
            format: uuid
        label:
          title: Label
          type: string
          readOnly: true
        target:
          title: Target
          type: string
          readOnly: true
        assets:
          uniqueItems: true
          type: array
          items:
            type: string
            format: uuid
    ScanTag:
      required:
        - ids
      type: object
      properties:
        id:
          title: Id
          minLength: 1
          type: string
        name:
          title: Name
          minLength: 1
          type: string
        ids:
          type: array
          items:
            type: string
            nullable: true
    ServiceNowProfile:
      required:
        - name
        - secret
        - url
        - username
      type: object
      properties:
        id:
          title: Id
          type: string
          format: uuid
          readOnly: true
        secret:
          title: Secret
          minLength: 1
          type: string
        name:
          title: Name
          minLength: 1
          type: string
        last_sync:
          title: Last sync
          type: string
          format: date-time
          readOnly: true
        connected:
          title: Connected
          type: boolean
          readOnly: true
        url:
          title: Url
          minLength: 1
          type: string
          format: uri
        username:
          title: Username
          minLength: 1
          type: string
    SignUp:
      required:
        - email
        - first_name
        - last_name
        - organisation_name
        - password
      type: object
      properties:
        id:
          title: Id
          type: string
          format: uuid
          readOnly: true
        first_name:
          title: First name
          maxLength: 32
          minLength: 1
          type: string
        last_name:
          title: Last name
          maxLength: 32
          minLength: 1
          type: string
        email:
          title: Email
          maxLength: 50
          minLength: 1
          type: string
        password:
          title: Password
          maxLength: 32
          minLength: 1
          type: string
        organisation_name:
          title: Organisation name
          maxLength: 32
          minLength: 1
          type: string
    Tag:
      required:
        - value
      type: object
      properties:
        id:
          title: Id
          type: string
          format: uuid
          readOnly: true
        data_type:
          title: Data type
          type: string
          default: Divy
          enum:
            - Sensor
            - Divy
        value:
          title: Value
          maxLength: 255
          minLength: 1
          type: string
    TargetField:
      required:
        - description
        - field_type
        - name
        - required
      type: object
      properties:
        id:
          title: Id
          type: string
          format: uuid
          readOnly: true
        select_options:
          title: Select options
          type: string
          readOnly: true
        name:
          title: Name
          maxLength: 256
          minLength: 1
          type: string
          description: will use in data json
        description:
          title: Description
          maxLength: 256
          minLength: 1
          type: string
          description: User in visual part of target form
        field_type:
          title: Field type
          type: string
          enum:
            - text
            - url
            - textarea
            - select
            - select_multiple
            - array
        required:
          title: Required
          type: boolean
    TargetType:
      required:
        - fields
        - name
      type: object
      properties:
        id:
          title: Id
          type: string
          format: uuid
          readOnly: true
        fields:
          type: array
          items:
            $ref: '#/components/schemas/TargetField'
        name:
          title: Name
          maxLength: 256
          minLength: 1
          type: string
    TargetList:
      required:
        - name
      type: object
      properties:
        id:
          title: Id
          type: string
          format: uuid
          readOnly: true
        tags:
          title: Tags
          type: string
          readOnly: true
        name:
          title: Name
          maxLength: 255
          minLength: 1
          type: string
        note:
          title: Note
          maxLength: 255
          type: string
          nullable: true
        data_list:
          title: Data list
          type: object
          properties: {}
          nullable: true
        misc:
          title: Misc
          type: object
          properties: {}
          nullable: true
        label:
          title: Label
          type: string
          format: uuid
          nullable: true
        target_type:
          title: Target type
          type: string
          format: uuid
          nullable: true
        groups:
          uniqueItems: true
          type: array
          items:
            type: string
            format: uuid
        assets:
          uniqueItems: true
          type: array
          items:
            type: string
            format: uuid
    PeriodicTask:
      required:
        - crontab
        - name
      type: object
      properties:
        id:
          title: Id
          type: string
          format: uuid
          readOnly: true
        name:
          title: Name
          maxLength: 200
          minLength: 1
          type: string
          description: Short Description For This Task
        crontab:
          title: Crontab
          maxLength: 64
          minLength: 1
          type: string
          description: cron formatting
        enabled:
          title: Enabled
          type: boolean
          description: Set to False to disable the schedule
        last_run_at:
          title: Last run at
          type: string
          format: date-time
          readOnly: true
        next_run:
          title: Next run
          type: string
          format: date-time
          readOnly: true
    UserProfile:
      type: object
      properties:
        id:
          title: Id
          type: string
          format: uuid
          readOnly: true
        is_tenant_admin:
          title: Is tenant admin
          type: boolean
        email_notification_types:
          type: array
          nullable: true
          items:
            title: Email notification types
            type: string
            enum:
              - New Findings
              - Baseline Failed
              - Baseline No Data
              - Baseline New Control
              - Scan No Data
              - Data Lists not matching
              - Monitor data present in Data list
              - Monitor data absent in Data list
              - Monitor data changed
              - Cloud scan initiated
        notification_types:
          type: array
          nullable: true
          items:
            title: Notification types
            type: string
            enum:
              - New Findings
              - Baseline Failed
              - Baseline No Data
              - Baseline New Control
              - Scan No Data
              - Data Lists not matching
              - Monitor data present in Data list
              - Monitor data absent in Data list
              - Monitor data changed
              - Cloud scan initiated
        color_schema:
          title: Color schema
          maxLength: 254
          type: string
          nullable: true
        role:
          title: Role
          type: string
          format: uuid
          nullable: true
    User:
      required:
        - user_profile
      type: object
      properties:
        id:
          title: ID
          type: integer
          readOnly: true
        email:
          title: Email address
          maxLength: 254
          type: string
          format: email
        first_name:
          title: First name
          maxLength: 150
          type: string
        last_name:
          title: Last name
          maxLength: 150
          type: string
        is_active:
          title: Is active
          type: boolean
          readOnly: true
        last_login:
          title: Last login
          type: string
          format: date-time
          nullable: true
        user_profile:
          $ref: '#/components/schemas/UserProfile'
        mfa:
          title: Mfa
          type: object
          properties: {}
          readOnly: true
    Comment:
      required:
        - comment
        - ticket_id
      type: object
      properties:
        id:
          title: Id
          type: string
          format: uuid
          readOnly: true
        ticket:
          title: Ticket
          type: string
          format: uuid
          readOnly: true
        comment_id:
          title: Comment id
          minLength: 1
          type: string
          readOnly: true
        synced:
          title: Synced
          type: boolean
          readOnly: true
        ticket_id:
          title: Ticket id
          type: string
          format: uuid
        user:
          $ref: '#/components/schemas/User'
        comment:
          title: Comment
          minLength: 1
          type: string
        created:
          title: Created
          type: string
          format: date-time
          readOnly: true
        third_party_user:
          title: Third party user
          maxLength: 32
          type: string
          nullable: true
    TicketRelatedObjectWriter:
      required:
        - related_objects_ids
      type: object
      properties:
        id:
          title: Id
          type: string
          format: uuid
          readOnly: true
        ticket_related_type:
          title: Ticket related type
          type: string
          enum:
            - control
            - finding
            - data-list
        related_objects_ids:
          type: array
          description: Should consist a list of related objects of the ticket_related_type
          items:
            type: string
            nullable: true
    TicketRelatedObjectReader:
      type: object
      properties:
        id:
          title: Id
          type: string
          format: uuid
          readOnly: true
        ticket_related_type:
          title: Ticket related type
          type: string
          enum:
            - control
            - finding
            - data-list
        related_object:
          title: Related object
          type: string
          readOnly: true
    TicketConfigurationMini:
      required:
        - name
      type: object
      properties:
        id:
          title: Id
          type: string
          format: uuid
          readOnly: true
        name:
          title: Name
          maxLength: 255
          minLength: 1
          type: string
    Ticket:
      required:
        - ticket_configuration_id
        - ticket_profile_id
        - ticket_related_object
        - title
      type: object
      properties:
        id:
          title: Id
          type: string
          format: uuid
          readOnly: true
        label_id:
          title: Label id
          type: string
          format: uuid
        baseline_id:
          title: Baseline id
          type: string
          format: uuid
        label:
          title: Label
          minLength: 1
          type: string
          readOnly: true
        asset_ids:
          type: array
          items:
            type: string
            nullable: true
        assets:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/AssetMini'
        updated_by:
          title: Updated by
          minLength: 1
          type: string
          readOnly: true
        created_by:
          title: Created by
          minLength: 1
          type: string
          readOnly: true
        ticket_profile_id:
          title: Ticket profile id
          type: string
          description: Represents the object id for the model from ticket_profile_type
          format: uuid
        ticket_related_object:
          $ref: '#/components/schemas/TicketRelatedObjectWriter'
        ticket_related_objects:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/TicketRelatedObjectReader'
        comments:
          title: Comments
          type: string
          readOnly: true
        ticket_configuration:
          $ref: '#/components/schemas/TicketConfigurationMini'
        ticket_configuration_id:
          title: Ticket configuration id
          type: string
          format: uuid
        updated_at:
          title: Updated at
          type: string
          format: date-time
          readOnly: true
        created_at:
          title: Created at
          type: string
          format: date-time
          readOnly: true
        project:
          title: Project
          maxLength: 20
          type: string
          nullable: true
        project_name:
          title: Project name
          maxLength: 128
          type: string
          nullable: true
        priority:
          title: Priority
          maxLength: 20
          type: string
          nullable: true
        issue_type:
          title: Issue type
          maxLength: 20
          type: string
          nullable: true
        issue_type_name:
          title: Issue type name
          maxLength: 64
          type: string
          nullable: true
        ticket_profile_type:
          title: Ticket profile type
          type: string
          enum:
            - jiraprofile
            - jiracloudprofile
            - freshserviceprofile
            - connectwiseprofile
            - servicenowprofile
        desk_url:
          title: Desk url
          maxLength: 200
          type: string
          format: uri
          nullable: true
        desk_id:
          title: Desk id
          maxLength: 32
          type: string
          nullable: true
        desk_key:
          title: Desk key
          maxLength: 20
          type: string
          nullable: true
        title:
          title: Title
          minLength: 1
          type: string
        description:
          title: Description
          type: string
          nullable: true
        attachment:
          title: Attachment
          type: string
          nullable: true
        third_party_user:
          title: Third party user
          maxLength: 128
          type: string
          nullable: true
        status:
          title: Status
          type: string
          enum:
            - Opened
            - Ongoing
            - Canceled
            - Closed
        closed_at:
          title: Closed at
          type: string
          format: date-time
          nullable: true
        baseline:
          title: Baseline
          type: string
          format: uuid
          nullable: true
    CommentAnalysisCreateUpdate:
      required:
        - regex
      type: object
      properties:
        id:
          title: Id
          type: string
          format: uuid
        regex:
          title: Regex
          maxLength: 200
          minLength: 1
          type: string
        status:
          title: Status
          type: string
          enum:
            - Active
            - Exception Requested
            - Fixed
            - In Progress
            - Potential
            - Waiting for 3rd Party
            - Waiting for Verification
            - Accepted Risk
            - Duplicate
            - Exception Granted
            - False Positive
            - Mitigated
        description:
          title: Description
          type: string
          nullable: true
    TicketConfiguration:
      required:
        - name
        - template
        - ticket_profile_id
      type: object
      properties:
        id:
          title: Id
          type: string
          format: uuid
          readOnly: true
        comment_analysis:
          type: array
          items:
            $ref: '#/components/schemas/CommentAnalysisCreateUpdate'
        name:
          title: Name
          maxLength: 255
          minLength: 1
          type: string
        project:
          title: Project
          maxLength: 20
          type: string
          nullable: true
        priorities:
          title: Priorities
          type: object
          properties: {}
        issue_type:
          title: Issue type
          maxLength: 20
          type: string
          nullable: true
        ticket_profile_type:
          title: Ticket profile type
          type: string
          enum:
            - jiraprofile
            - jiracloudprofile
            - freshserviceprofile
            - connectwiseprofile
            - servicenowprofile
        ticket_profile_id:
          title: Ticket profile id
          type: string
          format: uuid
        auto_maintain_tickets:
          title: Auto maintain tickets
          type: boolean
        update_closed_tickets:
          title: Update closed tickets
          type: boolean
        template:
          title: Template
          type: string
          format: uuid
    TicketHistory:
      type: object
      properties:
        id:
          title: Id
          type: string
          format: uuid
          readOnly: true
        user:
          $ref: '#/components/schemas/User'
        action:
          title: Action
          type: string
          enum:
            - Created
            - Opened
            - Updated
            - Closed
            - Commented
            - Done
            - Deleted
            - Canceled
        date:
          title: Date
          type: string
          format: date-time
          readOnly: true
        third_party_user:
          title: Third party user
          maxLength: 128
          type: string
          nullable: true
        ticket:
          title: Ticket
          type: string
          format: uuid
          nullable: true
    TicketMini:
      required:
        - name
      type: object
      properties:
        id:
          title: Id
          type: string
          format: uuid
          readOnly: true
        name:
          title: Name
          minLength: 1
          type: string
    TicketTemplate:
      required:
        - data_type
        - name
      type: object
      properties:
        id:
          title: Id
          type: string
          format: uuid
          readOnly: true
        name:
          title: Name
          maxLength: 255
          minLength: 1
          type: string
        data_type:
          title: Data type
          type: string
          enum:
            - control
            - finding
            - data-list
        title_template:
          title: Title template
          minLength: 1
          type: string
        dynamic_template:
          title: Dynamic template
          type: string
          nullable: true
        static_template:
          title: Static template
          type: string
          nullable: true
        attachment_template:
          title: Attachment template
          minLength: 1
          type: string
        attachment:
          title: Attachment
          type: boolean
    TicketTemplateMini:
      required:
        - id
      type: object
      properties:
        id:
          title: Id
          type: string
          format: uuid
        name:
          title: Name
          minLength: 1
          type: string
          readOnly: true
    TicketUpdate:
      required:
        - title
      type: object
      properties:
        id:
          title: Id
          type: string
          format: uuid
          readOnly: true
        label_id:
          title: Label id
          type: string
          format: uuid
        baseline_id:
          title: Baseline id
          type: string
          format: uuid
        label:
          title: Label
          minLength: 1
          type: string
          readOnly: true
        asset_ids:
          type: array
          items:
            type: string
            nullable: true
        assets:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/Asset'
        updated_by:
          title: Updated by
          minLength: 1
          type: string
          readOnly: true
        created_by:
          title: Created by
          minLength: 1
          type: string
          readOnly: true
        updated_at:
          title: Updated at
          type: string
          format: date-time
          readOnly: true
        created_at:
          title: Created at
          type: string
          format: date-time
          readOnly: true
        project:
          title: Project
          maxLength: 20
          type: string
          nullable: true
        project_name:
          title: Project name
          maxLength: 128
          type: string
          nullable: true
        priority:
          title: Priority
          maxLength: 20
          type: string
          nullable: true
        issue_type:
          title: Issue type
          maxLength: 20
          type: string
          nullable: true
        issue_type_name:
          title: Issue type name
          maxLength: 64
          type: string
          nullable: true
        desk_url:
          title: Desk url
          maxLength: 200
          type: string
          format: uri
          nullable: true
        desk_id:
          title: Desk id
          maxLength: 32
          type: string
          nullable: true
        desk_key:
          title: Desk key
          maxLength: 20
          type: string
          nullable: true
        title:
          title: Title
          minLength: 1
          type: string
        description:
          title: Description
          type: string
          nullable: true
        attachment:
          title: Attachment
          type: string
          nullable: true
        third_party_user:
          title: Third party user
          maxLength: 128
          type: string
          nullable: true
        status:
          title: Status
          type: string
          enum:
            - Opened
            - Ongoing
            - Canceled
            - Closed
        closed_at:
          title: Closed at
          type: string
          format: date-time
          nullable: true
        baseline:
          title: Baseline
          type: string
          format: uuid
          nullable: true
        ticket_configuration:
          title: Ticket configuration
          type: string
          format: uuid
          nullable: true
    Token:
      required:
        - name
      type: object
      properties:
        id:
          title: Id
          type: string
          format: uuid
          readOnly: true
        token:
          title: Token
          type: string
          readOnly: true
        expiry_at:
          title: Expiry at
          type: string
          format: date-time
          nullable: true
        name:
          title: Name
          maxLength: 50
          minLength: 1
          type: string
        created_at:
          title: Created at
          type: string
          format: date-time
          readOnly: true
        expiration_days:
          title: Expiration days
          type: string
          enum:
            - 7 Days
            - 15 Days
            - 30 Days
            - Custom
        tenant:
          title: Tenant
          type: integer
          readOnly: true
        target:
          title: Target
          type: string
          format: uuid
          nullable: true
        tag:
          title: Tag
          type: string
          format: uuid
          nullable: true
    UserCreate:
      required:
        - email
        - first_name
        - last_name
      type: object
      properties:
        id:
          title: ID
          type: integer
          readOnly: true
        email:
          title: Email
          minLength: 1
          type: string
          format: email
        first_name:
          title: First name
          minLength: 1
          type: string
        last_name:
          title: Last name
          minLength: 1
          type: string
    ManageRoleUserProfile:
      required:
        - role_id
        - user
      type: object
      properties:
        user:
          $ref: '#/components/schemas/UserCreate'
        role_id:
          title: Role id
          type: string
          format: uuid
        label_ids:
          type: array
          items:
            type: string
            nullable: true
        group_ids:
          type: array
          items:
            type: string
            nullable: true
        role:
          $ref: '#/components/schemas/RoleRead'
        labels:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/Label'
        groups:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/Group'
        mfa:
          title: Mfa
          type: boolean
    UserProfileListMini:
      type: object
      properties:
        id:
          title: Id
          type: string
          format: uuid
          readOnly: true
        username:
          title: Username
          minLength: 1
          type: string
          readOnly: true
        email:
          title: Email
          minLength: 1
          type: string
          readOnly: true
    CreateUserTenant:
      required:
        - email
        - username
      type: object
      properties:
        id:
          title: ID
          type: integer
          readOnly: true
        username:
          title: Username
          minLength: 1
          type: string
        email:
          title: Email
          minLength: 1
          type: string
          format: email
        first_name:
          title: First name
          maxLength: 150
          type: string
        last_name:
          title: Last name
          maxLength: 150
          type: string
    ChangePassword:
      required:
        - new_password
        - old_password
      type: object
      properties:
        old_password:
          title: Old password
          minLength: 1
          type: string
        new_password:
          title: New password
          minLength: 1
          type: string
    Variable:
      required:
        - name
        - variable_set
      type: object
      properties:
        id:
          title: Id
          type: string
          format: uuid
          readOnly: true
        value:
          title: Value
          type: string
          readOnly: true
        full_name:
          title: Full name
          minLength: 1
          type: string
          readOnly: true
        name:
          title: Name
          maxLength: 255
          minLength: 1
          type: string
        hvac_path:
          title: Hvac path
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
          type: string
          format: slug
          nullable: true
        encrypted:
          title: Encrypted
          type: boolean
        variable_type:
          title: Variable type
          type: integer
        has_value:
          title: Has value
          type: boolean
          readOnly: true
        variable_set:
          title: Variable set
          type: string
          format: uuid
    VariableMini:
      type: object
      properties:
        id:
          title: Id
          type: string
          format: uuid
          readOnly: true
        value:
          title: Value
          type: string
          readOnly: true
        full_name:
          title: Full name
          minLength: 1
          type: string
          readOnly: true
    VariableInline:
      required:
        - name
      type: object
      properties:
        id:
          title: Id
          type: string
          format: uuid
          readOnly: true
        name:
          title: Name
          maxLength: 255
          minLength: 1
          type: string
        hvac_path:
          title: Hvac path
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
          type: string
          format: slug
          nullable: true
        encrypted:
          title: Encrypted
          type: boolean
        value:
          title: Value
          type: string
          nullable: true
        variable_type:
          title: Variable type
          type: integer
    VariableSet:
      required:
        - hvac_path
        - name
      type: object
      properties:
        id:
          title: Id
          type: string
          format: uuid
          readOnly: true
        variables:
          type: array
          items:
            $ref: '#/components/schemas/VariableInline'
        name:
          title: Name
          maxLength: 255
          minLength: 1
          type: string
        hvac_path:
          title: Hvac path
          maxLength: 255
          minLength: 1
          pattern: '^[-a-zA-Z0-9_]+$'
          type: string
          format: slug
    EmailVerification:
      type: object
    VisiblePermissions:
      required:
        - permission_id
        - permission_name
      type: object
      properties:
        id:
          title: Id
          type: string
          format: uuid
          readOnly: true
        category:
          title: Category
          type: string
          format: uuid
          readOnly: true
        permission_id:
          title: Permission id
          maxLength: 100
          minLength: 1
          type: string
        permission_name:
          title: Permission name
          maxLength: 100
          minLength: 1
          type: string
    VulnerabilityUpdate:
      required:
        - description
        - solution
      type: object
      properties:
        risk_factor:
          title: Risk factor
          type: string
          enum:
            - Unknown
            - Informational
            - Low
            - Medium
            - High
            - Critical
        description:
          title: Description
          minLength: 1
          type: string
        solution:
          title: Solution
          minLength: 1
          type: string
    VulnerabilityConfig:
      required:
        - name
      type: object
      properties:
        id:
          title: Id
          type: string
          format: uuid
          readOnly: true
        asset:
          $ref: '#/components/schemas/AssetMini'
        asset_id:
          title: Asset id
          type: string
          format: uuid
          nullable: true
        target:
          title: Target
          type: string
          readOnly: true
        target_id:
          title: Target id
          type: string
          format: uuid
          nullable: true
        name:
          title: Name
          maxLength: 256
          minLength: 1
          type: string
        data_type:
          title: Data type
          type: string
          nullable: true
          enum:
            - nessus
            - nipper
            - nipper_cis
            - nipper_stig
            - nipper_security
            - vulners
            - vulndb
            - fortify
            - sonarqube
            - burp
            - zap
            - package
            - cloc
            - clair
            - droopescan
            - veracode
            - securityhub
            - lambdaguard
            - trivy
            - sonatype
            - shodan
            - kubehunter
            - kube rbac
            - kubebench
            - snyk
            - cloudsploit
        filter_fields:
          type: array
          nullable: true
          items:
            title: Filter fields
            maxLength: 64
            minLength: 1
            type: string
        display_fields:
          type: array
          nullable: true
          items:
            title: Display fields
            maxLength: 64
            minLength: 1
            type: string
        table_properties:
          title: Table properties
          type: object
          properties: {}
  securitySchemes:
    Bearer:
      description: Auth token of the user
      in: header
      name: Authorization
      type: apiKey
    X-Tenant-Id:
      description: Tenant ID
      in: header
      name: X-Tenant-Id
      type: apiKey
